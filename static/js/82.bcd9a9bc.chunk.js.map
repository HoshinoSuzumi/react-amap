{"version":3,"file":"static/js/82.bcd9a9bc.chunk.js","mappings":"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","sources":["../../src/main.js","../../node_modules/unist-util-stringify-position/index.js","../../node_modules/vfile-message/index.js","../../node_modules/vfile/lib/minpath.browser.js","../../node_modules/vfile/lib/minproc.browser.js","../../node_modules/vfile/lib/minurl.shared.js","../../node_modules/vfile/lib/minurl.browser.js","../../node_modules/vfile/lib/index.js","../../node_modules/@babel/runtime/helpers/esm/toArray.js","../../node_modules/bail/index.js","../../node_modules/unified/node_modules/is-plain-obj/index.js","../../node_modules/trough/index.js","../../node_modules/unified/lib/index.js","../../node_modules/mdast-util-to-string/index.js","../../node_modules/micromark-util-chunked/index.js","../../node_modules/micromark-util-combine-extensions/index.js","../../node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","../../node_modules/micromark-util-character/index.js","../../node_modules/micromark-factory-space/index.js","../../node_modules/micromark/lib/initialize/content.js","../../node_modules/micromark/lib/initialize/document.js","../../node_modules/micromark-core-commonmark/lib/blank-line.js","../../node_modules/micromark-util-subtokenize/index.js","../../node_modules/micromark-core-commonmark/lib/content.js","../../node_modules/micromark/lib/initialize/flow.js","../../node_modules/micromark/lib/initialize/text.js","../../node_modules/micromark-util-resolve-all/index.js","../../node_modules/micromark/lib/create-tokenizer.js","../../node_modules/micromark-core-commonmark/lib/thematic-break.js","../../node_modules/micromark-core-commonmark/lib/list.js","../../node_modules/micromark-core-commonmark/lib/block-quote.js","../../node_modules/micromark-factory-destination/index.js","../../node_modules/micromark-factory-label/index.js","../../node_modules/micromark-factory-title/index.js","../../node_modules/micromark-factory-whitespace/index.js","../../node_modules/micromark-util-normalize-identifier/index.js","../../node_modules/micromark-core-commonmark/lib/definition.js","../../node_modules/micromark-core-commonmark/lib/code-indented.js","../../node_modules/micromark-core-commonmark/lib/heading-atx.js","../../node_modules/micromark-core-commonmark/lib/setext-underline.js","../../node_modules/micromark-util-html-tag-name/index.js","../../node_modules/micromark-core-commonmark/lib/html-flow.js","../../node_modules/micromark-core-commonmark/lib/code-fenced.js","../../node_modules/micromark-core-commonmark/lib/character-reference.js","../../node_modules/micromark-core-commonmark/lib/character-escape.js","../../node_modules/micromark-core-commonmark/lib/line-ending.js","../../node_modules/micromark-core-commonmark/lib/label-end.js","../../node_modules/micromark-core-commonmark/lib/label-start-image.js","../../node_modules/micromark-util-classify-character/index.js","../../node_modules/micromark-core-commonmark/lib/attention.js","../../node_modules/micromark-core-commonmark/lib/autolink.js","../../node_modules/micromark-core-commonmark/lib/html-text.js","../../node_modules/micromark-core-commonmark/lib/label-start-link.js","../../node_modules/micromark-core-commonmark/lib/hard-break-escape.js","../../node_modules/micromark-core-commonmark/lib/code-text.js","../../node_modules/micromark/lib/constructs.js","../../node_modules/micromark/lib/preprocess.js","../../node_modules/micromark-util-decode-numeric-character-reference/index.js","../../node_modules/micromark-util-decode-string/index.js","../../node_modules/mdast-util-from-markdown/lib/index.js","../../node_modules/micromark/lib/postprocess.js","../../node_modules/micromark/lib/parse.js","../../node_modules/remark-parse/index.js","../../node_modules/remark-parse/lib/index.js","../../node_modules/unist-builder/index.js","../../node_modules/unist-util-is/index.js","../../node_modules/unist-util-visit-parents/index.js","../../node_modules/unist-util-visit/index.js","../../node_modules/unist-util-position/index.js","../../node_modules/mdast-util-definitions/index.js","../../node_modules/mdast-util-to-hast/lib/traverse.js","../../node_modules/micromark-util-encode/index.js","../../node_modules/micromark-util-sanitize-uri/index.js","../../node_modules/mdast-util-to-hast/lib/wrap.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote-reference.js","../../node_modules/mdast-util-to-hast/lib/revert.js","../../node_modules/mdast-util-to-hast/lib/handlers/list-item.js","../../node_modules/trim-lines/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/index.js","../../node_modules/mdast-util-to-hast/lib/handlers/blockquote.js","../../node_modules/mdast-util-to-hast/lib/handlers/break.js","../../node_modules/mdast-util-to-hast/lib/handlers/code.js","../../node_modules/mdast-util-to-hast/lib/handlers/delete.js","../../node_modules/mdast-util-to-hast/lib/handlers/emphasis.js","../../node_modules/mdast-util-to-hast/lib/handlers/footnote.js","../../node_modules/mdast-util-to-hast/lib/handlers/heading.js","../../node_modules/mdast-util-to-hast/lib/handlers/html.js","../../node_modules/mdast-util-to-hast/lib/handlers/image-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/image.js","../../node_modules/mdast-util-to-hast/lib/handlers/inline-code.js","../../node_modules/mdast-util-to-hast/lib/handlers/link-reference.js","../../node_modules/mdast-util-to-hast/lib/handlers/link.js","../../node_modules/mdast-util-to-hast/lib/handlers/list.js","../../node_modules/mdast-util-to-hast/lib/handlers/paragraph.js","../../node_modules/mdast-util-to-hast/lib/handlers/root.js","../../node_modules/mdast-util-to-hast/lib/handlers/strong.js","../../node_modules/mdast-util-to-hast/lib/handlers/table.js","../../node_modules/mdast-util-to-hast/lib/handlers/text.js","../../node_modules/mdast-util-to-hast/lib/handlers/thematic-break.js","../../node_modules/mdast-util-to-hast/lib/index.js","../../node_modules/unist-util-generated/index.js","../../node_modules/mdast-util-to-hast/lib/footer.js","../../node_modules/remark-rehype/lib/index.js","../../node_modules/react-markdown/lib/rehype-filter.js","../../node_modules/react-markdown/lib/uri-transformer.js","../../node_modules/hast-util-whitespace/index.js","../../node_modules/property-information/lib/hast-to-react.js","../../node_modules/react-markdown/lib/ast-to-react.js","../../node_modules/react-markdown/lib/react-markdown.js","../../node_modules/micromark-extension-gfm-autolink-literal/lib/syntax.js","../../node_modules/micromark-extension-gfm-footnote/lib/syntax.js","../../node_modules/micromark-extension-gfm-strikethrough/lib/syntax.js","../../node_modules/micromark-extension-gfm-table/lib/syntax.js","../../node_modules/micromark-extension-gfm-task-list-item/lib/syntax.js","../../node_modules/micromark-extension-gfm/index.js","../../node_modules/ccount/index.js","../../node_modules/mdast-util-find-and-replace/lib/index.js","../../node_modules/mdast-util-find-and-replace/node_modules/escape-string-regexp/index.js","../../node_modules/mdast-util-gfm-autolink-literal/index.js","../../node_modules/mdast-util-to-markdown/lib/util/association.js","../../node_modules/mdast-util-to-markdown/lib/util/track.js","../../node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../../node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../../node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/mdast-util-to-markdown/lib/util/safe.js","../../node_modules/mdast-util-gfm-footnote/index.js","../../node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../../node_modules/mdast-util-gfm-strikethrough/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/markdown-table/index.js","../../node_modules/mdast-util-gfm-table/lib/index.js","../../node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/mdast-util-gfm-task-list-item/index.js","../../node_modules/mdast-util-gfm/lib/index.js","../../node_modules/remark-gfm/index.js","../../node_modules/hast-util-has-property/index.js","../../node_modules/hast-util-heading-rank/index.js","../../node_modules/hast-util-to-string/index.js","../../node_modules/rehype-slug/index.js","../../node_modules/hast-util-is-element/index.js","../../node_modules/rehype-autolink-headings/lib/index.js","../../node_modules/hastscript/lib/svg.js","../../node_modules/hastscript/lib/svg-case-sensitive-tag-names.js","../../node_modules/web-namespaces/index.js","../../node_modules/hast-util-from-parse5/lib/index.js","../../node_modules/vfile-location/index.js","../../node_modules/hast-to-hyperscript/index.js","../../node_modules/zwitch/index.js","../../node_modules/hast-util-to-parse5/lib/index.js","../../node_modules/html-void-elements/index.js","../../node_modules/hast-util-raw/lib/index.js","../../node_modules/rehype-raw/index.js","../../node_modules/rehype-attr/src/utils.ts","../../node_modules/rehype-attr/src/index.ts","../../node_modules/rehype-ignore/src/index.ts","../../node_modules/unist-util-filter/index.js","../../src/generator.js","../../src/all.js","../../src/common.js","../../node_modules/direction/index.js","../../node_modules/hast-util-select/lib/util.js","../../node_modules/hast-util-select/lib/enter-state.js","../../node_modules/hast-util-select/lib/nest.js","../../node_modules/bcp-47-match/index.js","../../node_modules/hast-util-select/lib/pseudo.js","../../node_modules/hast-util-select/lib/attribute.js","../../node_modules/hast-util-select/lib/test.js","../../node_modules/hast-util-select/lib/name.js","../../node_modules/hast-util-select/lib/class-name.js","../../node_modules/hast-util-select/lib/id.js","../../node_modules/hast-util-select/lib/any.js","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/parse.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/index.ts","../https:/raw.githubusercontent.com/fb55/nth-check/639fd2a4000b69f82350aad8c34cb43f77e483ba/src/compile.ts","../../node_modules/hast-util-select/lib/parse.js","../../node_modules/hast-util-select/index.js","../../node_modules/rehype-rewrite/src/index.ts","../../node_modules/@uiw/react-markdown-preview/src/nodes/octiconLink.ts","../../node_modules/@uiw/react-markdown-preview/src/plugins/reservedMeta.ts","../../node_modules/@uiw/react-markdown-preview/src/index.tsx","../../node_modules/@uiw/react-markdown-preview/src/nodes/copy.ts","../../node_modules/babel-plugin-transform-remove-imports/lib/index.js","../../node_modules/boolbase/index.js","../../node_modules/css-selector-parser/lib/index.js","../../node_modules/css-selector-parser/lib/parser-context.js","../../node_modules/css-selector-parser/lib/render.js","../../node_modules/css-selector-parser/lib/utils.js","../../node_modules/extend/index.js","../../node_modules/github-slugger/index.js","../../node_modules/github-slugger/regex.js","../../node_modules/inline-style-parser/index.js","../../node_modules/is-buffer/index.js","../../node_modules/markdown-react-code-preview-loader/src/utils/index.ts","../../node_modules/mdurl/encode.js","../../node_modules/parse-numeric-range/index.js","../../node_modules/prop-types/factoryWithThrowingShims.js","../../node_modules/prop-types/index.js","../../node_modules/prop-types/lib/ReactPropTypesSecret.js","../../node_modules/react-code-preview-layout/src/icons.tsx","../../node_modules/react-code-preview-layout/src/Copied.tsx","../../node_modules/react-code-preview-layout/src/index.tsx","../../node_modules/react-markdown/node_modules/react-is/cjs/react-is.production.min.js","../../node_modules/react-markdown/node_modules/react-is/index.js","../../node_modules/remark-stringify/index.js","../../node_modules/remark-stringify/node_modules/longest-streak/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/configure.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/break.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/code.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/definition.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/heading.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/html.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/image.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/link.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/list.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/root.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/strong.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/text.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/index.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/join.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/unsafe.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/association.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-rule-repeat.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/container-flow.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-markdown/lib/util/safe.js","../../node_modules/remark-stringify/node_modules/mdast-util-to-string/index.js","../../node_modules/remark-stringify/node_modules/parse-entities/decode-entity.browser.js","../../node_modules/remark-stringify/node_modules/zwitch/index.js","../../node_modules/remark/index.js","../../node_modules/remark/node_modules/bail/index.js","../../node_modules/remark/node_modules/is-plain-obj/index.js","../../node_modules/remark/node_modules/mdast-util-from-markdown/dist/index.js","../../node_modules/remark/node_modules/mdast-util-from-markdown/index.js","../../node_modules/remark/node_modules/mdast-util-to-string/index.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-alpha.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-alphanumeric.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-atext.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-control.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-digit.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-hex-digit.js","../../node_modules/remark/node_modules/micromark/dist/character/ascii-punctuation.js","../../node_modules/remark/node_modules/micromark/dist/character/markdown-line-ending-or-space.js","../../node_modules/remark/node_modules/micromark/dist/character/markdown-line-ending.js","../../node_modules/remark/node_modules/micromark/dist/character/markdown-space.js","../../node_modules/remark/node_modules/micromark/dist/character/unicode-punctuation.js","../../node_modules/remark/node_modules/micromark/dist/character/unicode-whitespace.js","../../node_modules/remark/node_modules/micromark/dist/constant/assign.js","../../node_modules/remark/node_modules/micromark/dist/constant/from-char-code.js","../../node_modules/remark/node_modules/micromark/dist/constant/has-own-property.js","../../node_modules/remark/node_modules/micromark/dist/constant/html-block-names.js","../../node_modules/remark/node_modules/micromark/dist/constant/html-raw-names.js","../../node_modules/remark/node_modules/micromark/dist/constant/splice.js","../../node_modules/remark/node_modules/micromark/dist/constant/unicode-punctuation-regex.js","../../node_modules/remark/node_modules/micromark/dist/constructs.js","../../node_modules/remark/node_modules/micromark/dist/initialize/content.js","../../node_modules/remark/node_modules/micromark/dist/initialize/document.js","../../node_modules/remark/node_modules/micromark/dist/initialize/flow.js","../../node_modules/remark/node_modules/micromark/dist/initialize/text.js","../../node_modules/remark/node_modules/micromark/dist/parse.js","../../node_modules/remark/node_modules/micromark/dist/postprocess.js","../../node_modules/remark/node_modules/micromark/dist/preprocess.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/attention.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/autolink.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/block-quote.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/character-escape.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/character-reference.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/code-fenced.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/code-indented.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/code-text.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/content.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/definition.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-destination.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-label.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-space.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-title.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/factory-whitespace.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/hard-break-escape.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/heading-atx.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/html-flow.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/html-text.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/label-end.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/label-start-image.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/label-start-link.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/line-ending.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/list.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/partial-blank-line.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/setext-underline.js","../../node_modules/remark/node_modules/micromark/dist/tokenize/thematic-break.js","../../node_modules/remark/node_modules/micromark/dist/util/chunked-push.js","../../node_modules/remark/node_modules/micromark/dist/util/chunked-splice.js","../../node_modules/remark/node_modules/micromark/dist/util/classify-character.js","../../node_modules/remark/node_modules/micromark/dist/util/combine-extensions.js","../../node_modules/remark/node_modules/micromark/dist/util/create-tokenizer.js","../../node_modules/remark/node_modules/micromark/dist/util/miniflat.js","../../node_modules/remark/node_modules/micromark/dist/util/move-point.js","../../node_modules/remark/node_modules/micromark/dist/util/normalize-identifier.js","../../node_modules/remark/node_modules/micromark/dist/util/prefix-size.js","../../node_modules/remark/node_modules/micromark/dist/util/regex-check.js","../../node_modules/remark/node_modules/micromark/dist/util/resolve-all.js","../../node_modules/remark/node_modules/micromark/dist/util/safe-from-int.js","../../node_modules/remark/node_modules/micromark/dist/util/serialize-chunks.js","../../node_modules/remark/node_modules/micromark/dist/util/shallow.js","../../node_modules/remark/node_modules/micromark/dist/util/size-chunks.js","../../node_modules/remark/node_modules/micromark/dist/util/slice-chunks.js","../../node_modules/remark/node_modules/micromark/dist/util/subtokenize.js","../../node_modules/remark/node_modules/parse-entities/decode-entity.browser.js","../../node_modules/remark/node_modules/remark-parse/index.js","../../node_modules/remark/node_modules/trough/index.js","../../node_modules/remark/node_modules/trough/wrap.js","../../node_modules/remark/node_modules/unified/index.js","../../node_modules/remark/node_modules/unist-util-stringify-position/index.js","../../node_modules/remark/node_modules/vfile-message/index.js","../../node_modules/remark/node_modules/vfile/index.js","../../node_modules/remark/node_modules/vfile/lib/core.js","../../node_modules/remark/node_modules/vfile/lib/index.js","../../node_modules/remark/node_modules/vfile/lib/minpath.browser.js","../../node_modules/remark/node_modules/vfile/lib/minproc.browser.js","../../node_modules/repeat-string/index.js","../../node_modules/style-to-object/index.js","../../node_modules/@babel/runtime/helpers/arrayLikeToArray.js","../../node_modules/@babel/runtime/helpers/arrayWithHoles.js","../../node_modules/@babel/runtime/helpers/createForOfIteratorHelper.js","../../node_modules/@babel/runtime/helpers/get.js","../../node_modules/@babel/runtime/helpers/iterableToArrayLimit.js","../../node_modules/@babel/runtime/helpers/nonIterableRest.js","../../node_modules/@babel/runtime/helpers/slicedToArray.js","../../node_modules/@babel/runtime/helpers/superPropBase.js","../../node_modules/@babel/runtime/helpers/unsupportedIterableToArray.js","../../node_modules/comma-separated-tokens/index.js","../../node_modules/decode-named-character-reference/index.dom.js","../../node_modules/hast-util-parse-selector/index.js","../../node_modules/hastscript/lib/core.js","../../node_modules/hastscript/lib/html.js","../../node_modules/character-entities-legacy/index.js","../../node_modules/character-reference-invalid/index.js","../../node_modules/is-decimal/index.js","../../node_modules/is-hexadecimal/index.js","../../node_modules/is-alphanumerical/index.js","../../node_modules/is-alphabetical/index.js","../../node_modules/parse-entities/lib/index.js","../../node_modules/property-information/lib/util/schema.js","../../node_modules/property-information/lib/util/merge.js","../../node_modules/property-information/lib/util/create.js","../../node_modules/property-information/lib/xlink.js","../../node_modules/property-information/lib/xml.js","../../node_modules/property-information/lib/util/case-sensitive-transform.js","../../node_modules/property-information/lib/util/case-insensitive-transform.js","../../node_modules/property-information/lib/xmlns.js","../../node_modules/property-information/lib/aria.js","../../node_modules/property-information/lib/html.js","../../node_modules/property-information/lib/svg.js","../../node_modules/property-information/index.js","../../node_modules/property-information/lib/find.js","../../node_modules/property-information/lib/normalize.js","../../node_modules/property-information/lib/util/defined-info.js","../../node_modules/property-information/lib/util/info.js","../../node_modules/property-information/lib/util/types.js","../../node_modules/space-separated-tokens/index.js"],"sourcesContent":["/**\n * *** This styling is an extra step which is likely not required. ***\n * https://github.com/w3c/clipboard-apis/blob/master/explainer.adoc#writing-to-the-clipboard\n * \n * Why is it here? To ensure:\n * \n * 1. the element is able to have focus and selection.\n * 2. if element was to flash render it has minimal visual impact.\n * 3. less flakyness with selection and copying which **might** occur if\n *     the textarea element is not visible.\n *\n *   The likelihood is the element won't even render, not even a flash,\n *   so some of these are just precautions. However in IE the element\n *   is visible whilst the popup box asking the user for permission for\n *   the web page to copy to the clipboard.\n *  \n *   Place in top-left corner of screen regardless of scroll position.\n *\n * @typedef CopyTextToClipboard\n * @property {(text: string, method?: (isCopy: boolean) => void) => void} void\n * @returns {void}\n * \n * @param {string} text \n * @param {CopyTextToClipboard} cb \n */\nexport default function copyTextToClipboard(text, cb) {\n  const el = document.createElement('textarea');\n  el.value = text;\n  el.setAttribute('readonly', '');\n  el.style = {\n    position: 'absolute',\n    left: '-9999px',\n  }\n  document.body.appendChild(el);\n  const selected = document.getSelection().rangeCount > 0 ? document.getSelection().getRangeAt(0) : false;\n  el.select();\n  let isCopy = false;\n  try {\n    const successful = document.execCommand('copy');\n    isCopy = !!successful;\n  } catch (err) {\n    isCopy = false;\n  }\n  document.body.removeChild(el);\n  if (selected && document.getSelection) {\n    document.getSelection().removeAllRanges();\n    document.getSelection().addRange(selected);\n  }\n  cb && cb(isCopy);\n};\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\n/**\n * Stringify one point, a position (start and end points), or a node’s\n * positional information.\n *\n * @param {Node|NodeLike|Position|Point|null} [value]\n * @returns {string}\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point|undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position|undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number|undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position|undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\nexport class VFileMessage extends Error {\n  /**\n   * Constructor of a message for `reason` at `place` from `origin`.\n   * When an error is passed in as `reason`, copies the `stack`.\n   *\n   * @param {string|Error} reason Reason for message (`string` or `Error`). Uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place] Place at which the message occurred in a file (`Node`, `Position`, or `Point`, optional).\n   * @param {string} [origin] Place in code the message originates from (`string`, optional).\n   */\n  constructor(reason, place, origin) {\n    /** @type {[string|null, string|null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`\n    this.name = stringifyPosition(place) || '1:1'\n    this.message = typeof reason === 'object' ? reason.message : reason\n    this.stack = typeof reason === 'object' ? reason.stack : ''\n\n    /**\n     * Reason for message.\n     * @type {string}\n     */\n    this.reason = this.message\n    /**\n     * If true, marks associated file as no longer processable.\n     * @type {boolean?}\n     */\n    // eslint-disable-next-line no-unused-expressions\n    this.fatal\n    /**\n     * Starting line of error.\n     * @type {number?}\n     */\n    this.line = position.start.line\n    /**\n     * Starting column of error.\n     * @type {number?}\n     */\n    this.column = position.start.column\n    /**\n     * Namespace of warning.\n     * @type {string?}\n     */\n    this.source = parts[0]\n    /**\n     * Category of message.\n     * @type {string?}\n     */\n    this.ruleId = parts[1]\n    /**\n     * Full range information, when available.\n     * Has start and end properties, both set to an object with line and column, set to number?.\n     * @type {Position?}\n     */\n    this.position = position\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * You can use this to specify the source value that’s being reported, which\n     * is deemed incorrect.\n     * @type {string?}\n     */\n    this.actual\n    /**\n     * You can use this to suggest values that should be used instead of\n     * `actual`, one or more values that are deemed as acceptable.\n     * @type {Array<string>?}\n     */\n    this.expected\n    /**\n     * You may add a file property with a path of a file (used throughout the VFile ecosystem).\n     * @type {string?}\n     */\n    this.file\n    /**\n     * You may add a url property with a link to documentation for the message.\n     * @type {string?}\n     */\n    this.url\n    /**\n     * You may add a note property with a long form description of the message (supported by vfile-reporter).\n     * @type {string?}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * @param {string} path\n * @param {string} [ext]\n * @returns {string}\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * @param {string} path\n * @returns {string}\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean|undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * @param {Array<string>} segments\n * @returns {string}\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string|undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Note: `normalize` is not exposed as `path.normalize`, so some code is\n * manually removed from it.\n *\n * @param {string} path\n * @returns {string}\n */\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n * @param {boolean} allowAboveRoot\n * @returns {string}\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number|undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {string} path\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * @param {unknown} fileURLOrPath\n * @returns {fileURLOrPath is URL}\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileURLOrPath) {\n  return (\n    fileURLOrPath !== null &&\n    typeof fileURLOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileURLOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string|URL} path\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * @param {URL} url\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {Record<string, unknown> & {type: string, position?: Position|undefined}} NodeLike\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n *\n * @typedef {'ascii'|'utf8'|'utf-8'|'utf16le'|'ucs2'|'ucs-2'|'base64'|'base64url'|'latin1'|'binary'|'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *   This is a copy of the typing from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Value|Options|VFile|URL} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n * @property {Value} [value]\n * @property {string} [cwd]\n * @property {Array<string>} [history]\n * @property {string|URL} [path]\n * @property {string} [basename]\n * @property {string} [stem]\n * @property {string} [extname]\n * @property {string} [dirname]\n * @property {Data} [data]\n *\n * @typedef Map\n *   Raw source map, see:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n * @property {Array<string>} sources\n * @property {Array<string>} names\n * @property {string|undefined} [sourceRoot]\n * @property {Array<string>|undefined} [sourcesContent]\n * @property {string} mappings\n * @property {string} file\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration: a bunch of keys that will be shallow copied over to the new\n *   file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n * @typedef {<T = ReporterSettings>(files: Array<VFile>, options: T) => string} Reporter\n */\n\nimport buffer from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * If `options` is `string` or `Buffer`, it’s treated as `{value: options}`.\n   * If `options` is a `URL`, it’s treated as `{path: options}`.\n   * If `options` is a `VFile`, shallow copies its data over to the new file.\n   * All fields in `options` are set on the newly created `VFile`.\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * It’s not possible to set either `dirname` or `extname` without setting\n   * either `history`, `path`, `basename`, or `stem` as well.\n   *\n   * @param {Compatible} [value]\n   */\n  constructor(value) {\n    /** @type {Options} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      // @ts-expect-error Looks like a buffer.\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      // @ts-expect-error Looks like file or options.\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     * The first is the original path and the last is the current path.\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     * This is used by vfile reporters.\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Sometimes files have a non-string, compiled, representation.\n     * This can be stored in the `result` field.\n     * One example is when turning markdown into React nodes.\n     * This is used by unified to store non-string results.\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Sometimes files have a source map associated with them.\n     * This can be stored in the `map` field.\n     * This should be a `Map` type, which is equivalent to the `RawSourceMap`\n     * type from the `source-map` module.\n     * @type {Map|undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (prop in options && options[prop] !== undefined) {\n        // @ts-expect-error: TS is confused by the different types for `history`.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) this[prop] = options[prop]\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   * @param {string|URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding} [encoding='utf8']\n   *   When `value` is a `Buffer`, `encoding` is a character encoding to\n   *   understand it as (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding)\n  }\n\n  /**\n   * Constructs a new `VFileMessage`, where `fatal` is set to `false`, and\n   * associates it with the file by adding it to `vfile.messages` and setting\n   * `message.file` to the current filepath.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates an informational message where\n   * `fatal` is set to `null`.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Like `VFile#message()`, but associates a fatal message where `fatal` is\n   * set to `true`, and then immediately throws it.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string|Error} reason\n   *   Human readable reason for the message, uses the stack and message of the error if given.\n   * @param {Node|NodeLike|Position|Point} [place]\n   *   Place where the message occurred in the file.\n   * @param {string} [origin]\n   *   Computer readable reason for the message\n   * @returns {never}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {void}\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string|undefined} part\n * @param {string} name\n * @returns {asserts part is string}\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string|undefined} path\n * @param {string} name\n * @returns {asserts path is string}\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _toArray(arr) {\n  return arrayWithHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableRest();\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef Options\n * @property {boolean} [includeImageAlt=true]\n */\n\n/**\n * Get the text content of a node.\n * Prefer the node’s plain-text fields, otherwise serialize its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} node\n * @param {Options} [options]\n * @returns {string}\n */\nexport function toString(node, options) {\n  var {includeImageAlt = true} = options || {}\n  return one(node, includeImageAlt)\n}\n\n/**\n * @param {unknown} node\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction one(node, includeImageAlt) {\n  return (\n    (node &&\n      typeof node === 'object' &&\n      // @ts-ignore looks like a literal.\n      (node.value ||\n        // @ts-ignore looks like an image.\n        (includeImageAlt ? node.alt : '') ||\n        // @ts-ignore looks like a parent.\n        ('children' in node && all(node.children, includeImageAlt)) ||\n        (Array.isArray(node) && all(node, includeImageAlt)))) ||\n    ''\n  )\n}\n\n/**\n * @param {Array.<unknown>} values\n * @param {boolean} includeImageAlt\n * @returns {string}\n */\nfunction all(values, includeImageAlt) {\n  /** @type {Array.<string>} */\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt)\n  }\n\n  return result.join('')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {StackItem[]} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Construct[]} */\n\n  const resolveAllConstructs = []\n  /** @type {Chunk[]} */\n\n  let chunks = []\n  /** @type {Token[]} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Construct[]|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Construct[]} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Construct[]} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Chunk[]} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Chunk[]}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Chunk[]} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Chunk[]} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {string[]} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Chunk[]}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Chunk[]} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n *\n * @typedef {UnistParent & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @typedef _CompileDataFields\n * @property {boolean|undefined} expectingFirstListItemValue\n * @property {boolean|undefined} flowCodeInside\n * @property {boolean|undefined} setextHeadingSlurpLineEnding\n * @property {boolean|undefined} atHardBreak\n * @property {'collapsed'|'full'} referenceType\n * @property {boolean|undefined} inReference\n * @property {'characterReferenceMarkerHexadecimal'|'characterReferenceMarkerNumeric'} characterReferenceType\n *\n * @typedef {Record<string, unknown> & Partial<_CompileDataFields>} CompileData\n *\n * @typedef {(tree: Root) => Root|void} Transform\n * @typedef {(this: CompileContext, token: Token) => void} Handle\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n * @typedef {Record<string, Record<string, unknown>|Array<unknown>> & {canContainEols: Array<string>, transforms: Array<Transform>, enter: Handles, exit: Handles}} NormalizedExtension\n * @typedef {Partial<NormalizedExtension>} Extension\n *   An mdast extension changes how markdown tokens are turned into mdast.\n *\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token|undefined, right: Token) => void} OnEnterError\n * @typedef {(this: Omit<CompileContext, 'sliceSerialize'>, left: Token, right: Token) => void} OnExitError\n *\n * @typedef CompileContext\n *   mdast compiler context\n * @property {Array<Node | Fragment>} stack\n * @property {Array<[Token, OnEnterError|undefined]>} tokenStack\n * @property {(key: string, value?: unknown) => void} setData\n *   Set data into the key-value store.\n * @property {<K extends string>(key: K) => CompileData[K]} getData\n *   Get data from the key-value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<N extends Node>(this: CompileContext, node: N, token: Token, onError?: OnEnterError) => N} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {NormalizedExtension} config\n *   Configuration.\n *\n * @typedef {{mdastExtensions?: Array<Extension|Array<Extension>>}} FromMarkdownOptions\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n */\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n/**\n * @param value Markdown to parse (`string` or `Buffer`).\n * @param [encoding] Character encoding to understand `value` as when it’s a `Buffer` (`string`, default: `'utf8'`).\n * @param [options] Configuration\n */\n\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options) => Root) &\n   *   ((value: Value, options?: Options) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding} [encoding]\n   * @param {Options} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n\n    return compiler(options)(\n      postprocess(\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options} [options]\n */\n\nfunction compiler(options = {}) {\n  /** @type {NormalizedExtension} */\n  // @ts-expect-error: our base has all required fields, so the result will too.\n  const config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n    options.mdastExtensions || []\n  )\n  /** @type {CompileData} */\n\n  const data = {}\n  return compile\n  /**\n   * @param {Array<Event>} events\n   * @returns {Root}\n   */\n\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {CompileContext['stack']} */\n\n    const stack = [tree]\n    /** @type {CompileContext['tokenStack']} */\n\n    const tokenStack = []\n    /** @type {Array<number>} */\n\n    const listStack = []\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n\n    const context = {\n      stack,\n      tokenStack,\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    let index = -1\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length > 0) {\n      const tail = tokenStack[tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    } // Figure out `root` position.\n\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n    index = -1\n\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token|undefined} */\n\n    let listItem\n    /** @type {number|undefined} */\n\n    let lineIndex\n    /** @type {number|undefined} */\n\n    let firstBlankLineIndex\n    /** @type {boolean|undefined} */\n\n    let atMarker\n\n    while (++index <= length) {\n      const event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          } // Fix position.\n\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        } // Create a new list item.\n\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          } // @ts-expect-error: `listItem` is most definitely defined, TS...\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    } // @ts-expect-error Patched.\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n  /**\n   * @type {CompileContext['setData']}\n   * @param [value]\n   */\n\n  function setData(key, value) {\n    data[key] = value\n  }\n  /**\n   * @type {CompileContext['getData']}\n   * @template {string} K\n   * @param {K} key\n   * @returns {CompileData[K]}\n   */\n\n  function getData(key) {\n    return data[key]\n  }\n  /**\n   * @param {Point} d\n   * @returns {Point}\n   */\n\n  function point(d) {\n    return {\n      line: d.line,\n      column: d.column,\n      offset: d.offset\n    }\n  }\n  /**\n   * @param {(token: Token) => Node} create\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function opener(create, and) {\n    return open\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n  /** @type {CompileContext['buffer']} */\n\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n  /**\n   * @type {CompileContext['enter']}\n   * @template {Node} N\n   * @this {CompileContext}\n   * @param {N} node\n   * @param {Token} token\n   * @param {OnEnterError} [errorHandler]\n   * @returns {N}\n   */\n\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler]) // @ts-expect-error: `end` will be patched later.\n\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n  /**\n   * @param {Handle} [and]\n   * @returns {Handle}\n   */\n\n  function closer(and) {\n    return close\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n  /**\n   * @type {CompileContext['exit']}\n   * @this {CompileContext}\n   * @param {Token} token\n   * @param {OnExitError} [onExitError]\n   * @returns {Node}\n   */\n\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n\n  function resume() {\n    return toString(this.stack.pop())\n  } //\n  // Handlers.\n  //\n\n  /** @type {Handle} */\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n  /** @type {Handle} */\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor =\n        /** @type {List} */\n        this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n  /** @type {Handle} */\n\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n  /** @type {Handle} */\n\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node =\n      /** @type {Code} */\n      this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    const label = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Definition} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitatxheadingsequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheadinglinesequence(token) {\n    const node =\n      /** @type {Heading} */\n      this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n  /** @type {Handle} */\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n  /** @type {Handle} */\n\n  function onenterdata(token) {\n    const parent =\n      /** @type {Parent} */\n      this.stack[this.stack.length - 1]\n    /** @type {Node} */\n\n    let tail = parent.children[parent.children.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text() // @ts-expect-error: we’ll add `end` later.\n\n      tail.position = {\n        start: point(token.start)\n      } // @ts-expect-error: Assume `parent` accepts `text`.\n\n      parent.children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n  /** @type {Handle} */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n  /** @type {Handle} */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n  /** @type {Handle} */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node =\n      /** @type {HTML} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node =\n      /** @type {InlineCode} */\n      this.stack[this.stack.length - 1]\n    node.value = data\n  }\n  /** @type {Handle} */\n\n  function onexitlink() {\n    const context =\n      /** @type {Link & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitimage() {\n    const context =\n      /** @type {Image & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // To do: clean.\n\n    if (getData('inReference')) {\n      context.type += 'Reference' // @ts-expect-error: mutate.\n\n      context.referenceType = getData('referenceType') || 'shortcut' // @ts-expect-error: mutate.\n\n      delete context.url\n      delete context.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete context.identifier // @ts-expect-error: mutate.\n\n      delete context.label\n    }\n\n    setData('referenceType')\n  }\n  /** @type {Handle} */\n\n  function onexitlabeltext(token) {\n    const ancestor =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 2]\n    const string = this.sliceSerialize(token)\n    ancestor.label = decodeString(string)\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n  /** @type {Handle} */\n\n  function onexitlabel() {\n    const fragment =\n      /** @type {Fragment} */\n      this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node =\n      /** @type {(Link|Image) & {identifier: string, label: string}} */\n      this.stack[this.stack.length - 1] // Assume a reference.\n\n    setData('inReference', true)\n\n    if (node.type === 'link') {\n      // @ts-expect-error: Assume static phrasing content.\n      node.children = fragment.children\n    } else {\n      node.alt = value\n    }\n  }\n  /** @type {Handle} */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.url = data\n  }\n  /** @type {Handle} */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node =\n      /** @type {Link|Image} */\n      this.stack[this.stack.length - 1]\n    node.title = data\n  }\n  /** @type {Handle} */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n  /** @type {Handle} */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n  /** @type {Handle} */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node =\n      /** @type {LinkReference|ImageReference} */\n      this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n  /** @type {Handle} */\n\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n\n    let value\n\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      // @ts-expect-error `decodeNamedCharacterReference` can return false for\n      // invalid named character references, but everything we’ve tokenized is\n      // valid.\n      value = decodeNamedCharacterReference(data)\n    }\n\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n  /** @type {Handle} */\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node =\n      /** @type {Link} */\n      this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  } //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n  /** @returns {Code} */\n\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n  /** @returns {InlineCode} */\n\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n  /** @returns {Definition} */\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n  /** @returns {Emphasis} */\n\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n  /** @returns {Heading} */\n\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n  /** @returns {Break} */\n\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n  /** @returns {HTML} */\n\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n  /** @returns {Image} */\n\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n  /** @returns {Link} */\n\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n  /** @returns {Paragraph} */\n\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n  /** @returns {Strong} */\n\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n  /** @returns {Text} */\n\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n  /** @returns {ThematicBreak} */\n\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n/**\n * @param {Extension} combined\n * @param {Array<Extension|Array<Extension>>} extensions\n * @returns {Extension}\n */\n\nfunction configure(combined, extensions) {\n  let index = -1\n\n  while (++index < extensions.length) {\n    const value = extensions[index]\n\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n\n  return combined\n}\n/**\n * @param {Extension} combined\n * @param {Extension} extension\n * @returns {void}\n */\n\nfunction extension(combined, extension) {\n  /** @type {string} */\n  let key\n\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      const list = key === 'canContainEols' || key === 'transforms'\n      const maybe = own.call(combined, key) ? combined[key] : undefined\n      /* c8 ignore next */\n\n      const left = maybe || (combined[key] = list ? [] : {})\n      const right = extension[key]\n\n      if (right) {\n        if (list) {\n          // @ts-expect-error: `left` is an array.\n          combined[key] = [...left, ...right]\n        } else {\n          Object.assign(left, right)\n        }\n      }\n    }\n  }\n}\n/** @type {OnEnterError} */\n\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Event[]} events\n * @returns {Event[]}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist').Literal} Literal\n * @typedef {Object.<string, unknown>} Props\n * @typedef {Array.<Node>|string} ChildrenOrValue\n *\n * @typedef {(<T extends string, P extends Record<string, unknown>, C extends Node[]>(type: T, props: P, children: C) => {type: T, children: C} & P)} BuildParentWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P, value: string) => {type: T, value: string} & P)} BuildLiteralWithProps\n * @typedef {(<T extends string, P extends Record<string, unknown>>(type: T, props: P) => {type: T} & P)} BuildVoidWithProps\n * @typedef {(<T extends string, C extends Node[]>(type: T, children: C) => {type: T, children: C})} BuildParent\n * @typedef {(<T extends string>(type: T, value: string) => {type: T, value: string})} BuildLiteral\n * @typedef {(<T extends string>(type: T) => {type: T})} BuildVoid\n */\n\nexport var u = /**\n * @type {BuildVoid & BuildVoidWithProps & BuildLiteral & BuildLiteralWithProps & BuildParent & BuildParentWithProps}\n */ (\n  /**\n   * @param {string} type Type of node\n   * @param {Props|ChildrenOrValue} [props] Additional properties for node (or `children` or `value`)\n   * @param {ChildrenOrValue} [value] `children` or `value` of node\n   * @returns {Node}\n   */\n  function (type, props, value) {\n    /** @type {Node} */\n    var node = {type: String(type)}\n\n    if (\n      (value === undefined || value === null) &&\n      (typeof props === 'string' || Array.isArray(props))\n    ) {\n      value = props\n    } else {\n      Object.assign(node, props)\n    }\n\n    if (Array.isArray(value)) {\n      node.children = value\n    } else if (value !== undefined && value !== null) {\n      node.value = String(value)\n    }\n\n    return node\n  }\n)\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n *\n * @typedef {string} Type\n * @typedef {Object<string, unknown>} Props\n *\n * @typedef {null|undefined|Type|Props|TestFunctionAnything|Array.<Type|Props|TestFunctionAnything>} Test\n */\n\n/**\n * Check if a node passes a test\n *\n * @callback TestFunctionAnything\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} X\n * @callback TestFunctionPredicate\n * @param {Node} node\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is X}\n */\n\n/**\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node passes a certain node test\n *\n * @template {Node} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\nexport const is =\n  /**\n   * Check if a node passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (<T extends Node>(node: unknown, test: T['type']|Partial<T>|TestFunctionPredicate<T>|Array.<T['type']|Partial<T>|TestFunctionPredicate<T>>, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => node is T) &\n   *   ((node?: unknown, test?: Test, index?: number|null|undefined, parent?: Parent|null|undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number|null|undefined} [index] Position of `node` in `parent`\n     * @param {Parent|null|undefined} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is a `Node` (object with `type` set to non-empty `string`).\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\nexport const convert =\n  /**\n   * @type {(\n   *   (<T extends Node>(test: T['type']|Partial<T>|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n/**\n * @param {Array.<Type|Props|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to assert each property in `test` is represented in `node`, and each\n * values are strictly equal.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n *\n * @param {Type} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s type\n * for said string.\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(...parameters) {\n    // @ts-expect-error: spreading is fine.\n    return Boolean(check.call(this, ...parameters))\n  }\n}\n\n// Utility to return true.\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('./complex-types').Action} Action\n * @typedef {import('./complex-types').Index} Index\n * @typedef {import('./complex-types').ActionTuple} ActionTuple\n * @typedef {import('./complex-types').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal\n */\nexport const CONTINUE = true\n/**\n * Do not traverse this node’s children\n */\nexport const SKIP = 'skip'\n/**\n * Stop traversing immediately\n */\nexport const EXIT = false\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test node, optional\n * @param visitor Function to run for each node\n * @param reverse Visit the tree in reverse order, defaults to false\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor<Node>} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, null, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number?} index\n       * @param {Array.<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Object.<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = typeof node === 'object' && node !== null ? node : {}\n        /** @type {string|undefined} */\n        let name\n\n        if (typeof value.type === 'string') {\n          name =\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' +\n              color(value.type + (name ? '<' + name + '>' : '')) +\n              ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array.<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * @param {VisitorResult} value\n * @returns {ActionTuple}\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n * @typedef {import('./complex-types').Visitor} Visitor\n */\n\nimport {visitParents, CONTINUE, SKIP, EXIT} from 'unist-util-visit-parents'\n\nexport {CONTINUE, SKIP, EXIT}\n\n/**\n * Visit children of tree which pass a test\n *\n * @param tree Abstract syntax tree to walk\n * @param test Test, optional\n * @param visitor Function to run for each node\n * @param reverse Fisit the tree in reverse, defaults to false\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: import('./complex-types').BuildVisitor<Tree, Check>, reverse?: boolean) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: import('./complex-types').BuildVisitor<Tree>, reverse?: boolean) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {import('./complex-types').Visitor} visitor\n     * @param {boolean} [reverse]\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array.<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n","/**\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Node} Node\n * @typedef {Record<string, unknown> & {type: string, position?: PositionLike|undefined}} NodeLike\n * @typedef {import('unist').Point} Point\n *\n * @typedef {Partial<Point>} PointLike\n *\n * @typedef PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n */\n\nexport const pointStart = point('start')\nexport const pointEnd = point('end')\n\n/**\n * Get the positional info of `node`.\n *\n * @param {NodeLike|Node} [node]\n * @returns {Position}\n */\nexport function position(node) {\n  return {start: pointStart(node), end: pointEnd(node)}\n}\n\n/**\n * Get the positional info of `node`.\n *\n * @param {'start'|'end'} type\n */\nfunction point(type) {\n  return point\n\n  /**\n   * Get the positional info of `node`.\n   *\n   * @param {NodeLike|Node} [node]\n   * @returns {Point}\n   */\n  function point(node) {\n    const point = (node && node.position && node.position[type]) || {}\n\n    return {\n      line: point.line || null,\n      column: point.column || null,\n      offset: point.offset > -1 ? point.offset : null\n    }\n  }\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast').Definition} Definition\n */\n\nimport {visit} from 'unist-util-visit'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Find definitions in `node`.\n * Uses CommonMark precedence, which means that earlier definitions are\n * preferred over duplicate later definitions.\n *\n * @param {Node} node\n */\nexport function definitions(node) {\n  /** @type {Record<string, Definition>} */\n  const cache = Object.create(null)\n\n  if (!node || !node.type) {\n    throw new Error('mdast-util-definitions expected node')\n  }\n\n  visit(node, 'definition', (definition) => {\n    const id = clean(definition.identifier)\n    if (id && !own.call(cache, id)) {\n      cache[id] = definition\n    }\n  })\n\n  return definition\n\n  /**\n   * Get a node from the bound definition cache.\n   *\n   * @param {string} identifier\n   * @returns {Definition|null}\n   */\n  function definition(identifier) {\n    const id = clean(identifier)\n    return id && own.call(cache, id) ? cache[id] : null\n  }\n}\n\n/**\n * @param {string} [value]\n * @returns {string}\n */\nfunction clean(value) {\n  return String(value || '').toUpperCase()\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('./index.js').H} H\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Transform an unknown node.\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction unknown(h, node) {\n  const data = node.data || {}\n\n  if (\n    'value' in node &&\n    !(\n      own.call(data, 'hName') ||\n      own.call(data, 'hProperties') ||\n      own.call(data, 'hChildren')\n    )\n  ) {\n    return h.augment(node, u('text', node.value))\n  }\n\n  return h(node, 'div', all(h, node))\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nexport function one(h, node, parent) {\n  const type = node && node.type\n  /** @type {Handler} */\n  let fn\n\n  // Fail on non-nodes.\n  if (!type) {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n\n  if (own.call(h.handlers, type)) {\n    fn = h.handlers[type]\n  } else if (h.passThrough && h.passThrough.includes(type)) {\n    fn = returnNode\n  } else {\n    fn = h.unknownHandler\n  }\n\n  return (typeof fn === 'function' ? fn : unknown)(h, node, parent)\n}\n\n/**\n * @type {Handler}\n * @param {MdastNode} node\n */\nfunction returnNode(h, node) {\n  // @ts-expect-error: Pass through custom node.\n  return 'children' in node ? {...node, children: all(h, node)} : node\n}\n\n/**\n * @param {H} h\n * @param {MdastNode} parent\n */\nexport function all(h, parent) {\n  /** @type {Array<Content>} */\n  const values = []\n\n  if ('children' in parent) {\n    const nodes = parent.children\n    let index = -1\n\n    while (++index < nodes.length) {\n      const result = one(h, nodes[index], parent)\n\n      if (result) {\n        if (index && nodes[index - 1].type === 'break') {\n          if (!Array.isArray(result) && result.type === 'text') {\n            result.value = result.value.replace(/^\\s+/, '')\n          }\n\n          if (!Array.isArray(result) && result.type === 'element') {\n            const head = result.children[0]\n\n            if (head && head.type === 'text') {\n              head.value = head.value.replace(/^\\s+/, '')\n            }\n          }\n        }\n\n        if (Array.isArray(result)) {\n          values.push(...result)\n        } else {\n          values.push(result)\n        }\n      }\n    }\n  }\n\n  return values\n}\n","const characterReferences = {'\"': 'quot', '&': 'amp', '<': 'lt', '>': 'gt'}\n\n/**\n * Encode only the dangerous HTML characters.\n *\n * This ensures that certain characters which have special meaning in HTML are\n * dealt with.\n * Technically, we can skip `>` and `\"` in many cases, but CM includes them.\n *\n * @param {string} value\n * @returns {string}\n */\nexport function encode(value) {\n  return value.replace(/[\"&<>]/g, replace)\n\n  /**\n   * @param {string} value\n   * @returns {string}\n   */\n  function replace(value) {\n    // @ts-expect-error Hush, it’s fine.\n    return '&' + characterReferences[value] + ';'\n  }\n}\n","import {asciiAlphanumeric} from 'micromark-util-character'\nimport {encode} from 'micromark-util-encode'\n\n/**\n * Make a value safe for injection as a URL.\n *\n * This encodes unsafe characters with percent-encoding and skips already\n * encoded sequences (see `normalizeUri` below).\n * Further unsafe characters are encoded as character references (see\n * `micromark-util-encode`).\n *\n * Then, a regex of allowed protocols can be given, in which case the URL is\n * sanitized.\n * For example, `/^(https?|ircs?|mailto|xmpp)$/i` can be used for `a[href]`,\n * or `/^https?$/i` for `img[src]`.\n * If the URL includes an unknown protocol (one not matched by `protocol`, such\n * as a dangerous example, `javascript:`), the value is ignored.\n *\n * @param {string|undefined} url\n * @param {RegExp} [protocol]\n * @returns {string}\n */\nexport function sanitizeUri(url, protocol) {\n  const value = encode(normalizeUri(url || ''))\n\n  if (!protocol) {\n    return value\n  }\n\n  const colon = value.indexOf(':')\n  const questionMark = value.indexOf('?')\n  const numberSign = value.indexOf('#')\n  const slash = value.indexOf('/')\n\n  if (\n    // If there is no protocol, it’s relative.\n    colon < 0 || // If the first colon is after a `?`, `#`, or `/`, it’s not a protocol.\n    (slash > -1 && colon > slash) ||\n    (questionMark > -1 && colon > questionMark) ||\n    (numberSign > -1 && colon > numberSign) || // It is a protocol, it should be allowed.\n    protocol.test(value.slice(0, colon))\n  ) {\n    return value\n  }\n\n  return ''\n}\n/**\n * Normalize a URL (such as used in definitions).\n *\n * Encode unsafe characters with percent-encoding, skipping already encoded\n * sequences.\n *\n * @param {string} value\n * @returns {string}\n */\n\nfunction normalizeUri(value) {\n  /** @type {string[]} */\n  const result = []\n  let index = -1\n  let start = 0\n  let skip = 0\n\n  while (++index < value.length) {\n    const code = value.charCodeAt(index)\n    /** @type {string} */\n\n    let replace = '' // A correct percent encoded value.\n\n    if (\n      code === 37 &&\n      asciiAlphanumeric(value.charCodeAt(index + 1)) &&\n      asciiAlphanumeric(value.charCodeAt(index + 2))\n    ) {\n      skip = 2\n    } // ASCII.\n    else if (code < 128) {\n      if (!/[!#$&-;=?-Z_a-z~]/.test(String.fromCharCode(code))) {\n        replace = String.fromCharCode(code)\n      }\n    } // Astral.\n    else if (code > 55295 && code < 57344) {\n      const next = value.charCodeAt(index + 1) // A correct surrogate pair.\n\n      if (code < 56320 && next > 56319 && next < 57344) {\n        replace = String.fromCharCode(code, next)\n        skip = 1\n      } // Lone surrogate.\n      else {\n        replace = '\\uFFFD'\n      }\n    } // Unicode.\n    else {\n      replace = String.fromCharCode(code)\n    }\n\n    if (replace) {\n      result.push(value.slice(start, index), encodeURIComponent(replace))\n      start = index + skip + 1\n      replace = ''\n    }\n\n    if (skip) {\n      index += skip\n      skip = 0\n    }\n  }\n\n  return result.join('') + value.slice(start)\n}\n","/**\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Wrap `nodes` with line feeds between each entry.\n * Optionally adds line feeds at the start and end.\n *\n * @param {Array<Content>} nodes\n * @param {boolean} [loose=false]\n * @returns {Array<Content>}\n */\nexport function wrap(nodes, loose) {\n  /** @type {Array<Content>} */\n  const result = []\n  let index = -1\n\n  if (loose) {\n    result.push(u('text', '\\n'))\n  }\n\n  while (++index < nodes.length) {\n    if (index) result.push(u('text', '\\n'))\n    result.push(nodes[index])\n  }\n\n  if (loose && nodes.length > 0) {\n    result.push(u('text', '\\n'))\n  }\n\n  return result\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {FootnoteReference} node\n */\nexport function footnoteReference(h, node) {\n  const id = String(node.identifier)\n  const safeId = sanitizeUri(id.toLowerCase())\n  const index = h.footnoteOrder.indexOf(id)\n  /** @type {number} */\n  let counter\n\n  if (index === -1) {\n    h.footnoteOrder.push(id)\n    h.footnoteCounts[id] = 1\n    counter = h.footnoteOrder.length\n  } else {\n    h.footnoteCounts[id]++\n    counter = index + 1\n  }\n\n  const reuseCounter = h.footnoteCounts[id]\n\n  return h(node, 'sup', [\n    h(\n      node.position,\n      'a',\n      {\n        href: '#' + h.clobberPrefix + 'fn-' + safeId,\n        id:\n          h.clobberPrefix +\n          'fnref-' +\n          safeId +\n          (reuseCounter > 1 ? '-' + reuseCounter : ''),\n        dataFootnoteRef: true,\n        ariaDescribedBy: 'footnote-label'\n      },\n      [u('text', String(counter))]\n    )\n  ])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('./index.js').Handler} Handler\n * @typedef {import('./index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\n\n/**\n * Return the content of a reference without definition as plain text.\n *\n * @type {Handler}\n * @param {ImageReference|LinkReference} node\n * @returns {Content|Array<Content>}\n */\nexport function revert(h, node) {\n  const subtype = node.referenceType\n  let suffix = ']'\n\n  if (subtype === 'collapsed') {\n    suffix += '[]'\n  } else if (subtype === 'full') {\n    suffix += '[' + (node.label || node.identifier) + ']'\n  }\n\n  if (node.type === 'imageReference') {\n    return u('text', '![' + node.alt + suffix)\n  }\n\n  const contents = all(h, node)\n  const head = contents[0]\n\n  if (head && head.type === 'text') {\n    head.value = '[' + head.value\n  } else {\n    contents.unshift(u('text', '['))\n  }\n\n  const tail = contents[contents.length - 1]\n\n  if (tail && tail.type === 'text') {\n    tail.value += suffix\n  } else {\n    contents.push(u('text', suffix))\n  }\n\n  return contents\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {ListItem} node\n * @param {List} parent\n */\nexport function listItem(h, node, parent) {\n  const result = all(h, node)\n  const loose = parent ? listLoose(parent) : listItemLoose(node)\n  /** @type {Properties} */\n  const props = {}\n  /** @type {Array<Content>} */\n  const wrapped = []\n\n  if (typeof node.checked === 'boolean') {\n    /** @type {Element} */\n    let paragraph\n\n    if (\n      result[0] &&\n      result[0].type === 'element' &&\n      result[0].tagName === 'p'\n    ) {\n      paragraph = result[0]\n    } else {\n      paragraph = h(null, 'p', [])\n      result.unshift(paragraph)\n    }\n\n    if (paragraph.children.length > 0) {\n      paragraph.children.unshift(u('text', ' '))\n    }\n\n    paragraph.children.unshift(\n      h(null, 'input', {\n        type: 'checkbox',\n        checked: node.checked,\n        disabled: true\n      })\n    )\n\n    // According to github-markdown-css, this class hides bullet.\n    // See: <https://github.com/sindresorhus/github-markdown-css>.\n    props.className = ['task-list-item']\n  }\n\n  let index = -1\n\n  while (++index < result.length) {\n    const child = result[index]\n\n    // Add eols before nodes, except if this is a loose, first paragraph.\n    if (\n      loose ||\n      index !== 0 ||\n      child.type !== 'element' ||\n      child.tagName !== 'p'\n    ) {\n      wrapped.push(u('text', '\\n'))\n    }\n\n    if (child.type === 'element' && child.tagName === 'p' && !loose) {\n      wrapped.push(...child.children)\n    } else {\n      wrapped.push(child)\n    }\n  }\n\n  const tail = result[result.length - 1]\n\n  // Add a final eol.\n  if (tail && (loose || !('tagName' in tail) || tail.tagName !== 'p')) {\n    wrapped.push(u('text', '\\n'))\n  }\n\n  return h(node, 'li', props, wrapped)\n}\n\n/**\n * @param {List} node\n * @return {Boolean}\n */\nfunction listLoose(node) {\n  let loose = node.spread\n  const children = node.children\n  let index = -1\n\n  while (!loose && ++index < children.length) {\n    loose = listItemLoose(children[index])\n  }\n\n  return Boolean(loose)\n}\n\n/**\n * @param {ListItem} node\n * @return {Boolean}\n */\nfunction listItemLoose(node) {\n  const spread = node.spread\n\n  return spread === undefined || spread === null\n    ? node.children.length > 1\n    : spread\n}\n","const tab = 9 /* `\\t` */\nconst space = 32 /* ` ` */\n\n/**\n * Remove initial and final spaces and tabs at the line breaks in `value`.\n * Does not trim initial and final spaces and tabs of the value itself.\n *\n * @param {string} value\n *   Value to trim.\n * @returns {string}\n *   Trimmed value.\n */\nexport function trimLines(value) {\n  const source = String(value)\n  const search = /\\r?\\n|\\r/g\n  let match = search.exec(source)\n  let last = 0\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (match) {\n    lines.push(\n      trimLine(source.slice(last, match.index), last > 0, true),\n      match[0]\n    )\n\n    last = match.index + match[0].length\n    match = search.exec(source)\n  }\n\n  lines.push(trimLine(source.slice(last), last > 0, false))\n\n  return lines.join('')\n}\n\n/**\n * @param {string} value\n *   Line to trim.\n * @param {boolean} start\n *   Whether to trim the start of the line.\n * @param {boolean} end\n *   Whether to trim the end of the line.\n * @returns {string}\n *   Trimmed line.\n */\nfunction trimLine(value, start, end) {\n  let startIndex = 0\n  let endIndex = value.length\n\n  if (start) {\n    let code = value.codePointAt(startIndex)\n\n    while (code === tab || code === space) {\n      startIndex++\n      code = value.codePointAt(startIndex)\n    }\n  }\n\n  if (end) {\n    let code = value.codePointAt(endIndex - 1)\n\n    while (code === tab || code === space) {\n      endIndex--\n      code = value.codePointAt(endIndex - 1)\n    }\n  }\n\n  return endIndex > startIndex ? value.slice(startIndex, endIndex) : ''\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {strikethrough} from './delete.js'\nimport {emphasis} from './emphasis.js'\nimport {footnoteReference} from './footnote-reference.js'\nimport {footnote} from './footnote.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {imageReference} from './image-reference.js'\nimport {image} from './image.js'\nimport {inlineCode} from './inline-code.js'\nimport {linkReference} from './link-reference.js'\nimport {link} from './link.js'\nimport {listItem} from './list-item.js'\nimport {list} from './list.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {table} from './table.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\nexport const handlers = {\n  blockquote,\n  break: hardBreak,\n  code,\n  delete: strikethrough,\n  emphasis,\n  footnoteReference,\n  footnote,\n  heading,\n  html,\n  imageReference,\n  image,\n  inlineCode,\n  linkReference,\n  link,\n  listItem,\n  list,\n  paragraph,\n  root,\n  strong,\n  table,\n  text,\n  thematicBreak,\n  toml: ignore,\n  yaml: ignore,\n  definition: ignore,\n  footnoteDefinition: ignore\n}\n\n// Return nothing for nodes that are ignored.\nfunction ignore() {\n  return null\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Blockquote} node\n */\nexport function blockquote(h, node) {\n  return h(node, 'blockquote', wrap(all(h, node), true))\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Break} node\n * @returns {Array<Element|Text>}\n */\nexport function hardBreak(h, node) {\n  return [h(node, 'br'), u('text', '\\n')]\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Code} node\n */\nexport function code(h, node) {\n  const value = node.value ? node.value + '\\n' : ''\n  // To do: next major, use `node.lang` w/o regex, the splitting’s been going\n  // on for years in remark now.\n  const lang = node.lang && node.lang.match(/^[^ \\t]+(?=[ \\t]|$)/)\n  /** @type {Properties} */\n  const props = {}\n\n  if (lang) {\n    props.className = ['language-' + lang]\n  }\n\n  const code = h(node, 'code', props, [u('text', value)])\n\n  if (node.meta) {\n    code.data = {meta: node.meta}\n  }\n\n  return h(node.position, 'pre', [code])\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Delete} node\n */\nexport function strikethrough(h, node) {\n  return h(node, 'del', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Emphasis} node\n */\nexport function emphasis(h, node) {\n  return h(node, 'em', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Footnote} Footnote\n * @typedef {import('../index.js').Handler} Handler\n *\n * @todo\n *   `footnote` (or “inline note”) are a pandoc footnotes feature (`^[a note]`)\n *   that does not exist in GFM.\n *   We still have support for it, so that things remain working with\n *   `micromark-extension-footnote` and `mdast-util-footnote`, but in the future\n *   we might be able to remove it?\n */\n\nimport {footnoteReference} from './footnote-reference.js'\n\n/**\n * @type {Handler}\n * @param {Footnote} node\n */\nexport function footnote(h, node) {\n  const footnoteById = h.footnoteById\n  let no = 1\n\n  while (no in footnoteById) no++\n\n  const identifier = String(no)\n\n  footnoteById[identifier] = {\n    type: 'footnoteDefinition',\n    identifier,\n    children: [{type: 'paragraph', children: node.children}],\n    position: node.position\n  }\n\n  return footnoteReference(h, {\n    type: 'footnoteReference',\n    identifier,\n    position: node.position\n  })\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Heading} node\n */\nexport function heading(h, node) {\n  return h(node, 'h' + node.depth, all(h, node))\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * Return either a `raw` node in dangerous mode, otherwise nothing.\n *\n * @type {Handler}\n * @param {HTML} node\n */\nexport function html(h, node) {\n  return h.dangerous ? h.augment(node, u('raw', node.value)) : null\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\n\n/**\n * @type {Handler}\n * @param {ImageReference} node\n */\nexport function imageReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {src: normalize(def.url || ''), alt: node.alt}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\n\n/**\n * @type {Handler}\n * @param {Image} node\n */\nexport function image(h, node) {\n  /** @type {Properties} */\n  const props = {src: normalize(node.url), alt: node.alt}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'img', props)\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {InlineCode} node\n */\nexport function inlineCode(h, node) {\n  return h(node, 'code', [u('text', node.value.replace(/\\r?\\n|\\r/g, ' '))])\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {revert} from '../revert.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {LinkReference} node\n */\nexport function linkReference(h, node) {\n  const def = h.definition(node.identifier)\n\n  if (!def) {\n    return revert(h, node)\n  }\n\n  /** @type {Properties} */\n  const props = {href: normalize(def.url || '')}\n\n  if (def.title !== null && def.title !== undefined) {\n    props.title = def.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport normalize from 'mdurl/encode.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Link} node\n */\nexport function link(h, node) {\n  /** @type {Properties} */\n  const props = {href: normalize(node.url)}\n\n  if (node.title !== null && node.title !== undefined) {\n    props.title = node.title\n  }\n\n  return h(node, 'a', props, all(h, node))\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {List} node\n * @returns {Element}\n */\nexport function list(h, node) {\n  /** @type {Properties} */\n  const props = {}\n  const name = node.ordered ? 'ol' : 'ul'\n  const items = all(h, node)\n  let index = -1\n\n  if (typeof node.start === 'number' && node.start !== 1) {\n    props.start = node.start\n  }\n\n  // Like GitHub, add a class for custom styling.\n  while (++index < items.length) {\n    const item = items[index]\n\n    if (\n      item.type === 'element' &&\n      item.tagName === 'li' &&\n      item.properties &&\n      Array.isArray(item.properties.className) &&\n      item.properties.className.includes('task-list-item')\n    ) {\n      props.className = ['contains-task-list']\n      break\n    }\n  }\n\n  return h(node, name, props, wrap(items, true))\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Paragraph} node\n */\nexport function paragraph(h, node) {\n  return h(node, 'p', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {u} from 'unist-builder'\nimport {all} from '../traverse.js'\nimport {wrap} from '../wrap.js'\n\n/**\n * @type {Handler}\n * @param {Root} node\n */\nexport function root(h, node) {\n  // @ts-expect-error `root`s are also fine.\n  return h.augment(node, u('root', wrap(all(h, node))))\n}\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Strong} node\n */\nexport function strong(h, node) {\n  return h(node, 'strong', all(h, node))\n}\n","/**\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n * @typedef {import('../index.js').Content} Content\n */\n\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {wrap} from '../wrap.js'\nimport {all} from '../traverse.js'\n\n/**\n * @type {Handler}\n * @param {Table} node\n */\nexport function table(h, node) {\n  const rows = node.children\n  let index = -1\n  const align = node.align || []\n  /** @type {Array<Element>} */\n  const result = []\n\n  while (++index < rows.length) {\n    const row = rows[index].children\n    const name = index === 0 ? 'th' : 'td'\n    /** @type {Array<Content>} */\n    const out = []\n    let cellIndex = -1\n    const length = node.align ? align.length : row.length\n\n    while (++cellIndex < length) {\n      const cell = row[cellIndex]\n      out.push(\n        h(cell, name, {align: align[cellIndex]}, cell ? all(h, cell) : [])\n      )\n    }\n\n    result[index] = h(rows[index], 'tr', wrap(out, true))\n  }\n\n  return h(\n    node,\n    'table',\n    wrap(\n      [h(result[0].position, 'thead', wrap([result[0]], true))].concat(\n        result[1]\n          ? h(\n              {\n                start: pointStart(result[1]),\n                end: pointEnd(result[result.length - 1])\n              },\n              'tbody',\n              wrap(result.slice(1), true)\n            )\n          : []\n      ),\n      true\n    )\n  )\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../index.js').Handler} Handler\n */\n\nimport {trimLines} from 'trim-lines'\nimport {u} from 'unist-builder'\n\n/**\n * @type {Handler}\n * @param {Text} node\n */\nexport function text(h, node) {\n  return h.augment(node, u('text', trimLines(String(node.value))))\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('hast').Element} Element\n * @typedef {import('../index.js').Handler} Handler\n */\n\n/**\n * @type {Handler}\n * @param {ThematicBreak} [node]\n * @returns {Element}\n */\nexport function thematicBreak(h, node) {\n  return h(node, 'hr')\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Parent['children'][number]} MdastNode\n * @typedef {import('hast').Root|import('hast').Parent['children'][number]} HastNode\n * @typedef {import('mdast').Parent} Parent\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').ElementContent} Content\n * @typedef {import('unist-util-position').PositionLike} PositionLike\n *\n * @typedef EmbeddedHastFields\n * @property {string} [hName] Defines the tag name of an element\n * @property {Properties} [hProperties] Defines the properties of an element\n * @property {Array<Content>} [hChildren] Defines the (hast) children of an element\n *\n * @typedef {Record<string, unknown> & EmbeddedHastFields} Data unist data with embedded hast fields\n *\n * @typedef {MdastNode & {data?: Data}} NodeWithData unist node with embedded hast data\n *\n * @callback Handler\n * @param {H} h Handle context\n * @param {any} node mdast node to handle\n * @param {Parent|null} parent Parent of `node`\n * @returns {Content|Array<Content>|null|undefined} hast node\n *\n * @callback HFunctionProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Properties} props Properties\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @callback HFunctionNoProps\n * @param {MdastNode|PositionLike|null|undefined} node mdast node or unist position\n * @param {string} tagName HTML tag name\n * @param {Array<Content>?} [children] hast content\n * @returns {Element}\n *\n * @typedef HFields\n * @property {boolean} dangerous Whether HTML is allowed\n * @property {string} clobberPrefix Prefix to use to prevent DOM clobbering\n * @property {string} footnoteLabel Label to use to introduce the footnote section\n * @property {string} footnoteBackLabel Label to use to go back to a footnote call from the footnote section\n * @property {(identifier: string) => Definition|null} definition Definition cache\n * @property {Record<string, FootnoteDefinition>} footnoteById Footnote cache\n * @property {Array<string>} footnoteOrder Order in which footnotes occur\n * @property {Record<string, number>} footnoteCounts Counts the same footnote was used\n * @property {Handlers} handlers Applied handlers\n * @property {Handler} unknownHandler Handler for any none not in `passThrough` or otherwise handled\n * @property {(left: NodeWithData|PositionLike|null|undefined, right: Content) => Content} augment Like `h` but lower-level and usable on non-elements.\n * @property {Array<string>} passThrough List of node types to pass through untouched (except for their children).\n *\n * @typedef Options\n * @property {boolean} [allowDangerousHtml=false]\n *   Whether to allow `html` nodes and inject them as `raw` HTML\n * @property {string} [clobberPrefix='user-content-']\n *   Prefix to use before the `id` attribute to prevent it from *clobbering*.\n *   attributes.\n *   DOM clobbering is this:\n *\n *   ```html\n *   <p id=x></p>\n *   <script>alert(x)</script>\n *   ```\n *\n *   Elements by their ID are made available in browsers on the `window` object.\n *   Using a prefix prevents this from being a problem.\n * @property {string} [footnoteLabel='Footnotes']\n *   Label to use for the footnotes section.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {string} [footnoteBackLabel='Back to content']\n *   Label to use from backreferences back to their footnote call.\n *   Affects screen reader users.\n *   Change it if you’re authoring in a different language.\n * @property {Handlers} [handlers]\n *   Object mapping mdast nodes to functions handling them\n * @property {Array<string>} [passThrough]\n *   List of custom mdast node types to pass through (keep) in hast\n * @property {Handler} [unknownHandler]\n *   Handler for all unknown nodes.\n *\n * @typedef {Record<string, Handler>} Handlers\n *   Map of node types to handlers\n * @typedef {HFunctionProps & HFunctionNoProps & HFields} H\n *   Handle context\n */\n\nimport {u} from 'unist-builder'\nimport {visit} from 'unist-util-visit'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {generated} from 'unist-util-generated'\nimport {definitions} from 'mdast-util-definitions'\nimport {one} from './traverse.js'\nimport {footer} from './footer.js'\nimport {handlers} from './handlers/index.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Factory to transform.\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {H} `h` function\n */\nfunction factory(tree, options) {\n  const settings = options || {}\n  const dangerous = settings.allowDangerousHtml || false\n  /** @type {Record<string, FootnoteDefinition>} */\n  const footnoteById = {}\n\n  h.dangerous = dangerous\n  h.clobberPrefix =\n    settings.clobberPrefix === undefined || settings.clobberPrefix === null\n      ? 'user-content-'\n      : settings.clobberPrefix\n  h.footnoteLabel = settings.footnoteLabel || 'Footnotes'\n  h.footnoteBackLabel = settings.footnoteBackLabel || 'Back to content'\n  h.definition = definitions(tree)\n  h.footnoteById = footnoteById\n  /** @type {Array<string>} */\n  h.footnoteOrder = []\n  /** @type {Record<string, number>} */\n  h.footnoteCounts = {}\n  h.augment = augment\n  h.handlers = {...handlers, ...settings.handlers}\n  h.unknownHandler = settings.unknownHandler\n  h.passThrough = settings.passThrough\n\n  visit(tree, 'footnoteDefinition', (definition) => {\n    const id = String(definition.identifier).toUpperCase()\n\n    // Mimick CM behavior of link definitions.\n    // See: <https://github.com/syntax-tree/mdast-util-definitions/blob/8290999/index.js#L26>.\n    if (!own.call(footnoteById, id)) {\n      footnoteById[id] = definition\n    }\n  })\n\n  // @ts-expect-error Hush, it’s fine!\n  return h\n\n  /**\n   * Finalise the created `right`, a hast node, from `left`, an mdast node.\n   * @param {(NodeWithData|PositionLike)?} left\n   * @param {Content} right\n   * @returns {Content}\n   */\n  function augment(left, right) {\n    // Handle `data.hName`, `data.hProperties, `data.hChildren`.\n    if (left && 'data' in left && left.data) {\n      /** @type {Data} */\n      const data = left.data\n\n      if (data.hName) {\n        if (right.type !== 'element') {\n          right = {\n            type: 'element',\n            tagName: '',\n            properties: {},\n            children: []\n          }\n        }\n\n        right.tagName = data.hName\n      }\n\n      if (right.type === 'element' && data.hProperties) {\n        right.properties = {...right.properties, ...data.hProperties}\n      }\n\n      if ('children' in right && right.children && data.hChildren) {\n        right.children = data.hChildren\n      }\n    }\n\n    if (left) {\n      const ctx = 'type' in left ? left : {position: left}\n\n      if (!generated(ctx)) {\n        // @ts-expect-error: fine.\n        right.position = {start: pointStart(ctx), end: pointEnd(ctx)}\n      }\n    }\n\n    return right\n  }\n\n  /**\n   * Create an element for `node`.\n   *\n   * @type {HFunctionProps}\n   */\n  function h(node, tagName, props, children) {\n    if (Array.isArray(props)) {\n      children = props\n      props = {}\n    }\n\n    // @ts-expect-error augmenting an element yields an element.\n    return augment(node, {\n      type: 'element',\n      tagName,\n      properties: props || {},\n      children: children || []\n    })\n  }\n}\n\n/**\n * Transform `tree` (an mdast node) to a hast node.\n *\n * @param {MdastNode} tree mdast node\n * @param {Options} [options] Configuration\n * @returns {HastNode|null|undefined} hast node\n */\nexport function toHast(tree, options) {\n  const h = factory(tree, options)\n  const node = one(h, tree, null)\n  const foot = footer(h)\n\n  if (foot) {\n    // @ts-expect-error If there’s a footer, there were definitions, meaning block\n    // content.\n    // So assume `node` is a parent node.\n    node.children.push(u('text', '\\n'), foot)\n  }\n\n  return Array.isArray(node) ? {type: 'root', children: node} : node\n}\n\nexport {handlers as defaultHandlers} from './handlers/index.js'\n","/**\n * @typedef {Object} PointLike\n * @property {number} [line]\n * @property {number} [column]\n * @property {number} [offset]\n *\n * @typedef {Object} PositionLike\n * @property {PointLike} [start]\n * @property {PointLike} [end]\n *\n * @typedef {Object} NodeLike\n * @property {PositionLike} [position]\n */\n\n/**\n * Check if `node` is *generated*.\n *\n * @param {NodeLike} [node]\n * @returns {boolean}\n */\nexport function generated(node) {\n  return (\n    !node ||\n    !node.position ||\n    !node.position.start ||\n    !node.position.start.line ||\n    !node.position.start.column ||\n    !node.position.end ||\n    !node.position.end.line ||\n    !node.position.end.column\n  )\n}\n","/**\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('./index.js').H} H\n */\n\nimport {sanitizeUri} from 'micromark-util-sanitize-uri'\nimport {u} from 'unist-builder'\nimport {all} from './traverse.js'\nimport {wrap} from './wrap.js'\n\n/**\n * @param {H} h\n */\nexport function footer(h) {\n  let index = -1\n  /** @type {Array<ElementContent>} */\n  const listItems = []\n\n  while (++index < h.footnoteOrder.length) {\n    const def = h.footnoteById[h.footnoteOrder[index].toUpperCase()]\n\n    if (!def) {\n      continue\n    }\n\n    const content = all(h, def)\n    const id = String(def.identifier)\n    const safeId = sanitizeUri(id.toLowerCase())\n    let referenceIndex = 0\n    /** @type {Array<ElementContent>} */\n    const backReferences = []\n\n    while (++referenceIndex <= h.footnoteCounts[id]) {\n      /** @type {Element} */\n      const backReference = {\n        type: 'element',\n        tagName: 'a',\n        properties: {\n          href:\n            '#' +\n            h.clobberPrefix +\n            'fnref-' +\n            safeId +\n            (referenceIndex > 1 ? '-' + referenceIndex : ''),\n          dataFootnoteBackref: true,\n          className: ['data-footnote-backref'],\n          ariaLabel: h.footnoteBackLabel\n        },\n        children: [{type: 'text', value: '↩'}]\n      }\n\n      if (referenceIndex > 1) {\n        backReference.children.push({\n          type: 'element',\n          tagName: 'sup',\n          children: [{type: 'text', value: String(referenceIndex)}]\n        })\n      }\n\n      if (backReferences.length > 0) {\n        backReferences.push({type: 'text', value: ' '})\n      }\n\n      backReferences.push(backReference)\n    }\n\n    const tail = content[content.length - 1]\n\n    if (tail && tail.type === 'element' && tail.tagName === 'p') {\n      const tailTail = tail.children[tail.children.length - 1]\n      if (tailTail && tailTail.type === 'text') {\n        tailTail.value += ' '\n      } else {\n        tail.children.push({type: 'text', value: ' '})\n      }\n\n      tail.children.push(...backReferences)\n    } else {\n      content.push(...backReferences)\n    }\n\n    /** @type {Element} */\n    const listItem = {\n      type: 'element',\n      tagName: 'li',\n      properties: {id: h.clobberPrefix + 'fn-' + safeId},\n      children: wrap(content, true)\n    }\n\n    if (def.position) {\n      listItem.position = def.position\n    }\n\n    listItems.push(listItem)\n  }\n\n  if (listItems.length === 0) {\n    return null\n  }\n\n  return {\n    type: 'element',\n    tagName: 'section',\n    properties: {dataFootnotes: true, className: ['footnotes']},\n    children: [\n      {\n        type: 'element',\n        tagName: 'h2',\n        properties: {id: 'footnote-label', className: ['sr-only']},\n        children: [u('text', h.footnoteLabel)]\n      },\n      {type: 'text', value: '\\n'},\n      {\n        type: 'element',\n        tagName: 'ol',\n        properties: {},\n        children: wrap(listItems, true)\n      },\n      {type: 'text', value: '\\n'}\n    ]\n  }\n}\n","/**\n * @typedef {import('hast').Root} HastRoot\n * @typedef {import('mdast').Root} MdastRoot\n * @typedef {import('mdast-util-to-hast').Options} Options\n * @typedef {import('unified').Processor<any, any, any, any>} Processor\n *\n * @typedef {import('mdast-util-to-hast')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {toHast} from 'mdast-util-to-hast'\n\n// Note: the `<MdastRoot, HastRoot>` overload doesn’t seem to work :'(\n\n/**\n * Plugin that turns markdown into HTML to support rehype.\n *\n * *   If a destination processor is given, that processor runs with a new HTML\n *     (hast) tree (bridge-mode).\n *     As the given processor runs with a hast tree, and rehype plugins support\n *     hast, that means rehype plugins can be used with the given processor.\n *     The hast tree is discarded in the end.\n *     It’s highly unlikely that you want to do this.\n * *   The common case is to not pass a destination processor, in which case the\n *     current processor continues running with a new HTML (hast) tree\n *     (mutate-mode).\n *     As the current processor continues with a hast tree, and rehype plugins\n *     support hast, that means rehype plugins can be used after\n *     `remark-rehype`.\n *     It’s likely that this is what you want to do.\n *\n * @param destination\n *   Optional unified processor.\n * @param options\n *   Options passed to `mdast-util-to-hast`.\n */\nconst remarkRehype =\n  /** @type {(import('unified').Plugin<[Processor, Options?]|[null|undefined, Options?]|[Options]|[], MdastRoot>)} */\n  (\n    function (destination, options) {\n      return destination && 'run' in destination\n        ? bridge(destination, options)\n        : mutate(destination || options)\n    }\n  )\n\nexport default remarkRehype\n\n/**\n * Bridge-mode.\n * Runs the destination with the new hast tree.\n *\n * @type {import('unified').Plugin<[Processor, Options?], MdastRoot>}\n */\nfunction bridge(destination, options) {\n  return (node, file, next) => {\n    destination.run(toHast(node, options), file, (error) => {\n      next(error)\n    })\n  }\n}\n\n/**\n * Mutate-mode.\n * Further plugins run on the hast tree.\n *\n * @type {import('unified').Plugin<[Options?]|void[], MdastRoot, HastRoot>}\n */\nfunction mutate(options) {\n  // @ts-expect-error: assume a corresponding node is returned by `toHast`.\n  return (node) => toHast(node, options)\n}\n","import {visit} from 'unist-util-visit'\n\n/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n *\n * @callback AllowElement\n * @param {Element} element\n * @param {number} index\n * @param {Element|Root} parent\n * @returns {boolean|undefined}\n *\n * @typedef Options\n * @property {Array<string>} [allowedElements]\n * @property {Array<string>} [disallowedElements=[]]\n * @property {AllowElement} [allowElement]\n * @property {boolean} [unwrapDisallowed=false]\n */\n\n/**\n * @type {import('unified').Plugin<[Options], Root>}\n */\nexport default function rehypeFilter(options) {\n  if (options.allowedElements && options.disallowedElements) {\n    throw new TypeError(\n      'Only one of `allowedElements` and `disallowedElements` should be defined'\n    )\n  }\n\n  if (\n    options.allowedElements ||\n    options.disallowedElements ||\n    options.allowElement\n  ) {\n    return (tree) => {\n      visit(tree, 'element', (node, index, parent_) => {\n        const parent = /** @type {Element|Root} */ (parent_)\n        /** @type {boolean|undefined} */\n        let remove\n\n        if (options.allowedElements) {\n          remove = !options.allowedElements.includes(node.tagName)\n        } else if (options.disallowedElements) {\n          remove = options.disallowedElements.includes(node.tagName)\n        }\n\n        if (!remove && options.allowElement && typeof index === 'number') {\n          remove = !options.allowElement(node, index, parent)\n        }\n\n        if (remove && typeof index === 'number') {\n          if (options.unwrapDisallowed && node.children) {\n            parent.children.splice(index, 1, ...node.children)\n          } else {\n            parent.children.splice(index, 1)\n          }\n\n          return index\n        }\n\n        return undefined\n      })\n    }\n  }\n}\n","const protocols = ['http', 'https', 'mailto', 'tel']\n\n/**\n * @param {string} uri\n * @returns {string}\n */\nexport function uriTransformer(uri) {\n  const url = (uri || '').trim()\n  const first = url.charAt(0)\n\n  if (first === '#' || first === '/') {\n    return url\n  }\n\n  const colon = url.indexOf(':')\n  if (colon === -1) {\n    return url\n  }\n\n  let index = -1\n\n  while (++index < protocols.length) {\n    const protocol = protocols[index]\n\n    if (\n      colon === protocol.length &&\n      url.slice(0, protocol.length).toLowerCase() === protocol\n    ) {\n      return url\n    }\n  }\n\n  index = url.indexOf('?')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  index = url.indexOf('#')\n  if (index !== -1 && colon > index) {\n    return url\n  }\n\n  // eslint-disable-next-line no-script-url\n  return 'javascript:void(0)'\n}\n","/**\n * @param {unknown} thing\n * @returns {boolean}\n */\nexport function whitespace(thing) {\n  /** @type {string} */\n  var value =\n    // @ts-ignore looks like a node.\n    thing && typeof thing === 'object' && thing.type === 'text'\n      ? // @ts-ignore looks like a text.\n        thing.value || ''\n      : thing\n\n  // HTML whitespace expression.\n  // See <https://html.spec.whatwg.org/#space-character>.\n  return typeof value === 'string' && value.replace(/[ \\t\\n\\f\\r]/g, '') === ''\n}\n","export const hastToReact = {\n  classId: 'classID',\n  dataType: 'datatype',\n  itemId: 'itemID',\n  strokeDashArray: 'strokeDasharray',\n  strokeDashOffset: 'strokeDashoffset',\n  strokeLineCap: 'strokeLinecap',\n  strokeLineJoin: 'strokeLinejoin',\n  strokeMiterLimit: 'strokeMiterlimit',\n  typeOf: 'typeof',\n  xLinkActuate: 'xlinkActuate',\n  xLinkArcRole: 'xlinkArcrole',\n  xLinkHref: 'xlinkHref',\n  xLinkRole: 'xlinkRole',\n  xLinkShow: 'xlinkShow',\n  xLinkTitle: 'xlinkTitle',\n  xLinkType: 'xlinkType',\n  xmlnsXLink: 'xmlnsXlink'\n}\n","/**\n * @template T\n * @typedef {import('react').ComponentType<T>} ComponentType<T>\n */\n\n/**\n * @template T\n * @typedef {import('react').ComponentPropsWithoutRef<T>} ComponentPropsWithoutRef<T>\n */\n\n/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('unist').Position} Position\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').ElementContent} ElementContent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('./complex-types').ReactMarkdownProps} ReactMarkdownProps\n *\n * @typedef Raw\n * @property {'raw'} type\n * @property {string} value\n *\n * @typedef Context\n * @property {Options} options\n * @property {Schema} schema\n * @property {number} listDepth\n *\n * @callback TransformLink\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {string}\n *\n * @callback TransformImage\n * @param {string} src\n * @param {string} alt\n * @param {string?} title\n * @returns {string}\n *\n * @typedef {import('react').HTMLAttributeAnchorTarget} TransformLinkTargetType\n *\n * @callback TransformLinkTarget\n * @param {string} href\n * @param {Array<ElementContent>} children\n * @param {string?} title\n * @returns {TransformLinkTargetType|undefined}\n *\n * @typedef {keyof JSX.IntrinsicElements} ReactMarkdownNames\n *\n * To do: is `data-sourcepos` typeable?\n *\n * @typedef {ComponentPropsWithoutRef<'code'> & ReactMarkdownProps & {inline?: boolean}} CodeProps\n * @typedef {ComponentPropsWithoutRef<'h1'> & ReactMarkdownProps & {level: number}} HeadingProps\n * @typedef {ComponentPropsWithoutRef<'li'> & ReactMarkdownProps & {checked: boolean|null, index: number, ordered: boolean}} LiProps\n * @typedef {ComponentPropsWithoutRef<'ol'> & ReactMarkdownProps & {depth: number, ordered: true}} OrderedListProps\n * @typedef {ComponentPropsWithoutRef<'table'> & ReactMarkdownProps & {style?: Record<string, unknown>, isHeader: boolean}} TableCellProps\n * @typedef {ComponentPropsWithoutRef<'tr'> & ReactMarkdownProps & {isHeader: boolean}} TableRowProps\n * @typedef {ComponentPropsWithoutRef<'ul'> & ReactMarkdownProps & {depth: number, ordered: false}} UnorderedListProps\n *\n * @typedef {ComponentType<CodeProps>} CodeComponent\n * @typedef {ComponentType<HeadingProps>} HeadingComponent\n * @typedef {ComponentType<LiProps>} LiComponent\n * @typedef {ComponentType<OrderedListProps>} OrderedListComponent\n * @typedef {ComponentType<TableCellProps>} TableCellComponent\n * @typedef {ComponentType<TableRowProps>} TableRowComponent\n * @typedef {ComponentType<UnorderedListProps>} UnorderedListComponent\n *\n * @typedef SpecialComponents\n * @property {CodeComponent|ReactMarkdownNames} code\n * @property {HeadingComponent|ReactMarkdownNames} h1\n * @property {HeadingComponent|ReactMarkdownNames} h2\n * @property {HeadingComponent|ReactMarkdownNames} h3\n * @property {HeadingComponent|ReactMarkdownNames} h4\n * @property {HeadingComponent|ReactMarkdownNames} h5\n * @property {HeadingComponent|ReactMarkdownNames} h6\n * @property {LiComponent|ReactMarkdownNames} li\n * @property {OrderedListComponent|ReactMarkdownNames} ol\n * @property {TableCellComponent|ReactMarkdownNames} td\n * @property {TableCellComponent|ReactMarkdownNames} th\n * @property {TableRowComponent|ReactMarkdownNames} tr\n * @property {UnorderedListComponent|ReactMarkdownNames} ul\n *\n * @typedef {Partial<Omit<import('./complex-types').NormalComponents, keyof SpecialComponents> & SpecialComponents>} Components\n *\n * @typedef Options\n * @property {boolean} [sourcePos=false]\n * @property {boolean} [rawSourcePos=false]\n * @property {boolean} [skipHtml=false]\n * @property {boolean} [includeElementIndex=false]\n * @property {null|false|TransformLink} [transformLinkUri]\n * @property {TransformImage} [transformImageUri]\n * @property {TransformLinkTargetType|TransformLinkTarget} [linkTarget]\n * @property {Components} [components]\n */\n\nimport React from 'react'\nimport ReactIs from 'react-is'\nimport {whitespace} from 'hast-util-whitespace'\nimport {svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\n\nconst own = {}.hasOwnProperty\n\n// The table-related elements that must not contain whitespace text according\n// to React.\nconst tableElements = new Set(['table', 'thead', 'tbody', 'tfoot', 'tr'])\n\n/**\n * @param {Context} context\n * @param {Element|Root} node\n */\nexport function childrenToReact(context, node) {\n  /** @type {Array<ReactNode>} */\n  const children = []\n  let childIndex = -1\n  /** @type {Comment|Doctype|Element|Raw|Text} */\n  let child\n\n  while (++childIndex < node.children.length) {\n    child = node.children[childIndex]\n\n    if (child.type === 'element') {\n      children.push(toReact(context, child, childIndex, node))\n    } else if (child.type === 'text') {\n      // Currently, a warning is triggered by react for *any* white space in\n      // tables.\n      // So we drop it.\n      // See: <https://github.com/facebook/react/pull/7081>.\n      // See: <https://github.com/facebook/react/pull/7515>.\n      // See: <https://github.com/remarkjs/remark-react/issues/64>.\n      // See: <https://github.com/remarkjs/react-markdown/issues/576>.\n      if (\n        node.type !== 'element' ||\n        !tableElements.has(node.tagName) ||\n        !whitespace(child)\n      ) {\n        children.push(child.value)\n      }\n    } else if (child.type === 'raw' && !context.options.skipHtml) {\n      // Default behavior is to show (encoded) HTML.\n      children.push(child.value)\n    }\n  }\n\n  return children\n}\n\n/**\n * @param {Context} context\n * @param {Element} node\n * @param {number} index\n * @param {Element|Root} parent\n */\nfunction toReact(context, node, index, parent) {\n  const options = context.options\n  const parentSchema = context.schema\n  /** @type {ReactMarkdownNames} */\n  // @ts-expect-error assume a known HTML/SVG element.\n  const name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const properties = {}\n  let schema = parentSchema\n  /** @type {string} */\n  let property\n\n  if (parentSchema.space === 'html' && name === 'svg') {\n    schema = svg\n    context.schema = schema\n  }\n\n  if (node.properties) {\n    for (property in node.properties) {\n      if (own.call(node.properties, property)) {\n        addProperty(properties, property, node.properties[property], context)\n      }\n    }\n  }\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth++\n  }\n\n  const children = childrenToReact(context, node)\n\n  if (name === 'ol' || name === 'ul') {\n    context.listDepth--\n  }\n\n  // Restore parent schema.\n  context.schema = parentSchema\n\n  // Nodes created by plugins do not have positional info, in which case we use\n  // an object that matches the position interface.\n  const position = node.position || {\n    start: {line: null, column: null, offset: null},\n    end: {line: null, column: null, offset: null}\n  }\n  const component =\n    options.components && own.call(options.components, name)\n      ? options.components[name]\n      : name\n  const basic = typeof component === 'string' || component === React.Fragment\n\n  if (!ReactIs.isValidElementType(component)) {\n    throw new TypeError(\n      `Component for name \\`${name}\\` not defined or is not renderable`\n    )\n  }\n\n  properties.key = [\n    name,\n    position.start.line,\n    position.start.column,\n    index\n  ].join('-')\n\n  if (name === 'a' && options.linkTarget) {\n    properties.target =\n      typeof options.linkTarget === 'function'\n        ? options.linkTarget(\n            String(properties.href || ''),\n            node.children,\n            typeof properties.title === 'string' ? properties.title : null\n          )\n        : options.linkTarget\n  }\n\n  if (name === 'a' && options.transformLinkUri) {\n    properties.href = options.transformLinkUri(\n      String(properties.href || ''),\n      node.children,\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (\n    !basic &&\n    name === 'code' &&\n    parent.type === 'element' &&\n    parent.tagName !== 'pre'\n  ) {\n    properties.inline = true\n  }\n\n  if (\n    !basic &&\n    (name === 'h1' ||\n      name === 'h2' ||\n      name === 'h3' ||\n      name === 'h4' ||\n      name === 'h5' ||\n      name === 'h6')\n  ) {\n    properties.level = Number.parseInt(name.charAt(1), 10)\n  }\n\n  if (name === 'img' && options.transformImageUri) {\n    properties.src = options.transformImageUri(\n      String(properties.src || ''),\n      String(properties.alt || ''),\n      typeof properties.title === 'string' ? properties.title : null\n    )\n  }\n\n  if (!basic && name === 'li' && parent.type === 'element') {\n    const input = getInputElement(node)\n    properties.checked =\n      input && input.properties ? Boolean(input.properties.checked) : null\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.ordered = parent.tagName === 'ol'\n  }\n\n  if (!basic && (name === 'ol' || name === 'ul')) {\n    properties.ordered = name === 'ol'\n    properties.depth = context.listDepth\n  }\n\n  if (name === 'td' || name === 'th') {\n    if (properties.align) {\n      if (!properties.style) properties.style = {}\n      // @ts-expect-error assume `style` is an object\n      properties.style.textAlign = properties.align\n      delete properties.align\n    }\n\n    if (!basic) {\n      properties.isHeader = name === 'th'\n    }\n  }\n\n  if (!basic && name === 'tr' && parent.type === 'element') {\n    properties.isHeader = Boolean(parent.tagName === 'thead')\n  }\n\n  // If `sourcePos` is given, pass source information (line/column info from markdown source).\n  if (options.sourcePos) {\n    properties['data-sourcepos'] = flattenPosition(position)\n  }\n\n  if (!basic && options.rawSourcePos) {\n    properties.sourcePosition = node.position\n  }\n\n  // If `includeElementIndex` is given, pass node index info to components.\n  if (!basic && options.includeElementIndex) {\n    properties.index = getElementsBeforeCount(parent, node)\n    properties.siblingCount = getElementsBeforeCount(parent)\n  }\n\n  if (!basic) {\n    properties.node = node\n  }\n\n  // Ensure no React warnings are emitted for void elements w/ children.\n  return children.length > 0\n    ? React.createElement(component, properties, children)\n    : React.createElement(component, properties)\n}\n\n/**\n * @param {Element|Root} node\n * @returns {Element?}\n */\nfunction getInputElement(node) {\n  let index = -1\n\n  while (++index < node.children.length) {\n    const child = node.children[index]\n\n    if (child.type === 'element' && child.tagName === 'input') {\n      return child\n    }\n  }\n\n  return null\n}\n\n/**\n * @param {Element|Root} parent\n * @param {Element} [node]\n * @returns {number}\n */\nfunction getElementsBeforeCount(parent, node) {\n  let index = -1\n  let count = 0\n\n  while (++index < parent.children.length) {\n    if (parent.children[index] === node) break\n    if (parent.children[index].type === 'element') count++\n  }\n\n  return count\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n */\nfunction addProperty(props, prop, value, ctx) {\n  const info = find(ctx.schema, prop)\n  let result = value\n\n  // Ignore nullish and `NaN` values.\n  // eslint-disable-next-line no-self-compare\n  if (result === null || result === undefined || result !== result) {\n    return\n  }\n\n  // Accept `array`.\n  // Most props are space-separated.\n  if (Array.isArray(result)) {\n    result = info.commaSeparated ? commas(result) : spaces(result)\n  }\n\n  if (info.property === 'style' && typeof result === 'string') {\n    result = parseStyle(result)\n  }\n\n  if (info.space && info.property) {\n    props[\n      own.call(hastToReact, info.property)\n        ? hastToReact[info.property]\n        : info.property\n    ] = result\n  } else if (info.attribute) {\n    props[info.attribute] = result\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, iterator)\n  } catch {\n    // Silent.\n  }\n\n  return result\n\n  /**\n   * @param {string} name\n   * @param {string} v\n   */\n  function iterator(name, v) {\n    const k = name.slice(0, 4) === '-ms-' ? `ms-${name.slice(4)}` : name\n    result[k.replace(/-([a-z])/g, styleReplacer)] = v\n  }\n}\n\n/**\n * @param {unknown} _\n * @param {string} $1\n */\nfunction styleReplacer(_, $1) {\n  return $1.toUpperCase()\n}\n\n/**\n * @param {Position|{start: {line: null, column: null, offset: null}, end: {line: null, column: null, offset: null}}} pos\n * @returns {string}\n */\nfunction flattenPosition(pos) {\n  return [\n    pos.start.line,\n    ':',\n    pos.start.column,\n    '-',\n    pos.end.line,\n    ':',\n    pos.end.column\n  ]\n    .map((d) => String(d))\n    .join('')\n}\n","/**\n * @typedef {import('react').ReactNode} ReactNode\n * @typedef {import('react').ReactElement<{}>} ReactElement\n * @typedef {import('unified').PluggableList} PluggableList\n * @typedef {import('hast').Root} Root\n * @typedef {import('./rehype-filter.js').Options} FilterOptions\n * @typedef {import('./ast-to-react.js').Options} TransformOptions\n *\n * @typedef CoreOptions\n * @property {string} children\n *\n * @typedef PluginOptions\n * @property {PluggableList} [remarkPlugins=[]]\n * @property {PluggableList} [rehypePlugins=[]]\n * @property {import('remark-rehype').Options | undefined} [remarkRehypeOptions={}]\n *\n * @typedef LayoutOptions\n * @property {string} [className]\n *\n * @typedef {CoreOptions & PluginOptions & LayoutOptions & FilterOptions & TransformOptions} ReactMarkdownOptions\n *\n * @typedef Deprecation\n * @property {string} id\n * @property {string} [to]\n */\n\nimport React from 'react'\nimport {VFile} from 'vfile'\nimport {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkRehype from 'remark-rehype'\nimport PropTypes from 'prop-types'\nimport {html} from 'property-information'\nimport rehypeFilter from './rehype-filter.js'\nimport {uriTransformer} from './uri-transformer.js'\nimport {childrenToReact} from './ast-to-react.js'\n\nconst own = {}.hasOwnProperty\nconst changelog =\n  'https://github.com/remarkjs/react-markdown/blob/main/changelog.md'\n\n/** @type {Record<string, Deprecation>} */\nconst deprecated = {\n  plugins: {to: 'plugins', id: 'change-plugins-to-remarkplugins'},\n  renderers: {to: 'components', id: 'change-renderers-to-components'},\n  astPlugins: {id: 'remove-buggy-html-in-markdown-parser'},\n  allowDangerousHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  escapeHtml: {id: 'remove-buggy-html-in-markdown-parser'},\n  source: {to: 'children', id: 'change-source-to-children'},\n  allowNode: {\n    to: 'allowElement',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  allowedTypes: {\n    to: 'allowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  disallowedTypes: {\n    to: 'disallowedElements',\n    id: 'replace-allownode-allowedtypes-and-disallowedtypes'\n  },\n  includeNodeIndex: {\n    to: 'includeElementIndex',\n    id: 'change-includenodeindex-to-includeelementindex'\n  }\n}\n\n/**\n * React component to render markdown.\n *\n * @param {ReactMarkdownOptions} options\n * @returns {ReactElement}\n */\nexport function ReactMarkdown(options) {\n  for (const key in deprecated) {\n    if (own.call(deprecated, key) && own.call(options, key)) {\n      const deprecation = deprecated[key]\n      console.warn(\n        `[react-markdown] Warning: please ${\n          deprecation.to ? `use \\`${deprecation.to}\\` instead of` : 'remove'\n        } \\`${key}\\` (see <${changelog}#${deprecation.id}> for more info)`\n      )\n      delete deprecated[key]\n    }\n  }\n\n  const processor = unified()\n    .use(remarkParse)\n    .use(options.remarkPlugins || [])\n    .use(remarkRehype, {\n      ...options.remarkRehypeOptions,\n      allowDangerousHtml: true\n    })\n    .use(options.rehypePlugins || [])\n    .use(rehypeFilter, options)\n\n  const file = new VFile()\n\n  if (typeof options.children === 'string') {\n    file.value = options.children\n  } else if (options.children !== undefined && options.children !== null) {\n    console.warn(\n      `[react-markdown] Warning: please pass a string as \\`children\\` (not: \\`${options.children}\\`)`\n    )\n  }\n\n  const hastNode = processor.runSync(processor.parse(file), file)\n\n  if (hastNode.type !== 'root') {\n    throw new TypeError('Expected a `root` node')\n  }\n\n  /** @type {ReactElement} */\n  let result = React.createElement(\n    React.Fragment,\n    {},\n    childrenToReact({options, schema: html, listDepth: 0}, hastNode)\n  )\n\n  if (options.className) {\n    result = React.createElement('div', {className: options.className}, result)\n  }\n\n  return result\n}\n\nReactMarkdown.defaultProps = {transformLinkUri: uriTransformer}\n\nReactMarkdown.propTypes = {\n  // Core options:\n  children: PropTypes.string,\n  // Layout options:\n  className: PropTypes.string,\n  // Filter options:\n  allowElement: PropTypes.func,\n  allowedElements: PropTypes.arrayOf(PropTypes.string),\n  disallowedElements: PropTypes.arrayOf(PropTypes.string),\n  unwrapDisallowed: PropTypes.bool,\n  // Plugin options:\n  remarkPlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  rehypePlugins: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.object,\n      PropTypes.func,\n      PropTypes.arrayOf(\n        PropTypes.oneOfType([\n          PropTypes.bool,\n          PropTypes.string,\n          PropTypes.object,\n          PropTypes.func,\n          PropTypes.arrayOf(\n            // prettier-ignore\n            // type-coverage:ignore-next-line\n            PropTypes.any\n          )\n        ])\n      )\n    ])\n  ),\n  // Transform options:\n  sourcePos: PropTypes.bool,\n  rawSourcePos: PropTypes.bool,\n  skipHtml: PropTypes.bool,\n  includeElementIndex: PropTypes.bool,\n  transformLinkUri: PropTypes.oneOfType([PropTypes.func, PropTypes.bool]),\n  linkTarget: PropTypes.oneOfType([PropTypes.func, PropTypes.string]),\n  transformImageUri: PropTypes.func,\n  components: PropTypes.object\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiControl,\n  asciiDigit,\n  markdownLineEndingOrSpace,\n  markdownLineEnding,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\nconst www = {\n  tokenize: tokenizeWww,\n  partial: true\n}\nconst domain = {\n  tokenize: tokenizeDomain,\n  partial: true\n}\nconst path = {\n  tokenize: tokenizePath,\n  partial: true\n}\nconst punctuation = {\n  tokenize: tokenizePunctuation,\n  partial: true\n}\nconst namedCharacterReference = {\n  tokenize: tokenizeNamedCharacterReference,\n  partial: true\n}\nconst wwwAutolink = {\n  tokenize: tokenizeWwwAutolink,\n  previous: previousWww\n}\nconst httpAutolink = {\n  tokenize: tokenizeHttpAutolink,\n  previous: previousHttp\n}\nconst emailAutolink = {\n  tokenize: tokenizeEmailAutolink,\n  previous: previousEmail\n}\n/** @type {ConstructRecord} */\n\nconst text = {}\n/** @type {Extension} */\n\nexport const gfmAutolinkLiteral = {\n  text\n}\nlet code = 48 // Add alphanumerics.\n\nwhile (code < 123) {\n  text[code] = emailAutolink\n  code++\n  if (code === 58) code = 65\n  else if (code === 91) code = 97\n}\n\ntext[43] = emailAutolink\ntext[45] = emailAutolink\ntext[46] = emailAutolink\ntext[95] = emailAutolink\ntext[72] = [emailAutolink, httpAutolink]\ntext[104] = [emailAutolink, httpAutolink]\ntext[87] = [emailAutolink, wwwAutolink]\ntext[119] = [emailAutolink, wwwAutolink]\n/** @type {Tokenizer} */\n\nfunction tokenizeEmailAutolink(effects, ok, nok) {\n  const self = this\n  /** @type {boolean} */\n\n  let hasDot\n  /** @type {boolean|undefined} */\n\n  let hasDigitInLastSegment\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      !gfmAtext(code) ||\n      !previousEmail(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkEmail')\n    return atext(code)\n  }\n  /** @type {State} */\n\n  function atext(code) {\n    if (gfmAtext(code)) {\n      effects.consume(code)\n      return atext\n    }\n\n    if (code === 64) {\n      effects.consume(code)\n      return label\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (code === 46) {\n      return effects.check(punctuation, done, dotContinuation)(code)\n    }\n\n    if (code === 45 || code === 95) {\n      return effects.check(punctuation, nok, dashOrUnderscoreContinuation)(code)\n    }\n\n    if (asciiAlphanumeric(code)) {\n      if (!hasDigitInLastSegment && asciiDigit(code)) {\n        hasDigitInLastSegment = true\n      }\n\n      effects.consume(code)\n      return label\n    }\n\n    return done(code)\n  }\n  /** @type {State} */\n\n  function dotContinuation(code) {\n    effects.consume(code)\n    hasDot = true\n    hasDigitInLastSegment = undefined\n    return label\n  }\n  /** @type {State} */\n\n  function dashOrUnderscoreContinuation(code) {\n    effects.consume(code)\n    return afterDashOrUnderscore\n  }\n  /** @type {State} */\n\n  function afterDashOrUnderscore(code) {\n    if (code === 46) {\n      return effects.check(punctuation, nok, dotContinuation)(code)\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (hasDot && !hasDigitInLastSegment) {\n      effects.exit('literalAutolinkEmail')\n      effects.exit('literalAutolink')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWwwAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 87 && code !== 119) ||\n      !previousWww(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkWww') // For `www.` we check instead of attempt, because when it matches, GH\n    // treats it as part of a domain (yes, it says a valid domain must come\n    // after `www.`, but that’s not how it’s implemented by them).\n\n    return effects.check(\n      www,\n      effects.attempt(domain, effects.attempt(path, done), nok),\n      nok\n    )(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkWww')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHttpAutolink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (\n      (code !== 72 && code !== 104) ||\n      !previousHttp(self.previous) ||\n      previousUnbalanced(self.events)\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('literalAutolink')\n    effects.enter('literalAutolinkHttp')\n    effects.consume(code)\n    return t1\n  }\n  /** @type {State} */\n\n  function t1(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return t2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function t2(code) {\n    if (code === 84 || code === 116) {\n      effects.consume(code)\n      return p\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function p(code) {\n    if (code === 80 || code === 112) {\n      effects.consume(code)\n      return s\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function s(code) {\n    if (code === 83 || code === 115) {\n      effects.consume(code)\n      return colon\n    }\n\n    return colon(code)\n  }\n  /** @type {State} */\n\n  function colon(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return slash1\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash1(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return slash2\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function slash2(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)\n      ? nok(code)\n      : effects.attempt(domain, effects.attempt(path, done), nok)(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('literalAutolinkHttp')\n    effects.exit('literalAutolink')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeWww(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return w2\n  }\n  /** @type {State} */\n\n  function w2(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return w3\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function w3(code) {\n    if (code === 87 || code === 119) {\n      effects.consume(code)\n      return dot\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function dot(code) {\n    if (code === 46) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? nok(code) : ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDomain(effects, ok, nok) {\n  /** @type {boolean|undefined} */\n  let hasUnderscoreInLastSegment\n  /** @type {boolean|undefined} */\n\n  let hasUnderscoreInLastLastSegment\n  return domain\n  /** @type {State} */\n\n  function domain(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        done,\n        punctuationContinuation\n      )(code)\n    }\n\n    if (code === 46 || code === 95) {\n      return effects.check(punctuation, done, punctuationContinuation)(code)\n    } // GH documents that only alphanumerics (other than `-`, `.`, and `_`) can\n    // occur, which sounds like ASCII only, but they also support `www.點看.com`,\n    // so that’s Unicode.\n    // Instead of some new production for Unicode alphanumerics, markdown\n    // already has that for Unicode punctuation and whitespace, so use those.\n\n    if (\n      code === null ||\n      asciiControl(code) ||\n      unicodeWhitespace(code) ||\n      (code !== 45 && unicodePunctuation(code))\n    ) {\n      return done(code)\n    }\n\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function punctuationContinuation(code) {\n    if (code === 46) {\n      hasUnderscoreInLastLastSegment = hasUnderscoreInLastSegment\n      hasUnderscoreInLastSegment = undefined\n      effects.consume(code)\n      return domain\n    }\n\n    if (code === 95) hasUnderscoreInLastSegment = true\n    effects.consume(code)\n    return domain\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!hasUnderscoreInLastLastSegment && !hasUnderscoreInLastSegment) {\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePath(effects, ok) {\n  let balance = 0\n  return inPath\n  /** @type {State} */\n\n  function inPath(code) {\n    if (code === 38) {\n      return effects.check(\n        namedCharacterReference,\n        ok,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (code === 40) {\n      balance++\n    }\n\n    if (code === 41) {\n      return effects.check(\n        punctuation,\n        parenAtPathEnd,\n        continuedPunctuation\n      )(code)\n    }\n\n    if (pathEnd(code)) {\n      return ok(code)\n    }\n\n    if (trailingPunctuation(code)) {\n      return effects.check(punctuation, ok, continuedPunctuation)(code)\n    }\n\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function continuedPunctuation(code) {\n    effects.consume(code)\n    return inPath\n  }\n  /** @type {State} */\n\n  function parenAtPathEnd(code) {\n    balance--\n    return balance < 0 ? ok(code) : continuedPunctuation(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNamedCharacterReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (code === 59) {\n      effects.consume(code)\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // If the named character reference is followed by the end of the path, it’s\n    // not continued punctuation.\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePunctuation(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.consume(code)\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    // Check the next.\n    if (trailingPunctuation(code)) {\n      effects.consume(code)\n      return after\n    } // If the punctuation marker is followed by the end of the path, it’s not\n    // continued punctuation.\n\n    return pathEnd(code) ? ok(code) : nok(code)\n  }\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction trailingPunctuation(code) {\n  return (\n    code === 33 ||\n    code === 34 ||\n    code === 39 ||\n    code === 41 ||\n    code === 42 ||\n    code === 44 ||\n    code === 46 ||\n    code === 58 ||\n    code === 59 ||\n    code === 60 ||\n    code === 63 ||\n    code === 95 ||\n    code === 126\n  )\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction pathEnd(code) {\n  return code === null || code === 60 || markdownLineEndingOrSpace(code)\n}\n/**\n * @param {Code} code\n * @returns {boolean}\n */\n\nfunction gfmAtext(code) {\n  return (\n    code === 43 ||\n    code === 45 ||\n    code === 46 ||\n    code === 95 ||\n    asciiAlphanumeric(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousWww(code) {\n  return (\n    code === null ||\n    code === 40 ||\n    code === 42 ||\n    code === 95 ||\n    code === 126 ||\n    markdownLineEndingOrSpace(code)\n  )\n}\n/** @type {Previous} */\n\nfunction previousHttp(code) {\n  return code === null || !asciiAlpha(code)\n}\n/** @type {Previous} */\n\nfunction previousEmail(code) {\n  return code !== 47 && previousHttp(code)\n}\n/**\n * @param {Array<Event>} events\n * @returns {boolean}\n */\n\nfunction previousUnbalanced(events) {\n  let index = events.length\n  let result = false\n\n  while (index--) {\n    const token = events[index][1]\n\n    if (\n      (token.type === 'labelLink' || token.type === 'labelImage') &&\n      !token._balanced\n    ) {\n      result = true\n      break\n    } // @ts-expect-error If we’ve seen this token, and it was marked as not\n    // having any unbalanced bracket before it, we can exit.\n\n    if (token._gfmAutolinkLiteralWalkedInto) {\n      result = false\n      break\n    }\n  }\n\n  if (events.length > 0 && !result) {\n    // @ts-expect-error Mark the last token as “walked into” w/o finding\n    // anything.\n    events[events.length - 1][1]._gfmAutolinkLiteralWalkedInto = true\n  }\n\n  return result\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {blankLine} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nconst indent = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @returns {Extension}\n */\n\nexport function gfmFootnote() {\n  /** @type {Extension} */\n  return {\n    document: {\n      [91]: {\n        tokenize: tokenizeDefinitionStart,\n        continuation: {\n          tokenize: tokenizeDefinitionContinuation\n        },\n        exit: gfmFootnoteDefinitionEnd\n      }\n    },\n    text: {\n      [91]: {\n        tokenize: tokenizeGfmFootnoteCall\n      },\n      [93]: {\n        add: 'after',\n        tokenize: tokenizePotentialGfmFootnoteCall,\n        resolveTo: resolveToPotentialGfmFootnoteCall\n      }\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizePotentialGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {Token} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    const token = self.events[index][1]\n\n    if (token.type === 'labelImage') {\n      labelStart = token\n      break\n    } // Exit if we’ve walked far enough.\n\n    if (\n      token.type === 'gfmFootnoteCall' ||\n      token.type === 'labelLink' ||\n      token.type === 'label' ||\n      token.type === 'image' ||\n      token.type === 'link'\n    ) {\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart || !labelStart._balanced) {\n      return nok(code)\n    }\n\n    const id = normalizeIdentifier(\n      self.sliceSerialize({\n        start: labelStart.end,\n        end: self.now()\n      })\n    )\n\n    if (id.charCodeAt(0) !== 94 || !defined.includes(id.slice(1))) {\n      return nok(code)\n    }\n\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return ok(code)\n  }\n}\n/** @type {Resolver} */\n\nfunction resolveToPotentialGfmFootnoteCall(events, context) {\n  let index = events.length\n  /** @type {Token|undefined} */\n\n  let labelStart // Find an opening.\n\n  while (index--) {\n    if (\n      events[index][1].type === 'labelImage' &&\n      events[index][0] === 'enter'\n    ) {\n      labelStart = events[index][1]\n      break\n    }\n  }\n\n  // Change the `labelImageMarker` to a `data`.\n  events[index + 1][1].type = 'data'\n  events[index + 3][1].type = 'gfmFootnoteCallLabelMarker' // The whole (without `!`):\n\n  const call = {\n    type: 'gfmFootnoteCall',\n    start: Object.assign({}, events[index + 3][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // The `^` marker\n\n  const marker = {\n    type: 'gfmFootnoteCallMarker',\n    start: Object.assign({}, events[index + 3][1].end),\n    end: Object.assign({}, events[index + 3][1].end)\n  } // Increment the end 1 character.\n\n  marker.end.column++\n  marker.end.offset++\n  marker.end._bufferIndex++\n  const string = {\n    type: 'gfmFootnoteCallString',\n    start: Object.assign({}, marker.end),\n    end: Object.assign({}, events[events.length - 1][1].start)\n  }\n  const chunk = {\n    type: 'chunkString',\n    contentType: 'string',\n    start: Object.assign({}, string.start),\n    end: Object.assign({}, string.end)\n  }\n  /** @type {Array<Event>} */\n\n  const replacement = [\n    // Take the `labelImageMarker` (now `data`, the `!`)\n    events[index + 1],\n    events[index + 2],\n    ['enter', call, context], // The `[`\n    events[index + 3],\n    events[index + 4], // The `^`.\n    ['enter', marker, context],\n    ['exit', marker, context], // Everything in between.\n    ['enter', string, context],\n    ['enter', chunk, context],\n    ['exit', chunk, context],\n    ['exit', string, context], // The ending (`]`, properly parsed and labelled).\n    events[events.length - 2],\n    events[events.length - 1],\n    ['exit', call, context]\n  ]\n  events.splice(index, events.length - index + 1, ...replacement)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeGfmFootnoteCall(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteCall')\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    return callStart\n  }\n  /** @type {State} */\n\n  function callStart(code) {\n    if (code !== 94) return nok(code)\n    effects.enter('gfmFootnoteCallMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallMarker')\n    effects.enter('gfmFootnoteCallString')\n    effects.enter('chunkString').contentType = 'string'\n    return callData\n  }\n  /** @type {State} */\n\n  function callData(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size++ > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      effects.exit('chunkString')\n      token = effects.exit('gfmFootnoteCallString')\n      return defined.includes(normalizeIdentifier(self.sliceSerialize(token)))\n        ? end(code)\n        : nok(code)\n    }\n\n    effects.consume(code)\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    return code === 92 ? callEscape : callData\n  }\n  /** @type {State} */\n\n  function callEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return callData\n    }\n\n    return callData(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('gfmFootnoteCallLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteCallLabelMarker')\n    effects.exit('gfmFootnoteCall')\n    return ok\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionStart(effects, ok, nok) {\n  const self = this\n  /** @type {Array<string>} */\n  // @ts-expect-error It’s fine!\n\n  const defined = self.parser.gfmFootnotes || (self.parser.gfmFootnotes = [])\n  /** @type {string} */\n\n  let identifier\n  let size = 0\n  /** @type {boolean|undefined} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('gfmFootnoteDefinition')._container = true\n    effects.enter('gfmFootnoteDefinitionLabel')\n    effects.enter('gfmFootnoteDefinitionLabelMarker')\n    effects.consume(code)\n    effects.exit('gfmFootnoteDefinitionLabelMarker')\n    return labelStart\n  }\n  /** @type {State} */\n\n  function labelStart(code) {\n    if (code === 94) {\n      effects.enter('gfmFootnoteDefinitionMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionMarker')\n      effects.enter('gfmFootnoteDefinitionLabelString')\n      return atBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === null || code === 91 || size > 999) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      if (!data) {\n        return nok(code)\n      }\n\n      token = effects.exit('gfmFootnoteDefinitionLabelString')\n      identifier = normalizeIdentifier(self.sliceSerialize(token))\n      effects.enter('gfmFootnoteDefinitionLabelMarker')\n      effects.consume(code)\n      effects.exit('gfmFootnoteDefinitionLabelMarker')\n      effects.exit('gfmFootnoteDefinitionLabel')\n      return labelAfter\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      size++\n      return atBreak\n    }\n\n    effects.enter('chunkString').contentType = 'string'\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      markdownLineEnding(code) ||\n      code === 91 ||\n      code === 93 ||\n      size > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    if (!markdownLineEndingOrSpace(code)) {\n      data = true\n    }\n\n    size++\n    effects.consume(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Any whitespace after the marker is eaten, forming indented code\n      // is not possible.\n      // No space is also fine, just like a block quote marker.\n\n      return factorySpace(effects, done, 'gfmFootnoteDefinitionWhitespace')\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function done(code) {\n    if (!defined.includes(identifier)) {\n      defined.push(identifier)\n    }\n\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinitionContinuation(effects, ok, nok) {\n  // Either a blank line, which is okay, or an indented thing.\n  return effects.check(blankLine, ok, effects.attempt(indent, ok, nok))\n}\n/** @type {Exiter} */\n\nfunction gfmFootnoteDefinitionEnd(effects) {\n  effects.exit('gfmFootnoteDefinition')\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'gfmFootnoteDefinitionIndent',\n    4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'gfmFootnoteDefinitionIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === 4\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n */\n\n/**\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean} [singleTilde=true]\n *   Whether to support strikethrough with a single tilde (`boolean`, default:\n *   `true`).\n *   Single tildes work on github.com, but are technically prohibited by the\n *   GFM spec.\n */\nimport {splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfmStrikethrough(options = {}) {\n  let single = options.singleTilde\n  const tokenizer = {\n    tokenize: tokenizeStrikethrough,\n    resolveAll: resolveAllStrikethrough\n  }\n\n  if (single === null || single === undefined) {\n    single = true\n  }\n\n  return {\n    text: {\n      [126]: tokenizer\n    },\n    insideSpan: {\n      null: [tokenizer]\n    },\n    attentionMarkers: {\n      null: [126]\n    }\n  }\n  /**\n   * Take events and resolve strikethrough.\n   *\n   * @type {Resolver}\n   */\n\n  function resolveAllStrikethrough(events, context) {\n    let index = -1 // Walk through all events.\n\n    while (++index < events.length) {\n      // Find a token that can close.\n      if (\n        events[index][0] === 'enter' &&\n        events[index][1].type === 'strikethroughSequenceTemporary' &&\n        events[index][1]._close\n      ) {\n        let open = index // Now walk back to find an opener.\n\n        while (open--) {\n          // Find a token that can open the closer.\n          if (\n            events[open][0] === 'exit' &&\n            events[open][1].type === 'strikethroughSequenceTemporary' &&\n            events[open][1]._open && // If the sizes are the same:\n            events[index][1].end.offset - events[index][1].start.offset ===\n              events[open][1].end.offset - events[open][1].start.offset\n          ) {\n            events[index][1].type = 'strikethroughSequence'\n            events[open][1].type = 'strikethroughSequence'\n            const strikethrough = {\n              type: 'strikethrough',\n              start: Object.assign({}, events[open][1].start),\n              end: Object.assign({}, events[index][1].end)\n            }\n            const text = {\n              type: 'strikethroughText',\n              start: Object.assign({}, events[open][1].end),\n              end: Object.assign({}, events[index][1].start)\n            } // Opening.\n\n            const nextEvents = [\n              ['enter', strikethrough, context],\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context],\n              ['enter', text, context]\n            ] // Between.\n\n            splice(\n              nextEvents,\n              nextEvents.length,\n              0,\n              resolveAll(\n                context.parser.constructs.insideSpan.null,\n                events.slice(open + 1, index),\n                context\n              )\n            ) // Closing.\n\n            splice(nextEvents, nextEvents.length, 0, [\n              ['exit', text, context],\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context],\n              ['exit', strikethrough, context]\n            ])\n            splice(events, open - 1, index - open + 3, nextEvents)\n            index = open + nextEvents.length - 2\n            break\n          }\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      if (events[index][1].type === 'strikethroughSequenceTemporary') {\n        events[index][1].type = 'data'\n      }\n    }\n\n    return events\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeStrikethrough(effects, ok, nok) {\n    const previous = this.previous\n    const events = this.events\n    let size = 0\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      if (\n        previous === 126 &&\n        events[events.length - 1][1].type !== 'characterEscape'\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('strikethroughSequenceTemporary')\n      return more(code)\n    }\n    /** @type {State} */\n\n    function more(code) {\n      const before = classifyCharacter(previous)\n\n      if (code === 126) {\n        // If this is the third marker, exit.\n        if (size > 1) return nok(code)\n        effects.consume(code)\n        size++\n        return more\n      }\n\n      if (size < 2 && !single) return nok(code)\n      const token = effects.exit('strikethroughSequenceTemporary')\n      const after = classifyCharacter(code)\n      token._open = !after || (after === 2 && Boolean(before))\n      token._close = !before || (before === 2 && Boolean(after))\n      return ok(code)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n */\n\n/**\n * @typedef {'left'|'center'|'right'|'none'} Align\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Extension} */\nexport const gfmTable = {\n  flow: {\n    null: {\n      tokenize: tokenizeTable,\n      resolve: resolveTable\n    }\n  }\n}\nconst nextPrefixedOrBlank = {\n  tokenize: tokenizeNextPrefixedOrBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveTable(events, context) {\n  let index = -1\n  /** @type {boolean|undefined} */\n\n  let inHead\n  /** @type {boolean|undefined} */\n\n  let inDelimiterRow\n  /** @type {boolean|undefined} */\n\n  let inRow\n  /** @type {number|undefined} */\n\n  let contentStart\n  /** @type {number|undefined} */\n\n  let contentEnd\n  /** @type {number|undefined} */\n\n  let cellStart\n  /** @type {boolean|undefined} */\n\n  let seenCellInRow\n\n  while (++index < events.length) {\n    const token = events[index][1]\n\n    if (inRow) {\n      if (token.type === 'temporaryTableCellContent') {\n        contentStart = contentStart || index\n        contentEnd = index\n      }\n\n      if (\n        // Combine separate content parts into one.\n        (token.type === 'tableCellDivider' || token.type === 'tableRow') &&\n        contentEnd\n      ) {\n        const content = {\n          type: 'tableContent',\n          start: events[contentStart][1].start,\n          end: events[contentEnd][1].end\n        }\n        /** @type {Token} */\n\n        const text = {\n          type: 'chunkText',\n          start: content.start,\n          end: content.end,\n          // @ts-expect-error It’s fine.\n          contentType: 'text'\n        }\n        events.splice(\n          contentStart,\n          contentEnd - contentStart + 1,\n          ['enter', content, context],\n          ['enter', text, context],\n          ['exit', text, context],\n          ['exit', content, context]\n        )\n        index -= contentEnd - contentStart - 3\n        contentStart = undefined\n        contentEnd = undefined\n      }\n    }\n\n    if (\n      events[index][0] === 'exit' &&\n      cellStart !== undefined &&\n      cellStart + (seenCellInRow ? 0 : 1) < index &&\n      (token.type === 'tableCellDivider' ||\n        (token.type === 'tableRow' &&\n          (cellStart + 3 < index ||\n            events[cellStart][1].type !== 'whitespace')))\n    ) {\n      const cell = {\n        type: inDelimiterRow\n          ? 'tableDelimiter'\n          : inHead\n          ? 'tableHeader'\n          : 'tableData',\n        start: events[cellStart][1].start,\n        end: events[index][1].end\n      }\n      events.splice(index + (token.type === 'tableCellDivider' ? 1 : 0), 0, [\n        'exit',\n        cell,\n        context\n      ])\n      events.splice(cellStart, 0, ['enter', cell, context])\n      index += 2\n      cellStart = index + 1\n      seenCellInRow = true\n    }\n\n    if (token.type === 'tableRow') {\n      inRow = events[index][0] === 'enter'\n\n      if (inRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableDelimiterRow') {\n      inDelimiterRow = events[index][0] === 'enter'\n\n      if (inDelimiterRow) {\n        cellStart = index + 1\n        seenCellInRow = false\n      }\n    }\n\n    if (token.type === 'tableHead') {\n      inHead = events[index][0] === 'enter'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTable(effects, ok, nok) {\n  const self = this\n  /** @type {Array<Align>} */\n\n  const align = []\n  let tableHeaderCount = 0\n  /** @type {boolean|undefined} */\n\n  let seenDelimiter\n  /** @type {boolean|undefined} */\n\n  let hasDash\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // @ts-expect-error Custom.\n    effects.enter('table')._align = align\n    effects.enter('tableHead')\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    }\n\n    tableHeaderCount++\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function cellDividerHead(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    seenDelimiter = true\n    return cellBreakHead\n  }\n  /** @type {State} */\n\n  function cellBreakHead(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndHead(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    if (seenDelimiter) {\n      seenDelimiter = undefined\n      tableHeaderCount++\n    }\n\n    if (code === 124) {\n      return cellDividerHead(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceHead(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceHead\n    }\n\n    effects.exit('whitespace')\n    return cellBreakHead(code)\n  }\n  /** @type {State} */\n\n  function inCellContentHead(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakHead(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeHead : inCellContentHead\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeHead(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentHead\n    } // Anything else.\n\n    return inCellContentHead(code)\n  }\n  /** @type {State} */\n\n  function atRowEndHead(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    effects.exit('tableRow')\n    effects.exit('tableHead')\n    const originalInterrupt = self.interrupt\n    self.interrupt = true\n    return effects.attempt(\n      {\n        tokenize: tokenizeRowEnd,\n        partial: true\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        effects.enter('tableDelimiterRow')\n        return atDelimiterRowBreak(code)\n      },\n      function (code) {\n        self.interrupt = originalInterrupt\n        return nok(code)\n      }\n    )(code)\n  }\n  /** @type {State} */\n\n  function atDelimiterRowBreak(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      align.push('none')\n      return inFillerDelimiter\n    }\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align.push('left')\n      return afterLeftAlignment\n    } // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceDelimiter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    }\n\n    effects.exit('whitespace')\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function inFillerDelimiter(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return inFillerDelimiter\n    }\n\n    effects.exit('tableDelimiterFiller')\n\n    if (code === 58) {\n      effects.enter('tableDelimiterAlignment')\n      effects.consume(code)\n      effects.exit('tableDelimiterAlignment')\n      align[align.length - 1] =\n        align[align.length - 1] === 'left' ? 'center' : 'right'\n      return afterRightAlignment\n    }\n\n    return atDelimiterRowBreak(code)\n  }\n  /** @type {State} */\n\n  function afterLeftAlignment(code) {\n    if (code === 45) {\n      effects.enter('tableDelimiterFiller')\n      effects.consume(code)\n      hasDash = true\n      return inFillerDelimiter\n    } // Anything else is not ok.\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function afterRightAlignment(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return rowEndDelimiter(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceDelimiter\n    } // `|`\n\n    if (code === 124) {\n      effects.enter('tableCellDivider')\n      effects.consume(code)\n      effects.exit('tableCellDivider')\n      return atDelimiterRowBreak\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function rowEndDelimiter(code) {\n    effects.exit('tableDelimiterRow') // Exit if there was no dash at all, or if the header cell count is not the\n    // delimiter cell count.\n\n    if (!hasDash || tableHeaderCount !== align.length) {\n      return nok(code)\n    }\n\n    if (code === null) {\n      return tableClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, bodyStart, 'linePrefix', 4),\n        tableClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableClose(code) {\n    effects.exit('table')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function bodyStart(code) {\n    effects.enter('tableBody')\n    return rowStartBody(code)\n  }\n  /** @type {State} */\n\n  function rowStartBody(code) {\n    effects.enter('tableRow') // If we start with a pipe, we open a cell marker.\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    }\n\n    effects.enter('temporaryTableCellContent') // Can’t be space or eols at the start of a construct, so we’re in a cell.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function cellDividerBody(code) {\n    effects.enter('tableCellDivider')\n    effects.consume(code)\n    effects.exit('tableCellDivider')\n    return cellBreakBody\n  }\n  /** @type {State} */\n\n  function cellBreakBody(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return atRowEndBody(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.enter('whitespace')\n      effects.consume(code)\n      return inWhitespaceBody\n    } // `|`\n\n    if (code === 124) {\n      return cellDividerBody(code)\n    } // Anything else is cell content.\n\n    effects.enter('temporaryTableCellContent')\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function inWhitespaceBody(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return inWhitespaceBody\n    }\n\n    effects.exit('whitespace')\n    return cellBreakBody(code)\n  }\n  /** @type {State} */\n\n  function inCellContentBody(code) {\n    // EOF, whitespace, pipe\n    if (code === null || code === 124 || markdownLineEndingOrSpace(code)) {\n      effects.exit('temporaryTableCellContent')\n      return cellBreakBody(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? inCellContentEscapeBody : inCellContentBody\n  }\n  /** @type {State} */\n\n  function inCellContentEscapeBody(code) {\n    if (code === 92 || code === 124) {\n      effects.consume(code)\n      return inCellContentBody\n    } // Anything else.\n\n    return inCellContentBody(code)\n  }\n  /** @type {State} */\n\n  function atRowEndBody(code) {\n    effects.exit('tableRow')\n\n    if (code === null) {\n      return tableBodyClose(code)\n    }\n\n    return effects.check(\n      nextPrefixedOrBlank,\n      tableBodyClose,\n      effects.attempt(\n        {\n          tokenize: tokenizeRowEnd,\n          partial: true\n        },\n        factorySpace(effects, rowStartBody, 'linePrefix', 4),\n        tableBodyClose\n      )\n    )(code)\n  }\n  /** @type {State} */\n\n  function tableBodyClose(code) {\n    effects.exit('tableBody')\n    return tableClose(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeRowEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, prefixed, 'linePrefix')\n    }\n    /** @type {State} */\n\n    function prefixed(code) {\n      // Blank or interrupting line.\n      if (\n        self.parser.lazy[self.now().line] ||\n        code === null ||\n        markdownLineEnding(code)\n      ) {\n        return nok(code)\n      }\n\n      const tail = self.events[self.events.length - 1] // Indented code can interrupt delimiter and body rows.\n\n      if (\n        !self.parser.constructs.disable.null.includes('codeIndented') &&\n        tail &&\n        tail[1].type === 'linePrefix' &&\n        tail[2].sliceSerialize(tail[1], true).length >= 4\n      ) {\n        return nok(code)\n      }\n\n      self._gfmTableDynamicInterruptHack = true\n      return effects.check(\n        self.parser.constructs.flow,\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return nok(code)\n        },\n        function (code) {\n          self._gfmTableDynamicInterruptHack = false\n          return ok(code)\n        }\n      )(code)\n    }\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextPrefixedOrBlank(effects, ok, nok) {\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // This is a check, so we don’t care about tokens, but we open a bogus one\n    // so we’re valid.\n    effects.enter('check') // EOL.\n\n    effects.consume(code)\n    return whitespace\n  }\n  /** @type {State} */\n\n  function whitespace(code) {\n    if (code === -1 || code === 32) {\n      effects.consume(code)\n      size++\n      return size === 4 ? ok : whitespace\n    } // EOF or whitespace\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      return ok(code)\n    } // Anything else.\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\nconst tasklistCheck = {\n  tokenize: tokenizeTasklistCheck\n}\nexport const gfmTaskListItem = {\n  text: {\n    [91]: tasklistCheck\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTasklistCheck(effects, ok, nok) {\n  const self = this\n  return open\n  /** @type {State} */\n\n  function open(code) {\n    if (\n      // Exit if there’s stuff before.\n      self.previous !== null || // Exit if not in the first content that is the first child of a list\n      // item.\n      !self._gfmTasklistFirstContentOfListItem\n    ) {\n      return nok(code)\n    }\n\n    effects.enter('taskListCheck')\n    effects.enter('taskListCheckMarker')\n    effects.consume(code)\n    effects.exit('taskListCheckMarker')\n    return inside\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    // To match how GH works in comments, use `markdownSpace` (`[ \\t]`) instead\n    // of `markdownLineEndingOrSpace` (`[ \\t\\r\\n]`).\n    if (markdownLineEndingOrSpace(code)) {\n      effects.enter('taskListCheckValueUnchecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueUnchecked')\n      return close\n    }\n\n    if (code === 88 || code === 120) {\n      effects.enter('taskListCheckValueChecked')\n      effects.consume(code)\n      effects.exit('taskListCheckValueChecked')\n      return close\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function close(code) {\n    if (code === 93) {\n      effects.enter('taskListCheckMarker')\n      effects.consume(code)\n      effects.exit('taskListCheckMarker')\n      effects.exit('taskListCheck')\n      return effects.check(\n        {\n          tokenize: spaceThenNonSpace\n        },\n        ok,\n        nok\n      )\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction spaceThenNonSpace(effects, ok, nok) {\n  const self = this\n  return factorySpace(effects, after, 'whitespace')\n  /** @type {State} */\n\n  function after(code) {\n    const tail = self.events[self.events.length - 1]\n    return (\n      // We either found spaces…\n      ((tail && tail[1].type === 'whitespace') || // …or it was followed by a line ending, in which case, there has to be\n        // non-whitespace after that line ending, because otherwise we’d get an\n        // EOF as the content is closed with blank lines.\n        markdownLineEnding(code)) &&\n        code !== null\n        ? ok(code)\n        : nok(code)\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n * @typedef {import('micromark-extension-gfm-strikethrough').Options} Options\n * @typedef {import('micromark-extension-gfm-footnote').HtmlOptions} HtmlOptions\n */\n\nimport {\n  combineExtensions,\n  combineHtmlExtensions\n} from 'micromark-util-combine-extensions'\nimport {\n  gfmAutolinkLiteral,\n  gfmAutolinkLiteralHtml\n} from 'micromark-extension-gfm-autolink-literal'\nimport {gfmFootnote, gfmFootnoteHtml} from 'micromark-extension-gfm-footnote'\nimport {\n  gfmStrikethrough,\n  gfmStrikethroughHtml\n} from 'micromark-extension-gfm-strikethrough'\nimport {gfmTable, gfmTableHtml} from 'micromark-extension-gfm-table'\nimport {gfmTagfilterHtml} from 'micromark-extension-gfm-tagfilter'\nimport {\n  gfmTaskListItem,\n  gfmTaskListItemHtml\n} from 'micromark-extension-gfm-task-list-item'\n\n/**\n * Support GFM or markdown on github.com.\n *\n * @param {Options} [options]\n * @returns {Extension}\n */\nexport function gfm(options) {\n  return combineExtensions([\n    gfmAutolinkLiteral,\n    gfmFootnote(),\n    gfmStrikethrough(options),\n    gfmTable,\n    gfmTaskListItem\n  ])\n}\n\n/**\n * Support to compile GFM to HTML.\n *\n * @param {HtmlOptions} [options]\n * @returns {HtmlExtension}\n */\nexport function gfmHtml(options) {\n  return combineHtmlExtensions([\n    gfmAutolinkLiteralHtml,\n    gfmFootnoteHtml(options),\n    gfmStrikethroughHtml,\n    gfmTableHtml,\n    gfmTagfilterHtml,\n    gfmTaskListItemHtml\n  ])\n}\n","/**\n * Count how often a character (or substring) is used in a string.\n *\n * @param {string} value\n *   Value to search in.\n * @param {string} character\n *   Character (or substring) to look for.\n * @return {number}\n *   Number of times `character` occurred in `value`.\n */\nexport function ccount(value, character) {\n  const source = String(value)\n\n  if (typeof character !== 'string') {\n    throw new TypeError('Expected character')\n  }\n\n  let count = 0\n  let index = source.indexOf(character)\n\n  while (index !== -1) {\n    count++\n    index = source.indexOf(character, index + character.length)\n  }\n\n  return count\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {Test} [ignore]\n *   `unist-util-is` test used to assert parents\n *\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').Text} Text\n * @typedef {Content|Root} Node\n * @typedef {Exclude<Extract<Node, import('mdast').Parent>, Root>} Parent\n *\n * @typedef {import('unist-util-visit-parents').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n *\n * @typedef RegExpMatchObject\n * @property {number} index\n * @property {string} input\n * @property {[Root, ...Array<Parent>, Text]} stack\n *\n * @typedef {string|RegExp} Find\n * @typedef {string|ReplaceFunction} Replace\n *\n * @typedef {[Find, Replace]} FindAndReplaceTuple\n * @typedef {Record<string, Replace>} FindAndReplaceSchema\n * @typedef {Array<FindAndReplaceTuple>} FindAndReplaceList\n *\n * @typedef {[RegExp, ReplaceFunction]} Pair\n * @typedef {Array<Pair>} Pairs\n */\n\n/**\n * @callback ReplaceFunction\n * @param {...any} parameters\n * @returns {Array<PhrasingContent>|PhrasingContent|string|false|undefined|null}\n */\n\nimport escape from 'escape-string-regexp'\nimport {visitParents} from 'unist-util-visit-parents'\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param tree mdast tree\n * @param find Value to find and remove. When `string`, escaped and made into a global `RegExp`\n * @param [replace] Value to insert.\n *   * When `string`, turned into a Text node.\n *   * When `Function`, called with the results of calling `RegExp.exec` as\n *     arguments, in which case it can return a single or a list of `Node`,\n *     a `string` (which is wrapped in a `Text` node), or `false` to not replace\n * @param [options] Configuration.\n */\nexport const findAndReplace =\n  /**\n   * @type {(\n   *   ((tree: Node, find: Find, replace?: Replace, options?: Options) => Node) &\n   *   ((tree: Node, schema: FindAndReplaceSchema|FindAndReplaceList, options?: Options) => Node)\n   * )}\n   **/\n  (\n    /**\n     * @param {Node} tree\n     * @param {Find|FindAndReplaceSchema|FindAndReplaceList} find\n     * @param {Replace|Options} [replace]\n     * @param {Options} [options]\n     */\n    function (tree, find, replace, options) {\n      /** @type {Options|undefined} */\n      let settings\n      /** @type {FindAndReplaceSchema|FindAndReplaceList} */\n      let schema\n\n      if (typeof find === 'string' || find instanceof RegExp) {\n        // @ts-expect-error don’t expect options twice.\n        schema = [[find, replace]]\n        settings = options\n      } else {\n        schema = find\n        // @ts-expect-error don’t expect replace twice.\n        settings = replace\n      }\n\n      if (!settings) {\n        settings = {}\n      }\n\n      const ignored = convert(settings.ignore || [])\n      const pairs = toPairs(schema)\n      let pairIndex = -1\n\n      while (++pairIndex < pairs.length) {\n        visitParents(tree, 'text', visitor)\n      }\n\n      return tree\n\n      /** @type {import('unist-util-visit-parents/complex-types').BuildVisitor<Root, 'text'>} */\n      function visitor(node, parents) {\n        let index = -1\n        /** @type {Parent|undefined} */\n        let grandparent\n\n        while (++index < parents.length) {\n          const parent = /** @type {Parent} */ (parents[index])\n\n          if (\n            ignored(\n              parent,\n              // @ts-expect-error mdast vs. unist parent.\n              grandparent ? grandparent.children.indexOf(parent) : undefined,\n              grandparent\n            )\n          ) {\n            return\n          }\n\n          grandparent = parent\n        }\n\n        if (grandparent) {\n          // @ts-expect-error: stack is fine.\n          return handler(node, parents)\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @param {[Root, ...Array<Parent>]} parents\n       * @returns {VisitorResult}\n       */\n      function handler(node, parents) {\n        const parent = parents[parents.length - 1]\n        const find = pairs[pairIndex][0]\n        const replace = pairs[pairIndex][1]\n        let start = 0\n        // @ts-expect-error: TS is wrong, some of these children can be text.\n        const index = parent.children.indexOf(node)\n        let change = false\n        /** @type {Array<PhrasingContent>} */\n        let nodes = []\n        /** @type {number|undefined} */\n        let position\n\n        find.lastIndex = 0\n\n        let match = find.exec(node.value)\n\n        while (match) {\n          position = match.index\n          /** @type {RegExpMatchObject} */\n          const matchObject = {\n            index: match.index,\n            input: match.input,\n            stack: [...parents, node]\n          }\n          let value = replace(...match, matchObject)\n\n          if (typeof value === 'string') {\n            value = value.length > 0 ? {type: 'text', value} : undefined\n          }\n\n          if (value !== false) {\n            if (start !== position) {\n              nodes.push({\n                type: 'text',\n                value: node.value.slice(start, position)\n              })\n            }\n\n            if (Array.isArray(value)) {\n              nodes.push(...value)\n            } else if (value) {\n              nodes.push(value)\n            }\n\n            start = position + match[0].length\n            change = true\n          }\n\n          if (!find.global) {\n            break\n          }\n\n          match = find.exec(node.value)\n        }\n\n        if (change) {\n          if (start < node.value.length) {\n            nodes.push({type: 'text', value: node.value.slice(start)})\n          }\n\n          parent.children.splice(index, 1, ...nodes)\n        } else {\n          nodes = [node]\n        }\n\n        return index + nodes.length\n      }\n    }\n  )\n\n/**\n * @param {FindAndReplaceSchema|FindAndReplaceList} schema\n * @returns {Pairs}\n */\nfunction toPairs(schema) {\n  /** @type {Pairs} */\n  const result = []\n\n  if (typeof schema !== 'object') {\n    throw new TypeError('Expected array or object as schema')\n  }\n\n  if (Array.isArray(schema)) {\n    let index = -1\n\n    while (++index < schema.length) {\n      result.push([\n        toExpression(schema[index][0]),\n        toFunction(schema[index][1])\n      ])\n    }\n  } else {\n    /** @type {string} */\n    let key\n\n    for (key in schema) {\n      if (own.call(schema, key)) {\n        result.push([toExpression(key), toFunction(schema[key])])\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {Find} find\n * @returns {RegExp}\n */\nfunction toExpression(find) {\n  return typeof find === 'string' ? new RegExp(escape(find), 'g') : find\n}\n\n/**\n * @param {Replace} replace\n * @returns {ReplaceFunction}\n */\nfunction toFunction(replace) {\n  return typeof replace === 'function' ? replace : () => replace\n}\n","export default function escapeStringRegexp(string) {\n\tif (typeof string !== 'string') {\n\t\tthrow new TypeError('Expected a string');\n\t}\n\n\t// Escape characters with special meaning either inside or outside character sets.\n\t// Use a simple backslash escape when it’s always valid, and a `\\xnn` escape when the simpler form would be disallowed by Unicode patterns’ stricter grammar.\n\treturn string\n\t\t.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&')\n\t\t.replace(/-/g, '\\\\x2d');\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Transform} FromMarkdownTransform\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown/lib/types.js').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-find-and-replace').ReplaceFunction} ReplaceFunction\n * @typedef {import('mdast-util-find-and-replace').RegExpMatchObject} RegExpMatchObject\n * @typedef {import('mdast-util-find-and-replace').PhrasingContent} PhrasingContent\n */\n\nimport {ccount} from 'ccount'\nimport {findAndReplace} from 'mdast-util-find-and-replace'\nimport {unicodePunctuation, unicodeWhitespace} from 'micromark-util-character'\n\nconst inConstruct = 'phrasing'\nconst notInConstruct = ['autolink', 'link', 'image', 'label']\n\n/** @type {FromMarkdownExtension} */\nexport const gfmAutolinkLiteralFromMarkdown = {\n  transforms: [transformGfmAutolinkLiterals],\n  enter: {\n    literalAutolink: enterLiteralAutolink,\n    literalAutolinkEmail: enterLiteralAutolinkValue,\n    literalAutolinkHttp: enterLiteralAutolinkValue,\n    literalAutolinkWww: enterLiteralAutolinkValue\n  },\n  exit: {\n    literalAutolink: exitLiteralAutolink,\n    literalAutolinkEmail: exitLiteralAutolinkEmail,\n    literalAutolinkHttp: exitLiteralAutolinkHttp,\n    literalAutolinkWww: exitLiteralAutolinkWww\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmAutolinkLiteralToMarkdown = {\n  unsafe: [\n    {\n      character: '@',\n      before: '[+\\\\-.\\\\w]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {\n      character: '.',\n      before: '[Ww]',\n      after: '[\\\\-.\\\\w]',\n      inConstruct,\n      notInConstruct\n    },\n    {character: ':', before: '[ps]', after: '\\\\/', inConstruct, notInConstruct}\n  ]\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolink(token) {\n  this.enter({type: 'link', title: null, url: '', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterLiteralAutolinkValue(token) {\n  this.config.enter.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkHttp(token) {\n  this.config.exit.autolinkProtocol.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkWww(token) {\n  this.config.exit.data.call(this, token)\n  const node = /** @type {Link} */ (this.stack[this.stack.length - 1])\n  node.url = 'http://' + this.sliceSerialize(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolinkEmail(token) {\n  this.config.exit.autolinkEmail.call(this, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitLiteralAutolink(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownTransform} */\nfunction transformGfmAutolinkLiterals(tree) {\n  findAndReplace(\n    tree,\n    [\n      [/(https?:\\/\\/|www(?=\\.))([-.\\w]+)([^ \\t\\r\\n]*)/gi, findUrl],\n      [/([-.\\w+]+)@([-\\w]+(?:\\.[-\\w]+)+)/g, findEmail]\n    ],\n    {ignore: ['link', 'linkReference']}\n  )\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} protocol\n * @param {string} domain\n * @param {string} path\n * @param {RegExpMatchObject} match\n */\n// eslint-disable-next-line max-params\nfunction findUrl(_, protocol, domain, path, match) {\n  let prefix = ''\n\n  // Not an expected previous character.\n  if (!previous(match)) {\n    return false\n  }\n\n  // Treat `www` as part of the domain.\n  if (/^w/i.test(protocol)) {\n    domain = protocol + domain\n    protocol = ''\n    prefix = 'http://'\n  }\n\n  if (!isCorrectDomain(domain)) {\n    return false\n  }\n\n  const parts = splitUrl(domain + path)\n\n  if (!parts[0]) return false\n\n  /** @type {PhrasingContent} */\n  const result = {\n    type: 'link',\n    title: null,\n    url: prefix + protocol + parts[0],\n    children: [{type: 'text', value: protocol + parts[0]}]\n  }\n\n  if (parts[1]) {\n    return [result, {type: 'text', value: parts[1]}]\n  }\n\n  return result\n}\n\n/**\n * @type {ReplaceFunction}\n * @param {string} _\n * @param {string} atext\n * @param {string} label\n * @param {RegExpMatchObject} match\n */\nfunction findEmail(_, atext, label, match) {\n  if (\n    // Not an expected previous character.\n    !previous(match, true) ||\n    // Label ends in not allowed character.\n    /[_-\\d]$/.test(label)\n  ) {\n    return false\n  }\n\n  return {\n    type: 'link',\n    title: null,\n    url: 'mailto:' + atext + '@' + label,\n    children: [{type: 'text', value: atext + '@' + label}]\n  }\n}\n\n/**\n * @param {string} domain\n * @returns {boolean}\n */\nfunction isCorrectDomain(domain) {\n  const parts = domain.split('.')\n\n  if (\n    parts.length < 2 ||\n    (parts[parts.length - 1] &&\n      (/_/.test(parts[parts.length - 1]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 1]))) ||\n    (parts[parts.length - 2] &&\n      (/_/.test(parts[parts.length - 2]) ||\n        !/[a-zA-Z\\d]/.test(parts[parts.length - 2])))\n  ) {\n    return false\n  }\n\n  return true\n}\n\n/**\n * @param {string} url\n * @returns {[string, string|undefined]}\n */\nfunction splitUrl(url) {\n  const trailExec = /[!\"&'),.:;<>?\\]}]+$/.exec(url)\n  /** @type {number} */\n  let closingParenIndex\n  /** @type {number} */\n  let openingParens\n  /** @type {number} */\n  let closingParens\n  /** @type {string|undefined} */\n  let trail\n\n  if (trailExec) {\n    url = url.slice(0, trailExec.index)\n    trail = trailExec[0]\n    closingParenIndex = trail.indexOf(')')\n    openingParens = ccount(url, '(')\n    closingParens = ccount(url, ')')\n\n    while (closingParenIndex !== -1 && openingParens > closingParens) {\n      url += trail.slice(0, closingParenIndex + 1)\n      trail = trail.slice(closingParenIndex + 1)\n      closingParenIndex = trail.indexOf(')')\n      closingParens++\n    }\n  }\n\n  return [url, trail]\n}\n\n/**\n * @param {RegExpMatchObject} match\n * @param {boolean} [email=false]\n * @returns {boolean}\n */\nfunction previous(match, email) {\n  const code = match.input.charCodeAt(match.index - 1)\n\n  return (\n    (match.index === 0 ||\n      unicodeWhitespace(code) ||\n      unicodePunctuation(code)) &&\n    (!email || code !== 47)\n  )\n}\n","/**\n * @typedef {import('mdast').Association} Association\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another: controversially,\n * character escapes and references don’t work in this matching: `&copy;` does\n * not match `©`, and `\\+` does not match `+`.\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character escapes\n * and all character references.\n *\n * @param {Association} node\n * @returns {string}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * Functions to track output positions.\n * This info isn’t used yet but suchs functionality allows line wrapping,\n * and theoretically source maps (though, is there practical use in that?).\n *\n * @param {TrackFields} options_\n */\nexport function track(options_) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = options_ || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @returns {{now: Point, lineShift: number}}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @param {number} value\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past a string.\n   *\n   * @param {string} value\n   * @returns {string}\n   */\n  function move(value = '') {\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').Join} Join\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {TrackFields} safeOptions\n * @returns {string}\n */\nexport function containerFlow(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  const tracker = track(safeOptions)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      context.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(tracker.move(between(child, children[index + 1])))\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n\n  /**\n   * @param {Node} left\n   * @param {Node} right\n   * @returns {string}\n   */\n  function between(left, right) {\n    let index = context.join.length\n\n    while (index--) {\n      const result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return '\\n'.repeat(1 + result)\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","/**\n * @callback Map\n * @param {string} value\n * @param {number} line\n * @param {boolean} blank\n * @returns {string}\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @param {string} value\n * @param {Map} map\n * @returns {string}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<string>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * @param {Context} context\n * @param {string|null|undefined} input\n * @param {SafeOptions & {encode?: Array<string>}} config\n * @returns {string}\n */\nexport function safe(context, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray|null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').FootnoteReference} FootnoteReference\n * @typedef {import('mdast').FootnoteDefinition} FootnoteDefinition\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Map} Map\n */\n\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {association} from 'mdast-util-to-markdown/lib/util/association.js'\nimport {containerFlow} from 'mdast-util-to-markdown/lib/util/container-flow.js'\nimport {indentLines} from 'mdast-util-to-markdown/lib/util/indent-lines.js'\nimport {safe} from 'mdast-util-to-markdown/lib/util/safe.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/**\n * @returns {FromMarkdownExtension}\n */\nexport function gfmFootnoteFromMarkdown() {\n  return {\n    enter: {\n      gfmFootnoteDefinition: enterFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: enterFootnoteDefinitionLabelString,\n      gfmFootnoteCall: enterFootnoteCall,\n      gfmFootnoteCallString: enterFootnoteCallString\n    },\n    exit: {\n      gfmFootnoteDefinition: exitFootnoteDefinition,\n      gfmFootnoteDefinitionLabelString: exitFootnoteDefinitionLabelString,\n      gfmFootnoteCall: exitFootnoteCall,\n      gfmFootnoteCallString: exitFootnoteCallString\n    }\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinition(token) {\n    this.enter(\n      {type: 'footnoteDefinition', identifier: '', label: '', children: []},\n      token\n    )\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteDefinitionLabelString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinitionLabelString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteDefinition(token) {\n    this.exit(token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCall(token) {\n    this.enter({type: 'footnoteReference', identifier: '', label: ''}, token)\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function enterFootnoteCallString() {\n    this.buffer()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCallString(token) {\n    const label = this.resume()\n    const node = /** @type {FootnoteDefinition} */ (\n      this.stack[this.stack.length - 1]\n    )\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /** @type {FromMarkdownHandle} */\n  function exitFootnoteCall(token) {\n    this.exit(token)\n  }\n}\n\n/**\n * @returns {ToMarkdownExtension}\n */\nexport function gfmFootnoteToMarkdown() {\n  footnoteReference.peek = footnoteReferencePeek\n\n  return {\n    // This is on by default already.\n    unsafe: [{character: '[', inConstruct: ['phrasing', 'label', 'reference']}],\n    handlers: {footnoteDefinition, footnoteReference}\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteReference} node\n   */\n  function footnoteReference(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteReference')\n    const subexit = context.enter('reference')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    exit()\n    value += tracker.move(']')\n    return value\n  }\n\n  /** @type {ToMarkdownHandle} */\n  function footnoteReferencePeek() {\n    return '['\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {FootnoteDefinition} node\n   */\n  function footnoteDefinition(node, _, context, safeOptions) {\n    const tracker = track(safeOptions)\n    let value = tracker.move('[^')\n    const exit = context.enter('footnoteDefinition')\n    const subexit = context.enter('label')\n    value += tracker.move(\n      safe(context, association(node), {\n        ...tracker.current(),\n        before: value,\n        after: ']'\n      })\n    )\n    subexit()\n    value += tracker.move(\n      ']:' + (node.children && node.children.length > 0 ? ' ' : '')\n    )\n    tracker.shift(4)\n    value += tracker.move(\n      indentLines(containerFlow(node, context, tracker.current()), map)\n    )\n    exit()\n\n    return value\n\n    /** @type {Map} */\n    function map(line, index, blank) {\n      if (index) {\n        return (blank ? '' : '    ') + line\n      }\n\n      return line\n    }\n  }\n}\n","/**\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').SafeOptions} SafeOptions\n * @typedef {import('../types.js').Context} Context\n */\n\nimport {track} from './track.js'\n\n/**\n * @param {Parent} parent\n * @param {Context} context\n * @param {SafeOptions} safeOptions\n * @returns {string}\n */\nexport function containerPhrasing(parent, context, safeOptions) {\n  const indexStack = context.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = safeOptions.before\n\n  indexStack.push(-1)\n  let tracker = track(safeOptions)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = track(safeOptions)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        context.handle(child, parent, context, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","/**\n * @typedef {import('mdast').Delete} Delete\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmStrikethroughFromMarkdown = {\n  canContainEols: ['delete'],\n  enter: {strikethrough: enterStrikethrough},\n  exit: {strikethrough: exitStrikethrough}\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmStrikethroughToMarkdown = {\n  unsafe: [{character: '~', inConstruct: 'phrasing'}],\n  handlers: {delete: handleDelete}\n}\n\nhandleDelete.peek = peekDelete\n\n/** @type {FromMarkdownHandle} */\nfunction enterStrikethrough(token) {\n  this.enter({type: 'delete', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitStrikethrough(token) {\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {Delete} node\n */\nfunction handleDelete(node, _, context, safeOptions) {\n  const tracker = track(safeOptions)\n  const exit = context.enter('emphasis')\n  let value = tracker.move('~~')\n  value += containerPhrasing(node, context, {\n    ...tracker.current(),\n    before: value,\n    after: '~'\n  })\n  value += tracker.move('~~')\n  exit()\n  return value\n}\n\n/** @type {ToMarkdownHandle} */\nfunction peekDelete() {\n  return '~'\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @type {Handle}\n * @param {InlineCode} node\n */\nexport function inlineCode(node, _, context) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    const pattern = context.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray|null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @type {Handle}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef Options\n *   Configuration (optional).\n * @property {string|null|Array<string|null|undefined>} [align]\n *   One style for all columns, or styles for their respective columns.\n *   Each style is either `'l'` (left), `'r'` (right), or `'c'` (center).\n *   Other values are treated as `''`, which doesn’t place the colon in the\n *   alignment row but does align left.\n *   *Only the lowercased first character is used, so `Right` is fine.*\n * @property {boolean} [padding=true]\n *   Whether to add a space of padding between delimiters and cells.\n *\n *   When `true`, there is padding:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there is no padding:\n *\n *   ```markdown\n *   |Alpha|B    |\n *   |-----|-----|\n *   |C    |Delta|\n *   ```\n * @property {boolean} [delimiterStart=true]\n *   Whether to begin each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are starting delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no starting delimiters:\n *\n *   ```markdown\n *   Alpha | B     |\n *   ----- | ----- |\n *   C     | Delta |\n *   ```\n * @property {boolean} [delimiterEnd=true]\n *   Whether to end each row with the delimiter.\n *\n *   > 👉 **Note**: please don’t use this: it could create fragile structures\n *   > that aren’t understandable to some markdown parsers.\n *\n *   When `true`, there are ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   When `false`, there are no ending delimiters:\n *\n *   ```markdown\n *   | Alpha | B\n *   | ----- | -----\n *   | C     | Delta\n *   ```\n * @property {boolean} [alignDelimiters=true]\n *   Whether to align the delimiters.\n *   By default, they are aligned:\n *\n *   ```markdown\n *   | Alpha | B     |\n *   | ----- | ----- |\n *   | C     | Delta |\n *   ```\n *\n *   Pass `false` to make them staggered:\n *\n *   ```markdown\n *   | Alpha | B |\n *   | - | - |\n *   | C | Delta |\n *   ```\n * @property {(value: string) => number} [stringLength]\n *   Function to detect the length of table cell content.\n *   This is used when aligning the delimiters (`|`) between table cells.\n *   Full-width characters and emoji mess up delimiter alignment when viewing\n *   the markdown source.\n *   To fix this, you can pass this function, which receives the cell content\n *   and returns its “visible” size.\n *   Note that what is and isn’t visible depends on where the text is displayed.\n *\n *   Without such a function, the following:\n *\n *   ```js\n *   markdownTable([\n *     ['Alpha', 'Bravo'],\n *     ['中文', 'Charlie'],\n *     ['👩‍❤️‍👩', 'Delta']\n *   ])\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo |\n *   | - | - |\n *   | 中文 | Charlie |\n *   | 👩‍❤️‍👩 | Delta |\n *   ```\n *\n *   With [`string-width`](https://github.com/sindresorhus/string-width):\n *\n *   ```js\n *   import stringWidth from 'string-width'\n *\n *   markdownTable(\n *     [\n *       ['Alpha', 'Bravo'],\n *       ['中文', 'Charlie'],\n *       ['👩‍❤️‍👩', 'Delta']\n *     ],\n *     {stringLength: stringWidth}\n *   )\n *   ```\n *\n *   Yields:\n *\n *   ```markdown\n *   | Alpha | Bravo   |\n *   | ----- | ------- |\n *   | 中文  | Charlie |\n *   | 👩‍❤️‍👩    | Delta   |\n *   ```\n */\n\n/**\n * @typedef {Options} MarkdownTableOptions\n * @todo\n *   Remove next major.\n */\n\n/**\n * Generate a markdown ([GFM](https://docs.github.com/en/github/writing-on-github/working-with-advanced-formatting/organizing-information-with-tables)) table..\n *\n * @param {Array<Array<string|null|undefined>>} table\n *   Table data (matrix of strings).\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n */\nexport function markdownTable(table, options = {}) {\n  const align = (options.align || []).concat()\n  const stringLength = options.stringLength || defaultStringLength\n  /** @type {Array<number>} Character codes as symbols for alignment per column. */\n  const alignments = []\n  /** @type {Array<Array<string>>} Cells per row. */\n  const cellMatrix = []\n  /** @type {Array<Array<number>>} Sizes of each cell per row. */\n  const sizeMatrix = []\n  /** @type {Array<number>} */\n  const longestCellByColumn = []\n  let mostCellsPerRow = 0\n  let rowIndex = -1\n\n  // This is a superfluous loop if we don’t align delimiters, but otherwise we’d\n  // do superfluous work when aligning, so optimize for aligning.\n  while (++rowIndex < table.length) {\n    /** @type {Array<string>} */\n    const row = []\n    /** @type {Array<number>} */\n    const sizes = []\n    let columnIndex = -1\n\n    if (table[rowIndex].length > mostCellsPerRow) {\n      mostCellsPerRow = table[rowIndex].length\n    }\n\n    while (++columnIndex < table[rowIndex].length) {\n      const cell = serialize(table[rowIndex][columnIndex])\n\n      if (options.alignDelimiters !== false) {\n        const size = stringLength(cell)\n        sizes[columnIndex] = size\n\n        if (\n          longestCellByColumn[columnIndex] === undefined ||\n          size > longestCellByColumn[columnIndex]\n        ) {\n          longestCellByColumn[columnIndex] = size\n        }\n      }\n\n      row.push(cell)\n    }\n\n    cellMatrix[rowIndex] = row\n    sizeMatrix[rowIndex] = sizes\n  }\n\n  // Figure out which alignments to use.\n  let columnIndex = -1\n\n  if (typeof align === 'object' && 'length' in align) {\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = toAlignment(align[columnIndex])\n    }\n  } else {\n    const code = toAlignment(align)\n\n    while (++columnIndex < mostCellsPerRow) {\n      alignments[columnIndex] = code\n    }\n  }\n\n  // Inject the alignment row.\n  columnIndex = -1\n  /** @type {Array<string>} */\n  const row = []\n  /** @type {Array<number>} */\n  const sizes = []\n\n  while (++columnIndex < mostCellsPerRow) {\n    const code = alignments[columnIndex]\n    let before = ''\n    let after = ''\n\n    if (code === 99 /* `c` */) {\n      before = ':'\n      after = ':'\n    } else if (code === 108 /* `l` */) {\n      before = ':'\n    } else if (code === 114 /* `r` */) {\n      after = ':'\n    }\n\n    // There *must* be at least one hyphen-minus in each alignment cell.\n    let size =\n      options.alignDelimiters === false\n        ? 1\n        : Math.max(\n            1,\n            longestCellByColumn[columnIndex] - before.length - after.length\n          )\n\n    const cell = before + '-'.repeat(size) + after\n\n    if (options.alignDelimiters !== false) {\n      size = before.length + size + after.length\n\n      if (size > longestCellByColumn[columnIndex]) {\n        longestCellByColumn[columnIndex] = size\n      }\n\n      sizes[columnIndex] = size\n    }\n\n    row[columnIndex] = cell\n  }\n\n  // Inject the alignment row.\n  cellMatrix.splice(1, 0, row)\n  sizeMatrix.splice(1, 0, sizes)\n\n  rowIndex = -1\n  /** @type {Array<string>} */\n  const lines = []\n\n  while (++rowIndex < cellMatrix.length) {\n    const row = cellMatrix[rowIndex]\n    const sizes = sizeMatrix[rowIndex]\n    columnIndex = -1\n    /** @type {Array<string>} */\n    const line = []\n\n    while (++columnIndex < mostCellsPerRow) {\n      const cell = row[columnIndex] || ''\n      let before = ''\n      let after = ''\n\n      if (options.alignDelimiters !== false) {\n        const size =\n          longestCellByColumn[columnIndex] - (sizes[columnIndex] || 0)\n        const code = alignments[columnIndex]\n\n        if (code === 114 /* `r` */) {\n          before = ' '.repeat(size)\n        } else if (code === 99 /* `c` */) {\n          if (size % 2) {\n            before = ' '.repeat(size / 2 + 0.5)\n            after = ' '.repeat(size / 2 - 0.5)\n          } else {\n            before = ' '.repeat(size / 2)\n            after = before\n          }\n        } else {\n          after = ' '.repeat(size)\n        }\n      }\n\n      if (options.delimiterStart !== false && !columnIndex) {\n        line.push('|')\n      }\n\n      if (\n        options.padding !== false &&\n        // Don’t add the opening space if we’re not aligning and the cell is\n        // empty: there will be a closing space.\n        !(options.alignDelimiters === false && cell === '') &&\n        (options.delimiterStart !== false || columnIndex)\n      ) {\n        line.push(' ')\n      }\n\n      if (options.alignDelimiters !== false) {\n        line.push(before)\n      }\n\n      line.push(cell)\n\n      if (options.alignDelimiters !== false) {\n        line.push(after)\n      }\n\n      if (options.padding !== false) {\n        line.push(' ')\n      }\n\n      if (\n        options.delimiterEnd !== false ||\n        columnIndex !== mostCellsPerRow - 1\n      ) {\n        line.push('|')\n      }\n    }\n\n    lines.push(\n      options.delimiterEnd === false\n        ? line.join('').replace(/ +$/, '')\n        : line.join('')\n    )\n  }\n\n  return lines.join('\\n')\n}\n\n/**\n * @param {string|null|undefined} [value]\n * @returns {string}\n */\nfunction serialize(value) {\n  return value === null || value === undefined ? '' : String(value)\n}\n\n/**\n * @param {string} value\n * @returns {number}\n */\nfunction defaultStringLength(value) {\n  return value.length\n}\n\n/**\n * @param {string|null|undefined} value\n * @returns {number}\n */\nfunction toAlignment(value) {\n  const code = typeof value === 'string' ? value.codePointAt(0) : 0\n\n  return code === 67 /* `C` */ || code === 99 /* `c` */\n    ? 99 /* `c` */\n    : code === 76 /* `L` */ || code === 108 /* `l` */\n    ? 108 /* `l` */\n    : code === 82 /* `R` */ || code === 114 /* `r` */\n    ? 114 /* `r` */\n    : 0\n}\n","/**\n * @typedef {import('mdast').AlignType} AlignType\n * @typedef {import('mdast').Table} Table\n * @typedef {import('mdast').TableRow} TableRow\n * @typedef {import('mdast').TableCell} TableCell\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('markdown-table').MarkdownTableOptions} MarkdownTableOptions\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Context} ToMarkdownContext\n * @typedef {import('mdast-util-to-markdown').SafeOptions} SafeOptions\n *\n * @typedef Options\n * @property {boolean} [tableCellPadding=true]\n * @property {boolean} [tablePipeAlign=true]\n * @property {MarkdownTableOptions['stringLength']} [stringLength]\n */\n\nimport {containerPhrasing} from 'mdast-util-to-markdown/lib/util/container-phrasing.js'\nimport {inlineCode} from 'mdast-util-to-markdown/lib/handle/inline-code.js'\nimport {markdownTable} from 'markdown-table'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTableFromMarkdown = {\n  enter: {\n    table: enterTable,\n    tableData: enterCell,\n    tableHeader: enterCell,\n    tableRow: enterRow\n  },\n  exit: {\n    codeText: exitCodeText,\n    table: exitTable,\n    tableData: exit,\n    tableHeader: exit,\n    tableRow: exit\n  }\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterTable(token) {\n  /** @type {Array<'left'|'right'|'center'|'none'>} */\n  // @ts-expect-error: `align` is custom.\n  const align = token._align\n  this.enter(\n    {\n      type: 'table',\n      align: align.map((d) => (d === 'none' ? null : d)),\n      children: []\n    },\n    token\n  )\n  this.setData('inTable', true)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitTable(token) {\n  this.exit(token)\n  this.setData('inTable')\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterRow(token) {\n  this.enter({type: 'tableRow', children: []}, token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exit(token) {\n  this.exit(token)\n}\n\n/** @type {FromMarkdownHandle} */\nfunction enterCell(token) {\n  this.enter({type: 'tableCell', children: []}, token)\n}\n\n// Overwrite the default code text data handler to unescape escaped pipes when\n// they are in tables.\n/** @type {FromMarkdownHandle} */\nfunction exitCodeText(token) {\n  let value = this.resume()\n\n  if (this.getData('inTable')) {\n    value = value.replace(/\\\\([\\\\|])/g, replace)\n  }\n\n  const node = /** @type {InlineCode} */ (this.stack[this.stack.length - 1])\n  node.value = value\n  this.exit(token)\n}\n\n/**\n * @param {string} $0\n * @param {string} $1\n * @returns {string}\n */\nfunction replace($0, $1) {\n  // Pipes work, backslashes don’t (but can’t escape pipes).\n  return $1 === '|' ? $1 : $0\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmTableToMarkdown(options) {\n  const settings = options || {}\n  const padding = settings.tableCellPadding\n  const alignDelimiters = settings.tablePipeAlign\n  const stringLength = settings.stringLength\n  const around = padding ? ' ' : '|'\n\n  return {\n    unsafe: [\n      {character: '\\r', inConstruct: 'tableCell'},\n      {character: '\\n', inConstruct: 'tableCell'},\n      // A pipe, when followed by a tab or space (padding), or a dash or colon\n      // (unpadded delimiter row), could result in a table.\n      {atBreak: true, character: '|', after: '[\\t :-]'},\n      // A pipe in a cell must be encoded.\n      {character: '|', inConstruct: 'tableCell'},\n      // A colon must be followed by a dash, in which case it could start a\n      // delimiter row.\n      {atBreak: true, character: ':', after: '-'},\n      // A delimiter row can also start with a dash, when followed by more\n      // dashes, a colon, or a pipe.\n      // This is a stricter version than the built in check for lists, thematic\n      // breaks, and setex heading underlines though:\n      // <https://github.com/syntax-tree/mdast-util-to-markdown/blob/51a2038/lib/unsafe.js#L57>\n      {atBreak: true, character: '-', after: '[:|-]'}\n    ],\n    handlers: {\n      table: handleTable,\n      tableRow: handleTableRow,\n      tableCell: handleTableCell,\n      inlineCode: inlineCodeWithTable\n    }\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {Table} node\n   */\n  function handleTable(node, _, context, safeOptions) {\n    return serializeData(\n      handleTableAsData(node, context, safeOptions),\n      // @ts-expect-error: fixed in `markdown-table@3.0.1`.\n      node.align\n    )\n  }\n\n  /**\n   * This function isn’t really used normally, because we handle rows at the\n   * table level.\n   * But, if someone passes in a table row, this ensures we make somewhat sense.\n   *\n   * @type {ToMarkdownHandle}\n   * @param {TableRow} node\n   */\n  function handleTableRow(node, _, context, safeOptions) {\n    const row = handleTableRowAsData(node, context, safeOptions)\n    // `markdown-table` will always add an align row\n    const value = serializeData([row])\n    return value.slice(0, value.indexOf('\\n'))\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {TableCell} node\n   */\n  function handleTableCell(node, _, context, safeOptions) {\n    const exit = context.enter('tableCell')\n    const subexit = context.enter('phrasing')\n    const value = containerPhrasing(node, context, {\n      ...safeOptions,\n      before: around,\n      after: around\n    })\n    subexit()\n    exit()\n    return value\n  }\n\n  /**\n   * @param {Array<Array<string>>} matrix\n   * @param {Array<string>} [align]\n   */\n  function serializeData(matrix, align) {\n    return markdownTable(matrix, {\n      align,\n      alignDelimiters,\n      padding,\n      stringLength\n    })\n  }\n\n  /**\n   * @param {Table} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<Array<string>>} */\n    const result = []\n    const subexit = context.enter('table')\n\n    while (++index < children.length) {\n      result[index] = handleTableRowAsData(\n        children[index],\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @param {TableRow} node\n   * @param {ToMarkdownContext} context\n   * @param {SafeOptions} safeOptions\n   */\n  function handleTableRowAsData(node, context, safeOptions) {\n    const children = node.children\n    let index = -1\n    /** @type {Array<string>} */\n    const result = []\n    const subexit = context.enter('tableRow')\n\n    while (++index < children.length) {\n      // Note: the positional info as used here is incorrect.\n      // Making it correct would be impossible due to aligning cells?\n      // And it would need copy/pasting `markdown-table` into this project.\n      result[index] = handleTableCell(\n        children[index],\n        node,\n        context,\n        safeOptions\n      )\n    }\n\n    subexit()\n\n    return result\n  }\n\n  /**\n   * @type {ToMarkdownHandle}\n   * @param {InlineCode} node\n   */\n  function inlineCodeWithTable(node, parent, context) {\n    let value = inlineCode(node, parent, context)\n\n    if (context.stack.includes('tableCell')) {\n      value = value.replace(/\\|/g, '\\\\$&')\n    }\n\n    return value\n  }\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').List} List\n * @typedef {import('../util/indent-lines.js').Map} Map\n * @typedef {import('../types.js').Options} Options\n * @typedef {import('../types.js').Handle} Handle\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\nimport {containerFlow} from '../util/container-flow.js'\nimport {indentLines} from '../util/indent-lines.js'\nimport {track} from '../util/track.js'\n\n/**\n * @type {Handle}\n * @param {ListItem} node\n */\nexport function listItem(node, parent, context, safeOptions) {\n  const listItemIndent = checkListItemIndent(context)\n  let bullet = context.bulletCurrent || checkBullet(context)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = track(safeOptions)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = context.enter('listItem')\n  const value = indentLines(\n    containerFlow(node, context, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['listItemIndent'], undefined>}\n */\nexport function checkListItemIndent(context) {\n  const style = context.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('../types.js').Context} Context\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {Context} context\n * @returns {Exclude<Options['bullet'], undefined>}\n */\nexport function checkBullet(context) {\n  const marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {Extract<import('mdast').Root|import('mdast').Content, import('unist').Parent>} Parent\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').BlockContent} BlockContent\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-from-markdown').Handle} FromMarkdownHandle\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Handle} ToMarkdownHandle\n */\n\nimport {listItem} from 'mdast-util-to-markdown/lib/handle/list-item.js'\nimport {track} from 'mdast-util-to-markdown/lib/util/track.js'\n\n/** @type {FromMarkdownExtension} */\nexport const gfmTaskListItemFromMarkdown = {\n  exit: {\n    taskListCheckValueChecked: exitCheck,\n    taskListCheckValueUnchecked: exitCheck,\n    paragraph: exitParagraphWithTaskListItem\n  }\n}\n\n/** @type {ToMarkdownExtension} */\nexport const gfmTaskListItemToMarkdown = {\n  unsafe: [{atBreak: true, character: '-', after: '[:|-]'}],\n  handlers: {listItem: listItemWithTaskListItem}\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitCheck(token) {\n  const node = /** @type {ListItem} */ (this.stack[this.stack.length - 2])\n  // We’re always in a paragraph, in a list item.\n  node.checked = token.type === 'taskListCheckValueChecked'\n}\n\n/** @type {FromMarkdownHandle} */\nfunction exitParagraphWithTaskListItem(token) {\n  const parent = /** @type {Parent} */ (this.stack[this.stack.length - 2])\n  const node = /** @type {Paragraph} */ (this.stack[this.stack.length - 1])\n  const siblings = parent.children\n  const head = node.children[0]\n  let index = -1\n  /** @type {Paragraph|undefined} */\n  let firstParaghraph\n\n  if (\n    parent &&\n    parent.type === 'listItem' &&\n    typeof parent.checked === 'boolean' &&\n    head &&\n    head.type === 'text'\n  ) {\n    while (++index < siblings.length) {\n      const sibling = siblings[index]\n      if (sibling.type === 'paragraph') {\n        firstParaghraph = sibling\n        break\n      }\n    }\n\n    if (firstParaghraph === node) {\n      // Must start with a space or a tab.\n      head.value = head.value.slice(1)\n\n      if (head.value.length === 0) {\n        node.children.shift()\n      } else if (\n        node.position &&\n        head.position &&\n        typeof head.position.start.offset === 'number'\n      ) {\n        head.position.start.column++\n        head.position.start.offset++\n        node.position.start = Object.assign({}, head.position.start)\n      }\n    }\n  }\n\n  this.exit(token)\n}\n\n/**\n * @type {ToMarkdownHandle}\n * @param {ListItem} node\n */\nfunction listItemWithTaskListItem(node, parent, context, safeOptions) {\n  const head = node.children[0]\n  const checkable =\n    typeof node.checked === 'boolean' && head && head.type === 'paragraph'\n  const checkbox = '[' + (node.checked ? 'x' : ' ') + '] '\n  const tracker = track(safeOptions)\n\n  if (checkable) {\n    tracker.move(checkbox)\n  }\n\n  let value = listItem(node, parent, context, {\n    ...safeOptions,\n    ...tracker.current()\n  })\n\n  if (checkable) {\n    value = value.replace(/^(?:[*+-]|\\d+\\.)([\\r\\n]| {1,3})/, check)\n  }\n\n  return value\n\n  /**\n   * @param {string} $0\n   * @returns {string}\n   */\n  function check($0) {\n    return $0 + checkbox\n  }\n}\n","/**\n * @typedef {import('mdast-util-from-markdown').Extension} FromMarkdownExtension\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownExtension\n *\n * @typedef {import('mdast-util-gfm-table').Options} Options\n */\n\nimport {\n  gfmAutolinkLiteralFromMarkdown,\n  gfmAutolinkLiteralToMarkdown\n} from 'mdast-util-gfm-autolink-literal'\nimport {\n  gfmFootnoteFromMarkdown,\n  gfmFootnoteToMarkdown\n} from 'mdast-util-gfm-footnote'\nimport {\n  gfmStrikethroughFromMarkdown,\n  gfmStrikethroughToMarkdown\n} from 'mdast-util-gfm-strikethrough'\nimport {gfmTableFromMarkdown, gfmTableToMarkdown} from 'mdast-util-gfm-table'\nimport {\n  gfmTaskListItemFromMarkdown,\n  gfmTaskListItemToMarkdown\n} from 'mdast-util-gfm-task-list-item'\n\n/**\n * @returns {Array<FromMarkdownExtension>}\n */\nexport function gfmFromMarkdown() {\n  return [\n    gfmAutolinkLiteralFromMarkdown,\n    gfmFootnoteFromMarkdown(),\n    gfmStrikethroughFromMarkdown,\n    gfmTableFromMarkdown,\n    gfmTaskListItemFromMarkdown\n  ]\n}\n\n/**\n * @param {Options} [options]\n * @returns {ToMarkdownExtension}\n */\nexport function gfmToMarkdown(options) {\n  return {\n    extensions: [\n      gfmAutolinkLiteralToMarkdown,\n      gfmFootnoteToMarkdown(),\n      gfmStrikethroughToMarkdown,\n      gfmTableToMarkdown(options),\n      gfmTaskListItemToMarkdown\n    ]\n  }\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('micromark-extension-gfm').Options & import('mdast-util-gfm').Options} Options\n */\n\nimport {gfm} from 'micromark-extension-gfm'\nimport {gfmFromMarkdown, gfmToMarkdown} from 'mdast-util-gfm'\n\n/**\n * Plugin to support GFM (autolink literals, footnotes, strikethrough, tables, tasklists).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function remarkGfm(options = {}) {\n  const data = this.data()\n\n  add('micromarkExtensions', gfm(options))\n  add('fromMarkdownExtensions', gfmFromMarkdown())\n  add('toMarkdownExtensions', gfmToMarkdown(options))\n\n  /**\n   * @param {string} field\n   * @param {unknown} value\n   */\n  function add(field, value) {\n    const list = /** @type {unknown[]} */ (\n      // Other extensions\n      /* c8 ignore next 2 */\n      data[field] ? data[field] : (data[field] = [])\n    )\n\n    list.push(value)\n  }\n}\n","var own = {}.hasOwnProperty\n\n/**\n * Check if `node` has a set `name` property.\n *\n * @param {unknown} node\n * @param {string} name\n * @returns {boolean}\n */\nexport function hasProperty(node, name) {\n  /** @type {unknown} */\n  var value =\n    name &&\n    node &&\n    typeof node === 'object' &&\n    // @ts-ignore Looks like a node.\n    node.type === 'element' &&\n    // @ts-ignore Looks like an element.\n    node.properties &&\n    // @ts-ignore Looks like an element.\n    own.call(node.properties, name) &&\n    // @ts-ignore Looks like an element.\n    node.properties[name]\n\n  return value !== null && value !== undefined && value !== false\n}\n","/**\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {Root|Parent['children'][number]} Node\n */\n\n/**\n * Rank of a heading: H1 -> 1, H2 -> 2, etc.\n *\n * @param {Node} node\n * @returns {number|null}\n */\nexport function headingRank(node) {\n  var name =\n    (node && node.type === 'element' && node.tagName.toLowerCase()) || ''\n  var code =\n    name.length === 2 && name.charCodeAt(0) === 104 /* `h` */\n      ? name.charCodeAt(1)\n      : 0\n  return code > 48 /* `0` */ && code < 55 /* `7` */ ? code - 48 /* `0` */ : null\n}\n","/**\n * @fileoverview\n *   Get the plain-text value of a hast node.\n * @longdescription\n *   ## Use\n *\n *   ```js\n *   import {h} from 'hastscript'\n *   import {toString} from 'hast-util-to-string'\n *\n *   toString(h('p', 'Alpha'))\n *   //=> 'Alpha'\n *   toString(h('div', [h('b', 'Bold'), ' and ', h('i', 'italic'), '.']))\n *   //=> 'Bold and italic.'\n *   ```\n *\n *   ## API\n *\n *   ### `toString(node)`\n *\n *   Transform a node to a string.\n */\n\n/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {Root|Root['children'][number]} Node\n */\n\n/**\n * Get the plain-text value of a hast node.\n *\n * @param {Node} node\n * @returns {string}\n */\nexport function toString(node) {\n  // “The concatenation of data of all the Text node descendants of the context\n  // object, in tree order.”\n  if ('children' in node) {\n    return all(node)\n  }\n\n  // “Context object’s data.”\n  return 'value' in node ? node.value : ''\n}\n\n/**\n * @param {Node} node\n * @returns {string}\n */\nfunction one(node) {\n  if (node.type === 'text') {\n    return node.value\n  }\n\n  return 'children' in node ? all(node) : ''\n}\n\n/**\n * @param {Root|Element} node\n * @returns {string}\n */\nfunction all(node) {\n  let index = -1\n  /** @type {string[]} */\n  const result = []\n\n  while (++index < node.children.length) {\n    result[index] = one(node.children[index])\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('hast').Root} Root\n */\n\nimport Slugger from 'github-slugger'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {toString} from 'hast-util-to-string'\nimport {visit} from 'unist-util-visit'\n\nconst slugs = new Slugger()\n\n/**\n * Plugin to add `id`s to headings.\n *\n * @type {import('unified').Plugin<Array<void>, Root>}\n */\nexport default function rehypeSlug() {\n  return (tree) => {\n    slugs.reset()\n\n    visit(tree, 'element', (node) => {\n      if (headingRank(node) && node.properties && !hasProperty(node, 'id')) {\n        node.properties.id = slugs.slug(toString(node))\n      }\n    })\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('hast').Element} Element\n *\n * @typedef {string} TagName\n * @typedef {null|undefined|TagName|TestFunctionAnything|Array.<TagName|TestFunctionAnything>} Test\n */\n\n/**\n * @template {Element} T\n * @typedef {null|undefined|T['tagName']|TestFunctionPredicate<T>|Array.<T['tagName']|TestFunctionPredicate<T>>} PredicateTest\n */\n\n/**\n * Check if an element passes a test\n *\n * @callback TestFunctionAnything\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean|void}\n */\n\n/**\n * Check if an element passes a certain node test\n *\n * @template {Element} X\n * @callback TestFunctionPredicate\n * @param {Element} element\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {element is X}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @callback AssertAnything\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {boolean}\n */\n\n/**\n * Check if a node is an element and passes a certain node test\n *\n * @template {Element} Y\n * @callback AssertPredicate\n * @param {unknown} [node]\n * @param {number|null|undefined} [index]\n * @param {Parent|null|undefined} [parent]\n * @returns {node is Y}\n */\n\n// Check if `node` is an `element` and whether it passes the given test.\nexport const isElement =\n  /**\n   * Check if a node is an element and passes a test.\n   * When a `parent` node is known the `index` of node should also be given.\n   *\n   * @type {(\n   *   (() => false) &\n   *   (<T extends Element = Element>(node: unknown, test?: PredicateTest<T>, index?: number, parent?: Parent, context?: unknown) => node is T) &\n   *   ((node: unknown, test: Test, index?: number, parent?: Parent, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * Check if a node passes a test.\n     * When a `parent` node is known the `index` of node should also be given.\n     *\n     * @param {unknown} [node] Node to check\n     * @param {Test} [test] When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `array`, checks any one of the subtests pass.\n     * @param {number} [index] Position of `node` in `parent`\n     * @param {Parent} [parent] Parent of `node`\n     * @param {unknown} [context] Context object to invoke `test` with\n     * @returns {boolean} Whether test passed and `node` is an `Element` (object with `type` set to `element` and `tagName` set to a non-empty string).\n     */\n    // eslint-disable-next-line max-params\n    function (node, test, index, parent, context) {\n      const check = convertElement(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index for child node')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!parent.type || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      // @ts-expect-error Looks like a node.\n      if (!node || !node.type || typeof node.type !== 'string') {\n        return false\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      return check.call(context, node, index, parent)\n    }\n  )\n\nexport const convertElement =\n  /**\n   * @type {(\n   *   (<T extends Element>(test: T['tagName']|TestFunctionPredicate<T>) => AssertPredicate<T>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * Generate an assertion from a check.\n     * @param {Test} [test]\n     * When nullish, checks if `node` is a `Node`.\n     * When `string`, works like passing `function (node) {return node.type === test}`.\n     * When `function` checks if function passed the node is true.\n     * When `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n     * When `array`, checks any one of the subtests pass.\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return element\n      }\n\n      if (typeof test === 'string') {\n        return tagNameFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return anyFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or array as test')\n    }\n  )\n\n/**\n * @param {Array.<TagName|TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array.<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convertElement(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {unknown[]} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) {\n        return true\n      }\n    }\n\n    return false\n  }\n}\n\n/**\n * Utility to convert a string into a function which checks a given node’s tag\n * name for said string.\n *\n * @param {TagName} check\n * @returns {AssertAnything}\n */\nfunction tagNameFactory(check) {\n  return tagName\n\n  /**\n   * @param {unknown} node\n   * @returns {boolean}\n   */\n  function tagName(node) {\n    return element(node) && node.tagName === check\n  }\n}\n\n/**\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array.<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    // @ts-expect-error: fine.\n    return element(node) && Boolean(check.call(this, node, ...parameters))\n  }\n}\n\n/**\n * Utility to return true if this is an element.\n * @param {unknown} node\n * @returns {node is Element}\n */\nfunction element(node) {\n  return Boolean(\n    node &&\n      typeof node === 'object' &&\n      // @ts-expect-error Looks like a node.\n      node.type === 'element' &&\n      // @ts-expect-error Looks like an element.\n      typeof node.tagName === 'string'\n  )\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast-util-is-element').Test} Test\n *\n * @typedef {'prepend'|'append'|'wrap'|'before'|'after'} Behavior\n *\n * @callback Build\n * @param {Element} node\n * @returns {ElementChild|ElementChild[]}\n *\n * @typedef Options\n *   Configuration.\n * @property {Behavior} [behavior='prepend']\n *   How to create links.\n * @property {Behavior} [behaviour]\n *   Please use `behavior` instead\n * @property {Properties} [properties]\n *   Extra properties to set on the link when injecting.\n *   Defaults to `{ariaHidden: true, tabIndex: -1}` when `'prepend'` or\n *   `'append'`.\n * @property {ElementChild|ElementChild[]|Build} [content={type: 'element', tagName: 'span', properties: {className: ['icon', 'icon-link']}, children: []}]\n *   hast nodes to insert in the link.\n * @property {ElementChild|ElementChild[]|Build} [group]\n *   hast node to wrap the heading and link with, if `behavior` is `'before'` or\n *   `'after'`.\n *   There is no default.\n * @property {Test} [test]\n *   Test to define which heading elements are linked.\n *   Any test that can be given to `hast-util-is-element` is supported.\n *   The default (no test) is to link all headings.\n *   Can be used to link only h1-h3, or for example all except h1.\n */\n\nimport extend from 'extend'\nimport {hasProperty} from 'hast-util-has-property'\nimport {headingRank} from 'hast-util-heading-rank'\nimport {convertElement} from 'hast-util-is-element'\nimport {visit, SKIP} from 'unist-util-visit'\n\n/** @type {Element} */\nconst contentDefaults = {\n  type: 'element',\n  tagName: 'span',\n  properties: {className: ['icon', 'icon-link']},\n  children: []\n}\n\n/**\n * Plugin to automatically add links to headings (h1-h6).\n *\n * @type {import('unified').Plugin<[Options?]|void[], Root>}\n */\nexport default function rehypeAutolinkHeadings(options = {}) {\n  let props = options.properties\n  const behavior = options.behaviour || options.behavior || 'prepend'\n  const content = options.content || contentDefaults\n  const group = options.group\n  const is = convertElement(options.test)\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  let method\n\n  if (behavior === 'wrap') {\n    method = wrap\n  } else if (behavior === 'before' || behavior === 'after') {\n    method = around\n  } else {\n    if (!props) {\n      props = {ariaHidden: 'true', tabIndex: -1}\n    }\n\n    method = inject\n  }\n\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (\n        headingRank(node) &&\n        hasProperty(node, 'id') &&\n        is(node, index, parent)\n      ) {\n        return method(node, index, parent)\n      }\n    })\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function inject(node) {\n    node.children[behavior === 'prepend' ? 'unshift' : 'push'](\n      create(node, extend(true, {}, props), toChildren(content, node))\n    )\n\n    return [SKIP]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function around(node, index, parent) {\n    // Uncommon.\n    /* c8 ignore next */\n    if (typeof index !== 'number' || !parent) return\n\n    const link = create(\n      node,\n      extend(true, {}, props),\n      toChildren(content, node)\n    )\n    let nodes = behavior === 'before' ? [link, node] : [node, link]\n\n    if (group) {\n      const grouping = toNode(group, node)\n\n      if (grouping && !Array.isArray(grouping) && grouping.type === 'element') {\n        grouping.children = nodes\n        nodes = [grouping]\n      }\n    }\n\n    parent.children.splice(index, 1, ...nodes)\n\n    return [SKIP, index + nodes.length]\n  }\n\n  /** @type {import('unist-util-visit/complex-types').Visitor<Element>} */\n  function wrap(node) {\n    node.children = [create(node, extend(true, {}, props), node.children)]\n    return [SKIP]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild[]}\n   */\n  function toChildren(value, node) {\n    const result = toNode(value, node)\n    return Array.isArray(result) ? result : [result]\n  }\n\n  /**\n   * @param {ElementChild|ElementChild[]|Build} value\n   * @param {Element} node\n   * @returns {ElementChild|ElementChild[]}\n   */\n  function toNode(value, node) {\n    if (typeof value === 'function') return value(node)\n    return extend(true, Array.isArray(value) ? [] : {}, value)\n  }\n\n  /**\n   * @param {Element} node\n   * @param {Properties} props\n   * @param {ElementChild[]} children\n   * @returns {Element}\n   */\n  function create(node, props, children) {\n    return {\n      type: 'element',\n      tagName: 'a',\n      properties: Object.assign({}, props, {\n        // Fix hast types and make them required.\n        /* c8 ignore next */\n        href: '#' + (node.properties || {}).id\n      }),\n      children\n    }\n  }\n}\n","/**\n * @typedef {import('./core.js').HChild} Child Acceptable child value\n * @typedef {import('./core.js').HProperties} Properties Acceptable properties value.\n *\n * @typedef {import('./jsx-classic').Element} s.JSX.Element\n * @typedef {import('./jsx-classic').IntrinsicAttributes} s.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic').IntrinsicElements} s.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic').ElementChildrenAttribute} s.JSX.ElementChildrenAttribute\n */\n\nimport {svg} from 'property-information'\nimport {core} from './core.js'\nimport {svgCaseSensitiveTagNames} from './svg-case-sensitive-tag-names.js'\n\nexport const s = core(svg, 'g', svgCaseSensitiveTagNames)\n","export const svgCaseSensitiveTagNames = [\n  'altGlyph',\n  'altGlyphDef',\n  'altGlyphItem',\n  'animateColor',\n  'animateMotion',\n  'animateTransform',\n  'clipPath',\n  'feBlend',\n  'feColorMatrix',\n  'feComponentTransfer',\n  'feComposite',\n  'feConvolveMatrix',\n  'feDiffuseLighting',\n  'feDisplacementMap',\n  'feDistantLight',\n  'feDropShadow',\n  'feFlood',\n  'feFuncA',\n  'feFuncB',\n  'feFuncG',\n  'feFuncR',\n  'feGaussianBlur',\n  'feImage',\n  'feMerge',\n  'feMergeNode',\n  'feMorphology',\n  'feOffset',\n  'fePointLight',\n  'feSpecularLighting',\n  'feSpotLight',\n  'feTile',\n  'feTurbulence',\n  'foreignObject',\n  'glyphRef',\n  'linearGradient',\n  'radialGradient',\n  'solidColor',\n  'textArea',\n  'textPath'\n]\n","/**\n * Map of web namespaces.\n *\n * @type {Record<string, string>}\n */\nexport const webNamespaces = {\n  html: 'http://www.w3.org/1999/xhtml',\n  mathml: 'http://www.w3.org/1998/Math/MathML',\n  svg: 'http://www.w3.org/2000/svg',\n  xlink: 'http://www.w3.org/1999/xlink',\n  xml: 'http://www.w3.org/XML/1998/namespace',\n  xmlns: 'http://www.w3.org/2000/xmlns/'\n}\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').DocType} Doctype\n * @typedef {Parent['children'][number]} Child\n * @typedef {Element['children'][number]} ElementChild\n * @typedef {Child|Root} Node\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentType} P5Doctype\n * @typedef {import('parse5').CommentNode} P5Comment\n * @typedef {import('parse5').TextNode} P5Text\n * @typedef {import('parse5').Element} P5Element\n * @typedef {import('parse5').ElementLocation} P5ElementLocation\n * @typedef {import('parse5').Location} P5Location\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {import('parse5').Node} P5Node\n *\n * @typedef {'html'|'svg'} Space\n *\n * @callback Handler\n * @param {Context} ctx\n * @param {P5Node} node\n * @param {Array.<Child>} [children]\n * @returns {Node}\n *\n * @typedef Options\n * @property {Space} [space='html'] Whether the root of the tree is in the `'html'` or `'svg'` space. If an element in with the SVG namespace is found in `ast`, `fromParse5` automatically switches to the SVG space when entering the element, and switches back when leaving\n * @property {VFile} [file] `VFile`, used to add positional information to nodes. If given, the file should have the original HTML source as its contents\n * @property {boolean} [verbose=false] Whether to add extra positional information about starting tags, closing tags, and attributes to elements. Note: not used without `file`\n *\n * @typedef Context\n * @property {Schema} schema\n * @property {VFile|undefined} file\n * @property {boolean|undefined} verbose\n * @property {boolean} location\n */\n\nimport {h, s} from 'hastscript'\nimport {html, svg, find} from 'property-information'\nimport {location} from 'vfile-location'\nimport {webNamespaces} from 'web-namespaces'\n\nconst own = {}.hasOwnProperty\n\n// Handlers.\nconst map = {\n  '#document': root,\n  '#document-fragment': root,\n  '#text': text,\n  '#comment': comment,\n  '#documentType': doctype\n}\n\n/**\n * Transform Parse5’s AST to a hast tree.\n *\n * @param {P5Node} ast\n * @param {Options|VFile} [options]\n */\nexport function fromParse5(ast, options = {}) {\n  /** @type {Options} */\n  let settings\n  /** @type {VFile|undefined} */\n  let file\n\n  if (isFile(options)) {\n    file = options\n    settings = {}\n  } else {\n    file = options.file\n    settings = options\n  }\n\n  return transform(\n    {\n      schema: settings.space === 'svg' ? svg : html,\n      file,\n      verbose: settings.verbose,\n      location: false\n    },\n    ast\n  )\n}\n\n/**\n * Transform children.\n *\n * @param {Context} ctx\n * @param {P5Node} ast\n * @returns {Node}\n */\nfunction transform(ctx, ast) {\n  const schema = ctx.schema\n  /** @type {Handler} */\n  // @ts-expect-error: index is fine.\n  const fn = own.call(map, ast.nodeName) ? map[ast.nodeName] : element\n  /** @type {Array.<Child>|undefined} */\n  let children\n\n  // Element.\n  if ('tagName' in ast) {\n    ctx.schema = ast.namespaceURI === webNamespaces.svg ? svg : html\n  }\n\n  if ('childNodes' in ast) {\n    children = nodes(ctx, ast.childNodes)\n  }\n\n  const result = fn(ctx, ast, children)\n\n  if ('sourceCodeLocation' in ast && ast.sourceCodeLocation && ctx.file) {\n    // @ts-expect-error It’s fine.\n    const position = createLocation(ctx, result, ast.sourceCodeLocation)\n\n    if (position) {\n      ctx.location = true\n      result.position = position\n    }\n  }\n\n  ctx.schema = schema\n\n  return result\n}\n\n/**\n * Transform children.\n *\n * @param {Context} ctx\n * @param {Array.<P5Node>} children\n * @returns {Array.<Child>}\n */\nfunction nodes(ctx, children) {\n  let index = -1\n  /** @type {Array.<Child>} */\n  const result = []\n\n  while (++index < children.length) {\n    // @ts-expect-error Assume no roots in children.\n    result[index] = transform(ctx, children[index])\n  }\n\n  return result\n}\n\n/**\n * Transform a document.\n * Stores `ast.quirksMode` in `node.data.quirksMode`.\n *\n * @type {Handler}\n * @param {P5Document} ast\n * @param {Array.<Child>} children\n * @returns {Root}\n */\nfunction root(ctx, ast, children) {\n  /** @type {Root} */\n  const result = {\n    type: 'root',\n    children,\n    data: {quirksMode: ast.mode === 'quirks' || ast.mode === 'limited-quirks'}\n  }\n\n  if (ctx.file && ctx.location) {\n    const doc = String(ctx.file)\n    const loc = location(doc)\n    result.position = {\n      start: loc.toPoint(0),\n      end: loc.toPoint(doc.length)\n    }\n  }\n\n  return result\n}\n\n/**\n * Transform a doctype.\n *\n * @type {Handler}\n * @returns {Doctype}\n */\nfunction doctype() {\n  // @ts-expect-error Types are out of date.\n  return {type: 'doctype'}\n}\n\n/**\n * Transform a text.\n *\n * @type {Handler}\n * @param {P5Text} ast\n * @returns {Text}\n */\nfunction text(_, ast) {\n  return {type: 'text', value: ast.value}\n}\n\n/**\n * Transform a comment.\n *\n * @type {Handler}\n * @param {P5Comment} ast\n * @returns {Comment}\n */\nfunction comment(_, ast) {\n  return {type: 'comment', value: ast.data}\n}\n\n/**\n * Transform an element.\n *\n * @type {Handler}\n * @param {P5Element} ast\n * @param {Array.<ElementChild>} children\n * @returns {Element}\n */\nfunction element(ctx, ast, children) {\n  const fn = ctx.schema.space === 'svg' ? s : h\n  let index = -1\n  /** @type {Object.<string, string>} */\n  const props = {}\n\n  while (++index < ast.attrs.length) {\n    const attribute = ast.attrs[index]\n    props[(attribute.prefix ? attribute.prefix + ':' : '') + attribute.name] =\n      attribute.value\n  }\n\n  const result = fn(ast.tagName, props, children)\n\n  if (result.tagName === 'template' && 'content' in ast) {\n    const pos = ast.sourceCodeLocation\n    const startTag = pos && pos.startTag && position(pos.startTag)\n    const endTag = pos && pos.endTag && position(pos.endTag)\n\n    /** @type {Root} */\n    // @ts-expect-error Types are wrong.\n    const content = transform(ctx, ast.content)\n\n    if (startTag && endTag && ctx.file) {\n      content.position = {start: startTag.end, end: endTag.start}\n    }\n\n    result.content = content\n  }\n\n  return result\n}\n\n/**\n * Create clean positional information.\n *\n * @param {Context} ctx\n * @param {Node} node\n * @param {P5ElementLocation} location\n * @returns {Position|null}\n */\nfunction createLocation(ctx, node, location) {\n  const result = position(location)\n\n  if (node.type === 'element') {\n    const tail = node.children[node.children.length - 1]\n\n    // Bug for unclosed with children.\n    // See: <https://github.com/inikulin/parse5/issues/109>.\n    if (\n      result &&\n      !location.endTag &&\n      tail &&\n      tail.position &&\n      tail.position.end\n    ) {\n      result.end = Object.assign({}, tail.position.end)\n    }\n\n    if (ctx.verbose) {\n      /** @type {Object.<string, Position|null>} */\n      const props = {}\n      /** @type {string} */\n      let key\n\n      for (key in location.attrs) {\n        if (own.call(location.attrs, key)) {\n          props[find(ctx.schema, key).property] = position(location.attrs[key])\n        }\n      }\n\n      node.data = {\n        position: {\n          opening: position(location.startTag),\n          closing: location.endTag ? position(location.endTag) : null,\n          properties: props\n        }\n      }\n    }\n  }\n\n  return result\n}\n\n/**\n * @param {P5Location} loc\n * @returns {Position|null}\n */\nfunction position(loc) {\n  const start = point({\n    line: loc.startLine,\n    column: loc.startCol,\n    offset: loc.startOffset\n  })\n  const end = point({\n    line: loc.endLine,\n    column: loc.endCol,\n    offset: loc.endOffset\n  })\n  // @ts-expect-error `null` is fine.\n  return start || end ? {start, end} : null\n}\n\n/**\n * @param {Point} point\n * @returns {Point|null}\n */\nfunction point(point) {\n  return point.line && point.column ? point : null\n}\n\n/**\n * @param {VFile|Options} value\n * @returns {value is VFile}\n */\nfunction isFile(value) {\n  return 'messages' in value\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('vfile').VFile} VFile\n *\n * @typedef {Pick<Point, 'line'|'column'>} PositionalPoint\n * @typedef {Required<Point>} FullPoint\n * @typedef {NonNullable<Point['offset']>} Offset\n */\n\n/**\n * Get transform functions for the given `document`.\n *\n * @param {string|Uint8Array|VFile} file\n */\nexport function location(file) {\n  var value = String(file)\n  /** @type {Array.<number>} */\n  var indices = []\n  var search = /\\r?\\n|\\r/g\n\n  while (search.test(value)) {\n    indices.push(search.lastIndex)\n  }\n\n  indices.push(value.length + 1)\n\n  return {toPoint, toOffset}\n\n  /**\n   * Get the line and column-based `point` for `offset` in the bound indices.\n   * Returns a point with `undefined` values when given invalid or out of bounds\n   * input.\n   *\n   * @param {Offset} offset\n   * @returns {FullPoint}\n   */\n  function toPoint(offset) {\n    var index = -1\n\n    if (offset > -1 && offset < indices[indices.length - 1]) {\n      while (++index < indices.length) {\n        if (indices[index] > offset) {\n          return {\n            line: index + 1,\n            column: offset - (indices[index - 1] || 0) + 1,\n            offset\n          }\n        }\n      }\n    }\n\n    return {line: undefined, column: undefined, offset: undefined}\n  }\n\n  /**\n   * Get the `offset` for a line and column-based `point` in the bound indices.\n   * Returns `-1` when given invalid or out of bounds input.\n   *\n   * @param {PositionalPoint} point\n   * @returns {Offset}\n   */\n  function toOffset(point) {\n    var line = point && point.line\n    var column = point && point.column\n    /** @type {number} */\n    var offset\n\n    if (\n      typeof line === 'number' &&\n      typeof column === 'number' &&\n      !Number.isNaN(line) &&\n      !Number.isNaN(column) &&\n      line - 1 in indices\n    ) {\n      offset = (indices[line - 2] || 0) + column - 1 || 0\n    }\n\n    return offset > -1 && offset < indices[indices.length - 1] ? offset : -1\n  }\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Text} Text\n *\n * @typedef {import('unist-util-is').AssertPredicate<Element>} AssertElement\n * @typedef {import('unist-util-is').AssertPredicate<Text>} AssertText\n * @typedef {import('unist-util-is').AssertPredicate<Root>} AssertRoot\n *\n * @callback CreateElementLike\n * @param {string} name\n * @param {any} attributes\n * @param {Array.<string|any>} [children]\n * @returns {any}\n *\n * @typedef Context\n * @property {html|svg} schema\n * @property {string|null} prefix\n * @property {number} key\n * @property {boolean} react\n * @property {boolean} vue\n * @property {boolean} vdom\n * @property {boolean} hyperscript\n *\n * @typedef Options\n * @property {string|null} [prefix]\n * @property {'html'|'svg'} [space]\n */\n\nimport {html, svg, find, hastToReact} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {stringify as commas} from 'comma-separated-tokens'\nimport style from 'style-to-object'\nimport {webNamespaces} from 'web-namespaces'\nimport {convert} from 'unist-util-is'\n\nconst ns = /** @type {Record<string, string>} */ (webNamespaces)\nconst toReact = /** @type {Record<string, string>} */ (hastToReact)\n\nconst own = {}.hasOwnProperty\n\n/** @type {AssertRoot} */\n// @ts-expect-error it’s correct.\nconst root = convert('root')\n/** @type {AssertElement} */\n// @ts-expect-error it’s correct.\nconst element = convert('element')\n/** @type {AssertText} */\n// @ts-expect-error it’s correct.\nconst text = convert('text')\n\n/**\n * @template {CreateElementLike} H\n * @param {H} h\n * @param {Element|Root} tree\n * @param {string|boolean|Options} [options]\n * @returns {ReturnType<H>}\n */\nexport function toH(h, tree, options) {\n  if (typeof h !== 'function') {\n    throw new TypeError('h is not a function')\n  }\n\n  const r = react(h)\n  const v = vue(h)\n  const vd = vdom(h)\n  /** @type {string|boolean|null|undefined} */\n  let prefix\n  /** @type {Element} */\n  let node\n\n  if (typeof options === 'string' || typeof options === 'boolean') {\n    prefix = options\n    options = {}\n  } else {\n    if (!options) options = {}\n    prefix = options.prefix\n  }\n\n  if (root(tree)) {\n    // @ts-expect-error Allow `doctypes` in there, we’ll filter them out later.\n    node =\n      tree.children.length === 1 && element(tree.children[0])\n        ? tree.children[0]\n        : {\n            type: 'element',\n            tagName: 'div',\n            properties: {},\n            children: tree.children\n          }\n  } else if (element(tree)) {\n    node = tree\n  } else {\n    throw new Error(\n      // @ts-expect-error runtime.\n      'Expected root or element, not `' + ((tree && tree.type) || tree) + '`'\n    )\n  }\n\n  return transform(h, node, {\n    schema: options.space === 'svg' ? svg : html,\n    prefix:\n      prefix === undefined || prefix === null\n        ? r || v || vd\n          ? 'h-'\n          : null\n        : typeof prefix === 'string'\n        ? prefix\n        : prefix\n        ? 'h-'\n        : null,\n    key: 0,\n    react: r,\n    vue: v,\n    vdom: vd,\n    hyperscript: hyperscript(h)\n  })\n}\n\n/**\n * Transform a hast node through a hyperscript interface to *anything*!\n *\n * @template {CreateElementLike} H\n * @param {H} h\n * @param {Element} node\n * @param {Context} ctx\n */\nfunction transform(h, node, ctx) {\n  const parentSchema = ctx.schema\n  let schema = parentSchema\n  let name = node.tagName\n  /** @type {Record<string, unknown>} */\n  const attributes = {}\n  /** @type {Array.<ReturnType<H>|string>} */\n  const nodes = []\n  let index = -1\n  /** @type {string} */\n  let key\n\n  if (parentSchema.space === 'html' && name.toLowerCase() === 'svg') {\n    schema = svg\n    ctx.schema = schema\n  }\n\n  for (key in node.properties) {\n    if (node.properties && own.call(node.properties, key)) {\n      addAttribute(attributes, key, node.properties[key], ctx, name)\n    }\n  }\n\n  if (ctx.vdom) {\n    if (schema.space === 'html') {\n      name = name.toUpperCase()\n    } else if (schema.space) {\n      attributes.namespace = ns[schema.space]\n    }\n  }\n\n  if (ctx.prefix) {\n    ctx.key++\n    attributes.key = ctx.prefix + ctx.key\n  }\n\n  if (node.children) {\n    while (++index < node.children.length) {\n      const value = node.children[index]\n\n      if (element(value)) {\n        nodes.push(transform(h, value, ctx))\n      } else if (text(value)) {\n        nodes.push(value.value)\n      }\n    }\n  }\n\n  // Restore parent schema.\n  ctx.schema = parentSchema\n\n  // Ensure no React warnings are triggered for void elements having children\n  // passed in.\n  return nodes.length > 0\n    ? h.call(node, name, attributes, nodes)\n    : h.call(node, name, attributes)\n}\n\n/**\n * @param {Record<string, unknown>} props\n * @param {string} prop\n * @param {unknown} value\n * @param {Context} ctx\n * @param {string} name\n */\n// eslint-disable-next-line complexity, max-params\nfunction addAttribute(props, prop, value, ctx, name) {\n  const info = find(ctx.schema, prop)\n  /** @type {string|undefined} */\n  let subprop\n\n  // Ignore nullish and `NaN` values.\n  // Ignore `false` and falsey known booleans for hyperlike DSLs.\n  if (\n    value === undefined ||\n    value === null ||\n    (typeof value === 'number' && Number.isNaN(value)) ||\n    (value === false && (ctx.vue || ctx.vdom || ctx.hyperscript)) ||\n    (!value && info.boolean && (ctx.vue || ctx.vdom || ctx.hyperscript))\n  ) {\n    return\n  }\n\n  if (Array.isArray(value)) {\n    // Accept `array`.\n    // Most props are space-separated.\n    value = info.commaSeparated ? commas(value) : spaces(value)\n  }\n\n  // Treat `true` and truthy known booleans.\n  if (info.boolean && ctx.hyperscript) {\n    value = ''\n  }\n\n  // VDOM, Vue, and React accept `style` as object.\n  if (\n    info.property === 'style' &&\n    typeof value === 'string' &&\n    (ctx.react || ctx.vue || ctx.vdom)\n  ) {\n    value = parseStyle(value, name)\n  }\n\n  if (ctx.vue) {\n    if (info.property !== 'style') subprop = 'attrs'\n  } else if (!info.mustUseProperty) {\n    if (ctx.vdom) {\n      if (info.property !== 'style') subprop = 'attributes'\n    } else if (ctx.hyperscript) {\n      subprop = 'attrs'\n    }\n  }\n\n  if (subprop) {\n    props[subprop] = Object.assign(props[subprop] || {}, {\n      [info.attribute]: value\n    })\n  } else if (info.space && ctx.react) {\n    props[toReact[info.property] || info.property] = value\n  } else {\n    props[info.attribute] = value\n  }\n}\n\n/**\n * Check if `h` is `react.createElement`.\n *\n * @param {CreateElementLike} h\n * @returns {boolean}\n */\nfunction react(h) {\n  /** @type {unknown} */\n  const node = h('div', {})\n  return Boolean(\n    node &&\n      // @ts-expect-error Looks like a React node.\n      ('_owner' in node || '_store' in node) &&\n      // @ts-expect-error Looks like a React node.\n      (node.key === undefined || node.key === null)\n  )\n}\n\n/**\n * Check if `h` is `hyperscript`.\n *\n * @param {CreateElementLike} h\n * @returns {boolean}\n */\nfunction hyperscript(h) {\n  return 'context' in h && 'cleanup' in h\n}\n\n/**\n * Check if `h` is `virtual-dom/h`.\n *\n * @param {CreateElementLike} h\n * @returns {boolean}\n */\nfunction vdom(h) {\n  /** @type {unknown} */\n  const node = h('div', {})\n  // @ts-expect-error Looks like a vnode.\n  return node.type === 'VirtualNode'\n}\n\n/**\n * Check if `h` is Vue.\n *\n * @param {CreateElementLike} h\n * @returns {boolean}\n */\nfunction vue(h) {\n  /** @type {unknown} */\n  const node = h('div', {})\n  // @ts-expect-error Looks like a Vue node.\n  return Boolean(node && node.context && node.context._isVue)\n}\n\n/**\n * @param {string} value\n * @param {string} tagName\n * @returns {Record<string, string>}\n */\nfunction parseStyle(value, tagName) {\n  /** @type {Record<string, string>} */\n  const result = {}\n\n  try {\n    style(value, (name, value) => {\n      if (name.slice(0, 4) === '-ms-') name = 'ms-' + name.slice(4)\n\n      result[\n        name.replace(\n          /-([a-z])/g,\n          /**\n           * @param {string} _\n           * @param {string} $1\n           * @returns {string}\n           */ (_, $1) => $1.toUpperCase()\n        )\n      ] = value\n    })\n  } catch (error) {\n    error.message =\n      tagName + '[style]' + error.message.slice('undefined'.length)\n    throw error\n  }\n\n  return result\n}\n","var own = {}.hasOwnProperty\n\n/**\n * @callback Handler\n * @param {...unknown} value\n * @return {unknown}\n *\n * @typedef {Record<string, Handler>} Handlers\n *\n * @typedef {Object} Options\n * @property {Handler} [unknown]\n * @property {Handler} [invalid]\n * @property {Handlers} [handlers]\n */\n\n/**\n * Handle values based on a property.\n *\n * @param {string} key\n * @param {Options} [options]\n */\nexport function zwitch(key, options) {\n  var settings = options || {}\n\n  /**\n   * Handle one value.\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @param {...unknown} [value]\n   * @this {unknown}\n   * @returns {unknown}\n   * @property {Handler} invalid\n   * @property {Handler} unknown\n   * @property {Handlers} handlers\n   */\n  function one(value) {\n    var fn = one.invalid\n    var handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown\n    }\n\n    if (fn) {\n      return fn.apply(this, arguments)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  return one\n}\n","/**\n * @typedef {import('parse5').Node} P5Node\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentFragment} P5Fragment\n * @typedef {import('parse5').DocumentType} P5Doctype\n * @typedef {import('parse5').CommentNode} P5Comment\n * @typedef {import('parse5').TextNode} P5Text\n * @typedef {import('parse5').Element} P5Element\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {import('parse5').ParentNode} P5Parent\n * @typedef {Exclude<P5Node, P5Document|P5Fragment>} P5Child\n * @typedef {import('property-information').Schema} Schema\n * @typedef {import('property-information').Info} Info\n * @typedef {'html'|'svg'} Space\n * @typedef {import('hast').Parent} Parent\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {Parent['children'][number]} Child\n * @typedef {Child|Root} Node\n *\n * @callback Handle\n * @param {Node} node\n * @param {Schema} schema\n * @returns {P5Node}\n */\n\nimport {html, svg, find} from 'property-information'\nimport {toH} from 'hast-to-hyperscript'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nvar own = {}.hasOwnProperty\n\nvar one = zwitch('type', {handlers: {root, element, text, comment, doctype}})\n\n/**\n * Transform a tree from hast to Parse5’s AST.\n *\n * @param {Node} tree\n * @param {Space} [space='html']\n * @returns {P5Node}\n */\nexport function toParse5(tree, space) {\n  // @ts-ignore Types are wrong.\n  return one(tree, space === 'svg' ? svg : html)\n}\n\n/**\n * @type {Handle}\n * @param {Root} node\n * @returns {P5Document}\n */\nfunction root(node, schema) {\n  /** @type {P5Document} */\n  var p5 = {\n    nodeName: '#document',\n    mode: (node.data || {}).quirksMode ? 'quirks' : 'no-quirks',\n    childNodes: []\n  }\n  // @ts-ignore Assume correct children.\n  p5.childNodes = all(node.children, p5, schema)\n  return patch(node, p5)\n}\n\n/**\n * @type {Handle}\n * @param {Root} node\n * @returns {P5Fragment}\n */\nfunction fragment(node, schema) {\n  /** @type {P5Fragment} */\n  var p5 = {nodeName: '#document-fragment', childNodes: []}\n  // @ts-ignore Assume correct children.\n  p5.childNodes = all(node.children, p5, schema)\n  return patch(node, p5)\n}\n\n/**\n * @type {Handle}\n * @param {Doctype} node\n * @returns {P5Doctype}\n */\nfunction doctype(node) {\n  return patch(node, {\n    nodeName: '#documentType',\n    name: 'html',\n    publicId: '',\n    systemId: '',\n    parentNode: undefined\n  })\n}\n\n/**\n * @type {Handle}\n * @param {Text} node\n * @returns {P5Text}\n */\nfunction text(node) {\n  return patch(node, {\n    nodeName: '#text',\n    value: node.value,\n    parentNode: undefined\n  })\n}\n\n/**\n * @type {Handle}\n * @param {Comment} node\n * @returns {P5Comment}\n */\nfunction comment(node) {\n  return patch(node, {\n    nodeName: '#comment',\n    data: node.value,\n    parentNode: undefined\n  })\n}\n\n/**\n * @type {Handle}\n * @param {Element} node\n * @returns {P5Element}\n */\nfunction element(node, schema) {\n  /** @type {Space} */\n  // @ts-ignore Assume space.\n  var space = schema.space\n  return toH(h, Object.assign({}, node, {children: []}), {space})\n\n  /**\n   * @param {string} name\n   * @param {Object.<string, string|boolean|number>} attrs\n   */\n  function h(name, attrs) {\n    /** @type {Array.<P5Attribute>} */\n    var values = []\n    /** @type {Info} */\n    var info\n    /** @type {P5Attribute} */\n    var value\n    /** @type {string} */\n    var key\n    /** @type {number} */\n    var index\n    /** @type {P5Element} */\n    var p5\n\n    for (key in attrs) {\n      if (!own.call(attrs, key) || attrs[key] === false) {\n        continue\n      }\n\n      info = find(schema, key)\n\n      if (info.boolean && !attrs[key]) {\n        continue\n      }\n\n      value = {name: key, value: attrs[key] === true ? '' : String(attrs[key])}\n\n      if (info.space && info.space !== 'html' && info.space !== 'svg') {\n        index = key.indexOf(':')\n\n        if (index < 0) {\n          value.prefix = ''\n        } else {\n          value.name = key.slice(index + 1)\n          value.prefix = key.slice(0, index)\n        }\n\n        value.namespace = webNamespaces[info.space]\n      }\n\n      values.push(value)\n    }\n\n    if (schema.space === 'html' && node.tagName === 'svg') schema = svg\n\n    p5 = patch(node, {\n      nodeName: name,\n      tagName: name,\n      attrs: values,\n      namespaceURI: webNamespaces[schema.space],\n      childNodes: [],\n      parentNode: undefined\n    })\n\n    // @ts-ignore Assume correct children.\n    p5.childNodes = all(node.children, p5, schema)\n\n    // @ts-ignore Types are wrong.\n    if (name === 'template') p5.content = fragment(node.content, schema)\n\n    return p5\n  }\n}\n\n/**\n * @param {Array.<Child>} children\n * @param {P5Parent} p5\n * @param {Schema} schema\n * @returns {Array.<P5Child>}\n */\nfunction all(children, p5, schema) {\n  var index = -1\n  /** @type {Array.<P5Child>} */\n  var result = []\n  /** @type {P5Child} */\n  var child\n\n  if (children) {\n    while (++index < children.length) {\n      // @ts-ignore Assume child.\n      child = one(children[index], schema)\n\n      // @ts-ignore types are wrong.\n      child.parentNode = p5\n\n      result.push(child)\n    }\n  }\n\n  return result\n}\n\n/**\n * Patch specific properties.\n *\n * @template {P5Node} T\n * @param {Node} node\n * @param {T} p5\n * @returns {T}\n */\nfunction patch(node, p5) {\n  var position = node.position\n\n  if (position && position.start && position.end) {\n    // @ts-ignore Types are wrong.\n    p5.sourceCodeLocation = {\n      startLine: position.start.line,\n      startCol: position.start.column,\n      startOffset: position.start.offset,\n      endLine: position.end.line,\n      endCol: position.end.column,\n      endOffset: position.end.offset\n    }\n  }\n\n  return p5\n}\n","/**\n * List of HTML void tag names.\n *\n * @type {Array<string>}\n */\nexport const htmlVoidElements = [\n  'area',\n  'base',\n  'basefont',\n  'bgsound',\n  'br',\n  'col',\n  'command',\n  'embed',\n  'frame',\n  'hr',\n  'image',\n  'img',\n  'input',\n  'isindex',\n  'keygen',\n  'link',\n  'menuitem',\n  'meta',\n  'nextid',\n  'param',\n  'source',\n  'track',\n  'wbr'\n]\n","/**\n * @typedef {import('vfile').VFile} VFile\n * @typedef {import('parse5').Document} P5Document\n * @typedef {import('parse5').DocumentFragment} P5Fragment\n * @typedef {Omit<import('parse5').Element, 'parentNode'>} P5Element\n * @typedef {import('parse5').Attribute} P5Attribute\n * @typedef {Omit<import('parse5').Location, 'startOffset' | 'endOffset'> & {startOffset: number|undefined, endOffset: number|undefined}} P5Location\n * @typedef {import('parse5').ParserOptions} P5ParserOptions\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').DocType} Doctype\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Text} Text\n * @typedef {import('hast').Comment} Comment\n * @typedef {import('hast').Content} Content\n * @typedef {Root|Content} Node\n * @typedef {import('../complex-types').Raw} Raw\n *\n * @typedef {Omit<Comment, 'value'> & {value: {stitch: Node}}} Stitch\n *\n * @typedef Options\n * @property {Array<string>} [passThrough]\n *   List of custom hast node types to pass through (keep) in hast.\n *   If the passed through nodes have children, those children are expected to\n *   be hast and will be handled.\n *\n * @typedef HiddenTokenizer\n * @property {Array<HiddenLocationTracker>} __mixins\n *   Way too simple, but works for us.\n * @property {HiddenPreprocessor} preprocessor\n * @property {(value: string) => void} write\n * @property {() => number} _consume\n * @property {Array<HiddenToken>} tokenQueue\n * @property {string} state\n * @property {string} returnState\n * @property {number} charRefCode\n * @property {Array<number>} tempBuff\n * @property {Function} _flushCodePointsConsumedAsCharacterReference\n * @property {string} lastStartTagName\n * @property {number} consumedAfterSnapshot\n * @property {boolean} active\n * @property {HiddenToken|undefined} currentCharacterToken\n * @property {HiddenToken|undefined} currentToken\n * @property {unknown} currentAttr\n * @property {Function} NAMED_CHARACTER_REFERENCE_STATE\n * @property {Function} NUMERIC_CHARACTER_REFERENCE_END_STATE\n *\n * @typedef {Record<string, unknown> & {location: P5Location}} HiddenToken\n *\n * @typedef HiddenPreprocessor\n * @property {string|undefined} html\n * @property {number} pos\n * @property {number} lastGapPos\n * @property {number} lastCharPos\n * @property {Array<number>} gapStack\n * @property {boolean} skipNextNewLine\n * @property {boolean} lastChunkWritten\n * @property {boolean} endOfChunkHit\n *\n * @typedef HiddenLocationTracker\n * @property {P5Location|undefined} currentAttrLocation\n * @property {P5Location} ctLoc\n * @property {HiddenPosTracker} posTracker\n *\n * @typedef HiddenPosTracker\n * @property {boolean} isEol\n * @property {number} lineStartPos\n * @property {number} droppedBufferSize\n * @property {number} offset\n * @property {number} col\n * @property {number} line\n */\n\n// @ts-expect-error: untyped.\nimport Parser from 'parse5/lib/parser/index.js'\nimport {pointStart, pointEnd} from 'unist-util-position'\nimport {visit} from 'unist-util-visit'\nimport {fromParse5} from 'hast-util-from-parse5'\nimport {toParse5} from 'hast-util-to-parse5'\nimport {htmlVoidElements} from 'html-void-elements'\nimport {webNamespaces} from 'web-namespaces'\nimport {zwitch} from 'zwitch'\n\nconst inTemplateMode = 'IN_TEMPLATE_MODE'\nconst dataState = 'DATA_STATE'\nconst characterToken = 'CHARACTER_TOKEN'\nconst startTagToken = 'START_TAG_TOKEN'\nconst endTagToken = 'END_TAG_TOKEN'\nconst commentToken = 'COMMENT_TOKEN'\nconst doctypeToken = 'DOCTYPE_TOKEN'\n\n/** @type {P5ParserOptions} */\nconst parseOptions = {sourceCodeLocationInfo: true, scriptingEnabled: false}\n\n/**\n * Given a hast tree and an optional vfile (for positional info), return a new\n * parsed-again hast tree.\n *\n * @param tree\n *   Original hast tree.\n * @param file\n *   Virtual file for positional info, optional.\n * @param options\n *   Configuration.\n */\nexport const raw =\n  /**\n   * @type {(\n   *   ((tree: Node, file: VFile|undefined, options?: Options) => Node) &\n   *   ((tree: Node, options?: Options) => Node)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {VFile} [file]\n     * @param {Options} [options]\n     */\n    function (tree, file, options) {\n      let index = -1\n      const parser = new Parser(parseOptions)\n      const one = zwitch('type', {\n        // @ts-expect-error: hush.\n        handlers: {root, element, text, comment, doctype, raw: handleRaw},\n        // @ts-expect-error: hush.\n        unknown\n      })\n      /** @type {boolean|undefined} */\n      let stitches\n      /** @type {HiddenTokenizer|undefined} */\n      let tokenizer\n      /** @type {HiddenPreprocessor|undefined} */\n      let preprocessor\n      /** @type {HiddenPosTracker|undefined} */\n      let posTracker\n      /** @type {HiddenLocationTracker|undefined} */\n      let locationTracker\n\n      if (isOptions(file)) {\n        options = file\n        file = undefined\n      }\n\n      if (options && options.passThrough) {\n        while (++index < options.passThrough.length) {\n          // @ts-expect-error: hush.\n          one.handlers[options.passThrough[index]] = stitch\n        }\n      }\n\n      const result = fromParse5(\n        documentMode(tree) ? document() : fragment(),\n        file\n      )\n\n      if (stitches) {\n        visit(result, 'comment', (node, index, parent) => {\n          const stitch = /** @type {Stitch} */ (/** @type {unknown} */ (node))\n          if (stitch.value.stitch && parent !== null && index !== null) {\n            // @ts-expect-error: assume the stitch is allowed.\n            parent.children[index] = stitch.value.stitch\n            return index\n          }\n        })\n      }\n\n      // Unpack if possible and when not given a `root`.\n      if (\n        tree.type !== 'root' &&\n        result.type === 'root' &&\n        result.children.length === 1\n      ) {\n        return result.children[0]\n      }\n\n      return result\n\n      /**\n       * @returns {P5Fragment}\n       */\n      function fragment() {\n        /** @type {P5Element} */\n        const context = {\n          nodeName: 'template',\n          tagName: 'template',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Element} */\n        const mock = {\n          nodeName: 'documentmock',\n          tagName: 'documentmock',\n          attrs: [],\n          namespaceURI: webNamespaces.html,\n          childNodes: []\n        }\n        /** @type {P5Fragment} */\n        const doc = {nodeName: '#document-fragment', childNodes: []}\n\n        parser._bootstrap(mock, context)\n        parser._pushTmplInsertionMode(inTemplateMode)\n        parser._initTokenizerForFragmentParsing()\n        parser._insertFakeRootElement()\n        parser._resetInsertionMode()\n        parser._findFormInFragmentContext()\n\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        parser._adoptNodes(mock.childNodes[0], doc)\n\n        return doc\n      }\n\n      /**\n       * @returns {P5Document}\n       */\n      function document() {\n        /** @type {P5Document} */\n        const doc = parser.treeAdapter.createDocument()\n\n        parser._bootstrap(doc, undefined)\n        tokenizer = parser.tokenizer\n        /* c8 ignore next */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        preprocessor = tokenizer.preprocessor\n        locationTracker = tokenizer.__mixins[0]\n        posTracker = locationTracker.posTracker\n\n        one(tree)\n\n        resetTokenizer()\n\n        return doc\n      }\n\n      /**\n       * @param {Array<Content>} nodes\n       * @returns {void}\n       */\n      function all(nodes) {\n        let index = -1\n\n        /* istanbul ignore else - invalid nodes, see rehypejs/rehype-raw#7. */\n        if (nodes) {\n          while (++index < nodes.length) {\n            one(nodes[index])\n          }\n        }\n      }\n\n      /**\n       * @param {Root} node\n       * @returns {void}\n       */\n      function root(node) {\n        all(node.children)\n      }\n\n      /**\n       * @param {Element} node\n       * @returns {void}\n       */\n      function element(node) {\n        resetTokenizer()\n        parser._processToken(startTag(node), webNamespaces.html)\n\n        all(node.children)\n\n        if (!htmlVoidElements.includes(node.tagName)) {\n          resetTokenizer()\n          parser._processToken(endTag(node))\n        }\n      }\n\n      /**\n       * @param {Text} node\n       * @returns {void}\n       */\n      function text(node) {\n        resetTokenizer()\n        parser._processToken({\n          type: characterToken,\n          chars: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Doctype} node\n       * @returns {void}\n       */\n      function doctype(node) {\n        resetTokenizer()\n        parser._processToken({\n          type: doctypeToken,\n          name: 'html',\n          forceQuirks: false,\n          publicId: '',\n          systemId: '',\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Comment|Stitch} node\n       * @returns {void}\n       */\n      function comment(node) {\n        resetTokenizer()\n        parser._processToken({\n          type: commentToken,\n          data: node.value,\n          location: createParse5Location(node)\n        })\n      }\n\n      /**\n       * @param {Raw} node\n       * @returns {void}\n       */\n      function handleRaw(node) {\n        const start = pointStart(node)\n        const line = start.line || 1\n        const column = start.column || 1\n        const offset = start.offset || 0\n\n        /* c8 ignore next 4 */\n        if (!preprocessor) throw new Error('Expected `preprocessor`')\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n        if (!locationTracker) throw new Error('Expected `locationTracker`')\n\n        // Reset preprocessor:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/preprocessor.js#L17>.\n        preprocessor.html = undefined\n        preprocessor.pos = -1\n        preprocessor.lastGapPos = -1\n        preprocessor.lastCharPos = -1\n        preprocessor.gapStack = []\n        preprocessor.skipNextNewLine = false\n        preprocessor.lastChunkWritten = false\n        preprocessor.endOfChunkHit = false\n\n        // Reset preprocessor mixin:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/position-tracking/preprocessor-mixin.js>.\n        posTracker.isEol = false\n        posTracker.lineStartPos = -column + 1 // Looks weird, but ensures we get correct positional info.\n        posTracker.droppedBufferSize = offset\n        posTracker.offset = 0\n        posTracker.col = 1\n        posTracker.line = line\n\n        // Reset location tracker:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js>.\n        locationTracker.currentAttrLocation = undefined\n        locationTracker.ctLoc = createParse5Location(node)\n\n        // See the code for `parse` and `parseFragment`:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/parser/index.js#L371>.\n        tokenizer.write(node.value)\n        parser._runParsingLoop(null)\n\n        // Character references hang, so if we ended there, we need to flush\n        // those too.\n        // We reset the preprocessor as if the document ends here.\n        // Then one single call to the relevant state does the trick, parse5\n        // consumes the whole token.\n        if (\n          tokenizer.state === 'NAMED_CHARACTER_REFERENCE_STATE' ||\n          tokenizer.state === 'NUMERIC_CHARACTER_REFERENCE_END_STATE'\n        ) {\n          preprocessor.lastChunkWritten = true\n          tokenizer[tokenizer.state](tokenizer._consume())\n        }\n      }\n\n      /**\n       * @param {Node} node\n       */\n      function stitch(node) {\n        stitches = true\n\n        /** @type {Node} */\n        let clone\n\n        // Recurse, because to somewhat handle `[<x>]</x>` (where `[]` denotes the\n        // passed through node).\n        if ('children' in node) {\n          clone = {\n            ...node,\n            children: raw(\n              {type: 'root', children: node.children},\n              file,\n              options\n              // @ts-expect-error Assume a given parent yields a parent.\n            ).children\n          }\n        } else {\n          clone = {...node}\n        }\n\n        // Hack: `value` is supposed to be a string, but as none of the tools\n        // (`parse5` or `hast-util-from-parse5`) looks at it, we can pass nodes\n        // through.\n        comment({type: 'comment', value: {stitch: clone}})\n      }\n\n      function resetTokenizer() {\n        /* c8 ignore next 2 */\n        if (!tokenizer) throw new Error('Expected `tokenizer`')\n        if (!posTracker) throw new Error('Expected `posTracker`')\n\n        // Process final characters if they’re still there after hibernating.\n        // Similar to:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/extensions/location-info/tokenizer-mixin.js#L95>.\n        const token = tokenizer.currentCharacterToken\n\n        if (token) {\n          token.location.endLine = posTracker.line\n          token.location.endCol = posTracker.col + 1\n          token.location.endOffset = posTracker.offset + 1\n          parser._processToken(token)\n        }\n\n        // Reset tokenizer:\n        // See: <https://github.com/inikulin/parse5/blob/9c683e1/packages/parse5/lib/tokenizer/index.js#L218-L234>.\n        // Especially putting it back in the `data` state is useful: some elements,\n        // like textareas and iframes, change the state.\n        // See GH-7.\n        // But also if broken HTML is in `raw`, and then a correct element is given.\n        // See GH-11.\n        tokenizer.tokenQueue = []\n        tokenizer.state = dataState\n        tokenizer.returnState = ''\n        tokenizer.charRefCode = -1\n        tokenizer.tempBuff = []\n        tokenizer.lastStartTagName = ''\n        tokenizer.consumedAfterSnapshot = -1\n        tokenizer.active = false\n        tokenizer.currentCharacterToken = undefined\n        tokenizer.currentToken = undefined\n        tokenizer.currentAttr = undefined\n      }\n    }\n  )\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction startTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: startTagToken,\n    tagName: node.tagName,\n    selfClosing: false,\n    attrs: attributes(node),\n    location\n  }\n}\n\n/**\n * @param {Element} node\n * @returns {Array<P5Attribute>}\n */\nfunction attributes(node) {\n  return toParse5({\n    tagName: node.tagName,\n    type: 'element',\n    properties: node.properties,\n    children: []\n    // @ts-expect-error Assume element.\n  }).attrs\n}\n\n/**\n * @param {Element} node\n * @returns {HiddenToken}\n */\nfunction endTag(node) {\n  /** @type {P5Location} */\n  const location = Object.assign(createParse5Location(node))\n  // @ts-expect-error extra positional info.\n  location.startTag = Object.assign({}, location)\n\n  // Untyped token.\n  return {\n    type: endTagToken,\n    tagName: node.tagName,\n    attrs: [],\n    location\n  }\n}\n\n/**\n * @param {Node} node\n */\nfunction unknown(node) {\n  throw new Error('Cannot compile `' + node.type + '` node')\n}\n\n/**\n * @param {Node} node\n * @returns {boolean}\n */\nfunction documentMode(node) {\n  const head = node.type === 'root' ? node.children[0] : node\n  return Boolean(\n    head &&\n      (head.type === 'doctype' ||\n        (head.type === 'element' && head.tagName === 'html'))\n  )\n}\n\n/**\n * @param {Node|Stitch} node\n * @returns {P5Location}\n */\nfunction createParse5Location(node) {\n  const start = pointStart(node)\n  const end = pointEnd(node)\n\n  return {\n    startLine: start.line,\n    startCol: start.column,\n    startOffset: start.offset,\n    endLine: end.line,\n    endCol: end.column,\n    endOffset: end.offset\n  }\n}\n\n/**\n * @param {VFile|Options|undefined} value\n * @return {value is Options}\n */\nfunction isOptions(value) {\n  return Boolean(value && !('message' in value && 'messages' in value))\n}\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast-util-raw').Options} Options\n * @typedef {import('hast-util-raw')} DoNotTouchAsThisImportIncludesRawInTree\n */\n\nimport {raw} from 'hast-util-raw'\n\n/**\n * Plugin to parse the tree again (and raw nodes).\n * Keeping positional info OK.  🙌\n *\n * @type {import('unified').Plugin<[Options?] | Array<void>, Root>}\n */\nexport default function rehypeRaw(options = {}) {\n  return (tree, file) => {\n    // Assume that when a root was given, it’s also returned.\n    const result = /** @type {Root} */ (raw(tree, file, options))\n    return result\n  }\n}\n","import { Element, Comment, Literal, ElementContent, RootContent, Properties } from 'hast';\nimport { RehypeAttrsOptions } from './';\n\nexport const getURLParameters = (url: string): Record<string, string | number | boolean> =>\n(url.match(/([^?=&]+)(=([^&]*))/g) || []).reduce(\n  (a: Record<string, string | number>, v: string) => (\n    (a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1)), a\n  ),\n  {},\n);\n\nexport const prevChild = (data: Literal[] = [], index: number): Comment | undefined => {\n  let i = index;\n  while (i > -1) {\n    i--;\n    if (!data[i]) return\n    if ((data[i] && data[i].value && (data[i].value as string).replace(/(\\n|\\s)/g, '') !== '') || data[i].type !== 'text') {\n      if (!/^rehype:/.test(data[i].value as string) || (data[i].type as string) !== 'comment') return;\n      return data[i] as unknown as Comment;\n    }\n  }\n  return;\n}\n\nexport const nextChild = (data: RootContent[] | ElementContent[] = [], index: number, tagName?: string): ElementContent | undefined => {\n  let i = index;\n  while (i < data.length) {\n    i++;\n    if (tagName) {\n      const element = data[i] as Literal & Element;\n      if (element && element.value && (element.value as string).replace(/(\\n|\\s)/g, '') !== '' || data[i] && (data[i].type as string) === 'element') {\n        return element.tagName === tagName ? element : undefined\n      }\n    } else {\n      const element = data[i] as ElementContent & Literal;\n      if (!element || (element.type !== 'text' && (element.type as string) !== 'comment') || (element.type === 'text' && (element.value as string).replace(/(\\n|\\s)/g, '') !== '')) return;\n      if ((element.type as string) === 'comment') {\n        if (!/^rehype:/.test(element.value as string)) return;\n        const nextNode = nextChild(data, i, 'pre')\n        if (nextNode) return;\n        return element;\n      }\n    }\n  }\n  return\n}\n\n/**\n * 获取代码注视的位置\n * @param data 数据\n * @param index 当前数据所在的位置\n * @returns 返回 当前参数数据 Object，`{}`\n */\nexport const getCommentObject = ({ value = '' }: Comment): Properties => {\n  const param = getURLParameters(value.replace(/^rehype:/, ''));\n  Object.keys(param).forEach((keyName: string) => {\n    if (param[keyName] === 'true') {\n      param[keyName] = true;\n    }\n    if (param[keyName] === 'false') {\n      param[keyName] = false;\n    }\n    if (typeof param[keyName] === 'string' && !/^0/.test(param[keyName] as string) && !isNaN(+param[keyName])) {\n      param[keyName] = +param[keyName];\n    }\n  })\n  return param;\n}\n\nexport type DataConfig = {\n  'data-config': Properties\n}\n\nexport const propertiesHandle = (defaultAttrs?: Properties | null, attrs?: Properties, type?: RehypeAttrsOptions['properties']): Properties | DataConfig => {\n  if (type === 'string') {\n    return { ...defaultAttrs, 'data-config': JSON.stringify({ ...attrs, rehyp: true })}\n  } else if (type === 'attr') {\n    return { ...defaultAttrs, ...attrs}\n  }\n  return { ...defaultAttrs, 'data-config': { ...attrs, rehyp: true }}\n}","import { Plugin } from 'unified';\nimport { Root, Element, Comment, Properties, Literal } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { propertiesHandle, nextChild, prevChild, getCommentObject } from './utils';\n\nexport type RehypeAttrsOptions = {\n  /**\n   * ## `data`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs&abc=2-->\n   * ```\n   * \n   * ⇣⇣⇣⇣⇣⇣\n   * \n   * ```html\n   * <p data-config=\"data-config='[object Object]'\">text</p>\n   * ```\n   * \n   * ## `string`\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * \n   * ⇣⇣⇣⇣⇣⇣\n   * \n   * ```html\n   * <p data-config=\"{&#x22;title&#x22;:&#x22;Rehype Attrs&#x22;,&#x22;rehyp&#x22;:true}\">text</p>\n   * ```\n   * \n   * ## attr\n   * \n   * ```markdown\n   * text\n   * <!--rehype:title=Rehype Attrs-->\n   * ```\n   * ⇣⇣⇣⇣⇣⇣\n   * ```html\n   * <p title=\"Rehype Attrs\">text</p>\n   * ```\n   */\n  properties: 'data' | 'string' | 'attr';\n}\n\nconst defaultOptions: RehypeAttrsOptions = {\n  properties: 'data',\n}\n\nconst rehypeAttrs: Plugin<[RehypeAttrsOptions?], Root> = (options) => {\n  const opts = { ...defaultOptions, ...options }\n  return (tree) => {\n    visit(tree, 'element', (node, index, parent) => {\n      if (node.tagName === 'pre' && node && Array.isArray(node.children) && parent && Array.isArray(parent.children) && parent.children.length > 1) {\n        const firstChild = node.children[0] as Element;\n        if (firstChild && firstChild.tagName === 'code' && typeof index === 'number') {\n          const child = prevChild(parent.children as Literal[], index);\n          if (child) {\n            const attr = getCommentObject(child);\n            if (Object.keys(attr).length > 0) {\n              node.properties = { ...node.properties, ...{ 'data-type': 'rehyp' } }\n              firstChild.properties = propertiesHandle(firstChild.properties, attr, opts.properties) as Properties\n            }\n          }\n        }\n      }\n\n      if (/^(em|strong|b|a|i|p|pre|kbd|blockquote|h(1|2|3|4|5|6)|code|table|img|del|ul|ol)$/.test(node.tagName) && parent && Array.isArray(parent.children) && typeof index === 'number') {\n        const child = nextChild(parent.children, index)\n        if (child) {\n          const attr = getCommentObject(child as Comment)\n          if (Object.keys(attr).length > 0) {\n            node.properties = propertiesHandle(node.properties, attr, opts.properties) as Properties\n          }\n        }\n      }\n    });\n  }\n}\n\n\nexport default rehypeAttrs\n","import { Plugin } from 'unified';\nimport { Root, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\n\nexport type RehypeIgnoreOptions = {\n  /**\n   *  Character to use for opening delimiter, by default `rehype:ignore:start`\n   */\n  openDelimiter?: string;\n  /**\n   * Character to use for closing delimiter, by default `rehype:ignore:end`\n   */\n  closeDelimiter?: string;\n}\n\nconst rehypeIgnore: Plugin<[RehypeIgnoreOptions?], Root> = (options = {}) => {\n  const { openDelimiter = 'rehype:ignore:start', closeDelimiter = 'rehype:ignore:end' } = options;\n  return (tree) => {\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      if (node.type === 'element' || node.type === 'root') {\n        // const start = node.children.findIndex((item) => item.type === 'comment' && item.value === openDelimiter);\n        // const end = node.children.findIndex((item) => item.type === 'comment' && item.value === closeDelimiter);\n        // if (start > -1 && end > -1) {\n        //   node.children = node.children.filter((_, idx) => idx < start || idx > end);\n        // }\n        let start = false;\n        node.children = node.children.filter((item) => {\n          if (item.type === 'comment' && item.value.trim() === openDelimiter) {\n            start = true;\n            return false\n          }\n          if (item.type === 'comment' && item.value.trim() === closeDelimiter) {\n            start = false;\n            return false\n          }\n          \n          return !start;\n        })\n      }\n    });\n  }\n}\n\nexport default rehypeIgnore;\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * Options for unist util filter\n *\n * @typedef {Object} FilterOptions\n * @property {boolean} [cascade=true] Whether to drop parent nodes if they had children, but all their children were filtered out.\n */\n\nimport {convert} from 'unist-util-is'\n\nconst own = {}.hasOwnProperty\n\n/**\n * Create a new tree consisting of copies of all nodes that pass test.\n * The tree is walked in preorder (NLR), visiting the node itself, then its head, etc.\n *\n * @param tree Tree to filter.\n * @param options Configuration (optional).\n * @param test is-compatible test (such as a type).\n * @returns Given `tree` or `null` if it didn’t pass `test`.\n */\nexport const filter =\n  /**\n   * @type {(\n   *  (<Tree extends Node, Check extends Test>(node: Tree, options: FilterOptions, test: Check) => import('./complex-types').Matches<Tree, Check>) &\n   *  (<Tree extends Node, Check extends Test>(node: Tree, test: Check) => import('./complex-types').Matches<Tree, Check>) &\n   *  (<Tree extends Node>(node: Tree, options?: FilterOptions) => Tree)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {FilterOptions} options\n     * @param {Test} test\n     * @returns {Node|null}\n     */\n    function (tree, options, test) {\n      const is = convert(test || options)\n      const cascade =\n        options.cascade === undefined || options.cascade === null\n          ? true\n          : options.cascade\n\n      return preorder(tree)\n\n      /**\n       * @param {Node} node\n       * @param {number|undefined} [index]\n       * @param {Parent|undefined} [parent]\n       * @returns {Node|null}\n       */\n      function preorder(node, index, parent) {\n        /** @type {Array.<Node>} */\n        const children = []\n        /** @type {number} */\n        let childIndex\n        /** @type {Node} */\n        let result\n        /** @type {string} */\n        let key\n\n        if (!is(node, index, parent)) return null\n\n        // @ts-expect-error: Looks like a parent.\n        if (node.children) {\n          childIndex = -1\n\n          // @ts-expect-error Looks like a parent.\n          while (++childIndex < node.children.length) {\n            // @ts-expect-error Looks like a parent.\n            result = preorder(node.children[childIndex], childIndex, node)\n\n            if (result) {\n              children.push(result)\n            }\n          }\n\n          // @ts-expect-error Looks like a parent.\n          if (cascade && node.children.length > 0 && children.length === 0)\n            return null\n        }\n\n        // Create a shallow clone, using the new children.\n        /** @type {typeof node} */\n        // @ts-expect-error all the fields will be copied over.\n        const next = {}\n\n        for (key in node) {\n          if (own.call(node, key)) {\n            // @ts-expect-error: Looks like a record.\n            next[key] = key === 'children' ? children : node[key]\n          }\n        }\n\n        return next\n      }\n    }\n  )\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Root} Root\n * @typedef Options options\n *   Configuration.\n * @property {boolean} [showLineNumbers]\n *   Set `showLineNumbers` to `true` to always display line number\n * @property {boolean} [ignoreMissing]\n *   Set `ignoreMissing` to `true` to ignore unsupported languages and line highlighting when no language is specified\n */\n\nimport { visit } from 'unist-util-visit'\nimport { toString } from 'hast-util-to-string'\nimport { filter } from 'unist-util-filter'\nimport rangeParser from 'parse-numeric-range'\n\n/**\n * @param {Element} node\n * @return {string|null}\n */\nconst getLanguage = (node) => {\n  const className = node.properties.className\n  //@ts-ignore\n  for (const classListItem of className) {\n    if (classListItem.slice(0, 9) === 'language-') {\n      return classListItem.slice(9).toLowerCase()\n    }\n  }\n  return null\n}\n\n/**\n * Create a closure that determines if we have to highlight the given index\n *\n * @param {string} meta\n * @return { (index:number) => boolean }\n */\nconst calculateLinesToHighlight = (meta) => {\n  const RE = /{([\\d,-]+)}/\n  // Remove space between {} e.g. {1, 3}\n  const parsedMeta = meta\n    .split(',')\n    .map((str) => str.trim())\n    .join()\n  if (RE.test(parsedMeta)) {\n    const strlineNumbers = RE.exec(parsedMeta)[1]\n    const lineNumbers = rangeParser(strlineNumbers)\n    return (index) => lineNumbers.includes(index + 1)\n  } else {\n    return () => false\n  }\n}\n\n/**\n * Check if we want to start the line numbering from a given number or 1\n * showLineNumbers=5, will start the numbering from 5\n * @param {string} meta\n * @returns {number}\n */\nconst calculateStartingLine = (meta) => {\n  const RE = /showLineNumbers=(?<lines>\\d+)/i\n  // pick the line number after = using a named capturing group\n  if (RE.test(meta)) {\n    const {\n      groups: { lines },\n    } = RE.exec(meta)\n    return Number(lines)\n  }\n  return 1\n}\n\n/**\n * Create container AST for node lines\n *\n * @param {number} number\n * @return {Element[]}\n */\nconst createLineNodes = (number) => {\n  const a = new Array(number)\n  for (let i = 0; i < number; i++) {\n    a[i] = {\n      type: 'element',\n      tagName: 'span',\n      properties: { className: [] },\n      children: [],\n    }\n  }\n  return a\n}\n\n/**\n * Split multiline text nodes into individual nodes with positioning\n * Add a node start and end line position information for each text node\n *\n * @return { (ast:Element['children']) => Element['children'] }\n *\n */\nconst addNodePositionClosure = () => {\n  let startLineNum = 1\n  /**\n   * @param {Element['children']} ast\n   * @return {Element['children']}\n   */\n  const addNodePosition = (ast) => {\n    return ast.reduce((result, node) => {\n      if (node.type === 'text') {\n        const value = /** @type {string} */ (node.value)\n        const numLines = (value.match(/\\n/g) || '').length\n        if (numLines === 0) {\n          node.position = {\n            // column: 0 is to make the ts compiler happy but we do not use this field\n            start: { line: startLineNum, column: 0 },\n            end: { line: startLineNum, column: 0 },\n          }\n          result.push(node)\n        } else {\n          const lines = value.split('\\n')\n          for (const [i, line] of lines.entries()) {\n            result.push({\n              type: 'text',\n              value: i === lines.length - 1 ? line : line + '\\n',\n              position: {\n                start: { line: startLineNum + i },\n                end: { line: startLineNum + i },\n              },\n            })\n          }\n        }\n        startLineNum = startLineNum + numLines\n\n        return result\n      }\n\n      if (Object.prototype.hasOwnProperty.call(node, 'children')) {\n        const initialLineNum = startLineNum\n        // @ts-ignore\n        node.children = addNodePosition(node.children, startLineNum)\n        result.push(node)\n        node.position = {\n          start: { line: initialLineNum, column: 0 },\n          end: { line: startLineNum, column: 0 },\n        }\n        return result\n      }\n\n      result.push(node)\n      return result\n    }, [])\n  }\n  return addNodePosition\n}\n\n/**\n * Rehype prism plugin generator that highlights code blocks with refractor (prismjs)\n *\n * Pass in your own refractor object with the required languages registered:\n * https://github.com/wooorm/refractor#refractorregistersyntax\n *\n * @param {import('refractor/lib/core').Refractor} refractor\n * @return {import('unified').Plugin<[Options?], Root>}\n */\nconst rehypePrismGenerator = (refractor) => {\n  return (options = {}) => {\n    return (tree) => {\n      visit(tree, 'element', visitor)\n    }\n\n    /**\n     * @param {Element} node\n     * @param {number} index\n     * @param {Element} parent\n     */\n    function visitor(node, index, parent) {\n      if (!parent || parent.tagName !== 'pre' || node.tagName !== 'code') {\n        return\n      }\n\n      let meta = node.data && node.data.meta ? /** @type {string} */ (node.data.meta) : ''\n      // Coerce className to array\n      if (node.properties.className) {\n        if (typeof node.properties.className === 'boolean') {\n          node.properties.className = []\n        } else if (!Array.isArray(node.properties.className)) {\n          node.properties.className = [node.properties.className]\n        }\n      } else {\n        node.properties.className = []\n      }\n      node.properties.className.push('code-highlight')\n      const lang = getLanguage(node)\n\n      /** @type {Element} */\n      let refractorRoot\n\n      // Syntax highlight\n      if (lang) {\n        try {\n          // @ts-ignore\n          refractorRoot = refractor.highlight(toString(node), lang)\n          // @ts-ignore className is already an array\n          parent.properties.className = (parent.properties.className || []).concat(\n            'language-' + lang\n          )\n        } catch (err) {\n          if (options.ignoreMissing && /Unknown language/.test(err.message)) {\n            refractorRoot = node\n          } else {\n            throw err\n          }\n        }\n      } else {\n        refractorRoot = node\n      }\n\n      refractorRoot.children = addNodePositionClosure()(refractorRoot.children)\n\n      // Add position info to root\n      if (refractorRoot.children.length > 0) {\n        refractorRoot.position = {\n          start: { line: refractorRoot.children[0].position.start.line, column: 0 },\n          end: {\n            line: refractorRoot.children[refractorRoot.children.length - 1].position.end.line,\n            column: 0,\n          },\n        }\n      } else {\n        refractorRoot.position = {\n          start: { line: 0, column: 0 },\n          end: { line: 0, column: 0 },\n        }\n      }\n\n      const shouldHighlightLine = calculateLinesToHighlight(meta)\n      const startingLineNumber = calculateStartingLine(meta)\n      const codeLineArray = createLineNodes(refractorRoot.position.end.line)\n\n      const falseShowLineNumbersStr = [\n        'showlinenumbers=false',\n        'showlinenumbers=\"false\"',\n        'showlinenumbers={false}',\n      ]\n      for (const [i, line] of codeLineArray.entries()) {\n        // Default class name for each line\n        line.properties.className = ['code-line']\n\n        // Syntax highlight\n        const treeExtract = filter(\n          refractorRoot,\n          (node) => node.position.start.line <= i + 1 && node.position.end.line >= i + 1\n        )\n        line.children = treeExtract.children\n\n        // Line number\n        if (\n          (meta.toLowerCase().includes('showLineNumbers'.toLowerCase()) ||\n            options.showLineNumbers) &&\n          !falseShowLineNumbersStr.some((str) => meta.toLowerCase().includes(str))\n        ) {\n          line.properties.line = [(i + startingLineNumber).toString()]\n          line.properties.className.push('line-number')\n        }\n\n        // Line highlight\n        if (shouldHighlightLine(i)) {\n          line.properties.className.push('highlight-line')\n        }\n\n        // Diff classes\n        if (lang === 'diff' && toString(line).substring(0, 1) === '-') {\n          line.properties.className.push('deleted')\n        } else if (lang === 'diff' && toString(line).substring(0, 1) === '+') {\n          line.properties.className.push('inserted')\n        }\n      }\n\n      // Remove possible trailing line when splitting by \\n which results in empty array\n      if (\n        codeLineArray.length > 0 &&\n        toString(codeLineArray[codeLineArray.length - 1]).trim() === ''\n      ) {\n        codeLineArray.pop()\n      }\n\n      node.children = codeLineArray\n    }\n  }\n}\n\nexport default rehypePrismGenerator\n","import { refractor as refractorAll } from 'refractor/lib/all.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * This supports all the languages and should be used on the server side.\n *\n * Consider using rehypePrismCommon or rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismAll = rehypePrismGenerator(refractorAll)\n\nexport default rehypePrismAll\n","import { refractor as refractorCommon } from 'refractor/lib/common.js'\nimport rehypePrismGenerator from './generator.js'\n\n/**\n * Rehype prism plugin that highlights code blocks with refractor (prismjs)\n * Supported languages: https://github.com/wooorm/refractor#data\n *\n * Consider using rehypePrismGenerator to generate a plugin\n * that supports your required languages.\n */\nconst rehypePrismCommon = rehypePrismGenerator(refractorCommon)\n\nexport default rehypePrismCommon\n","const rtlRange = '\\u0591-\\u07FF\\uFB1D-\\uFDFD\\uFE70-\\uFEFC'\nconst ltrRange =\n  'A-Za-z\\u00C0-\\u00D6\\u00D8-\\u00F6' +\n  '\\u00F8-\\u02B8\\u0300-\\u0590\\u0800-\\u1FFF\\u200E\\u2C00-\\uFB1C' +\n  '\\uFE00-\\uFE6F\\uFEFD-\\uFFFF'\n\n/* eslint-disable no-misleading-character-class */\nconst rtl = new RegExp('^[^' + ltrRange + ']*[' + rtlRange + ']')\nconst ltr = new RegExp('^[^' + rtlRange + ']*[' + ltrRange + ']')\n/* eslint-enable no-misleading-character-class */\n\n/**\n * Detect the direction of text: left-to-right, right-to-left, or neutral\n *\n * @param {string} value\n * @returns {'rtl'|'ltr'|'neutral'}\n */\nexport function direction(value) {\n  const source = String(value || '')\n  return rtl.test(source) ? 'rtl' : ltr.test(source) ? 'ltr' : 'neutral'\n}\n","/**\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('hast-util-is-element').AssertPredicate<Element>} IsElement\n */\n\nimport {convertElement} from 'hast-util-is-element'\n\n/**\n * @param {Node} node\n * @returns {node is Parent}\n */\nexport function parent(node) {\n  // @ts-expect-error: hush.\n  return Array.isArray(node.children)\n}\n\n/** @type {IsElement} */\n// @ts-expect-error it works.\nexport const element = convertElement()\n","/**\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').HastNode} HastNode\n * @typedef {import('./types.js').ElementChild} ElementChild\n * @typedef {import('./types.js').Direction} Direction\n * @typedef {import('unist-util-visit/complex-types').Visitor<ElementChild>} Visitor\n */\n\nimport {direction} from 'direction'\nimport {isElement} from 'hast-util-is-element'\nimport {toString} from 'hast-util-to-string'\nimport {svg} from 'property-information'\nimport {visit, EXIT, SKIP} from 'unist-util-visit'\nimport {element} from './util.js'\n\n/**\n * @param {SelectState} state\n * @param {HastNode} node\n * @returns {() => void}\n */\n// eslint-disable-next-line complexity\nexport function enterState(state, node) {\n  const schema = state.schema\n  const language = state.language\n  const currentDirection = state.direction\n  const editableOrEditingHost = state.editableOrEditingHost\n  /** @type {Direction|undefined} */\n  let dirInferred\n  /** @type {boolean|undefined} */\n  let found\n\n  if (element(node) && node.properties) {\n    const lang = node.properties.xmlLang || node.properties.lang\n    const type = node.properties.type || 'text'\n    const dir = dirProperty(node)\n\n    if (lang !== undefined && lang !== null) {\n      state.language = String(lang)\n      found = true\n    }\n\n    if (schema && schema.space === 'html') {\n      if (node.properties.contentEditable === 'true') {\n        state.editableOrEditingHost = true\n        found = true\n      }\n\n      if (isElement(node, 'svg')) {\n        state.schema = svg\n        found = true\n      }\n\n      // See: <https://html.spec.whatwg.org/#the-directionality>.\n      // Explicit `[dir=rtl]`.\n      if (dir === 'rtl') {\n        dirInferred = dir\n      } else if (\n        // Explicit `[dir=ltr]`.\n        dir === 'ltr' ||\n        // HTML with an invalid or no `[dir]`.\n        (dir !== 'auto' && isElement(node, 'html')) ||\n        // `input[type=tel]` with an invalid or no `[dir]`.\n        (dir !== 'auto' && isElement(node, 'input') && type === 'tel')\n      ) {\n        dirInferred = 'ltr'\n        // `[dir=auto]` or `bdi` with an invalid or no `[dir]`.\n      } else if (dir === 'auto' || isElement(node, 'bdi')) {\n        if (isElement(node, 'textarea')) {\n          // Check contents of `<textarea>`.\n          dirInferred = dirBidi(toString(node))\n        } else if (\n          isElement(node, 'input') &&\n          (type === 'email' ||\n            type === 'search' ||\n            type === 'tel' ||\n            type === 'text')\n        ) {\n          // Check value of `<input>`.\n          // @ts-expect-error something is `never` in types but this is needed.\n          dirInferred = node.properties.value\n            ? // @ts-expect-error Assume string\n              dirBidi(node.properties.value)\n            : 'ltr'\n        } else {\n          // Check text nodes in `node`.\n          visit(node, inferDirectionality)\n        }\n      }\n\n      if (dirInferred) {\n        state.direction = dirInferred\n        found = true\n      }\n    }\n    // Turn off editing mode in non-HTML spaces.\n    else if (state.editableOrEditingHost) {\n      state.editableOrEditingHost = false\n      found = true\n    }\n  }\n\n  return found ? reset : noop\n\n  function reset() {\n    state.schema = schema\n    state.language = language\n    state.direction = currentDirection\n    state.editableOrEditingHost = editableOrEditingHost\n  }\n\n  /** @type {Visitor} */\n  function inferDirectionality(child) {\n    if (child.type === 'text') {\n      dirInferred = dirBidi(child.value)\n      return dirInferred ? EXIT : null\n    }\n\n    if (\n      child !== node &&\n      (isElement(child, ['bdi', 'script', 'style', 'textare']) ||\n        dirProperty(child))\n    ) {\n      return SKIP\n    }\n  }\n}\n\n/**\n * @param {string} value\n * @returns {Direction|undefined}\n */\nfunction dirBidi(value) {\n  const result = direction(value)\n  return result === 'neutral' ? undefined : result\n}\n\n/**\n * @param {ElementChild} node\n * @returns {Direction|undefined}\n */\nfunction dirProperty(node) {\n  const value =\n    element(node) && node.properties && typeof node.properties.dir === 'string'\n      ? node.properties.dir.toLowerCase()\n      : undefined\n\n  return value === 'auto' || value === 'ltr' || value === 'rtl'\n    ? value\n    : undefined\n}\n\nfunction noop() {}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').SelectIterator} SelectIterator\n * @typedef {import('./types.js').Handler} Handler\n */\n\nimport {zwitch} from 'zwitch'\nimport {enterState} from './enter-state.js'\nimport {parent, element} from './util.js'\n\nconst own = {}.hasOwnProperty\n\nconst handle = zwitch('nestingOperator', {\n  // @ts-expect-error: hush.\n  unknown: unknownNesting,\n  // @ts-expect-error: hush.\n  invalid: topScan, // `undefined` is the top query selector.\n  handlers: {\n    // @ts-expect-error: hush.\n    null: descendant, // `null` is the descendant combinator.\n    // @ts-expect-error: hush.\n    '>': child,\n    // @ts-expect-error: hush.\n    '+': adjacentSibling,\n    // @ts-expect-error: hush.\n    '~': generalSibling\n  }\n})\n\n/** @type {Handler} */\nexport function nest(query, node, index, parent, state) {\n  handle(query, node, index, parent, state)\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 6 */\n/**\n * @param {{[x: string]: unknown, type: string}} query\n */\nfunction unknownNesting(query) {\n  throw new Error('Unexpected nesting `' + query.nestingOperator + '`')\n}\n\n/** @type {Handler} */\nfunction topScan(query, node, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next 3 */\n  if (parent || index === null) {\n    throw new Error('topScan is supposed to be called from the root node')\n  }\n\n  // Shouldn’t happen.\n  /* c8 ignore next 3 */\n  if (!state.iterator) {\n    throw new Error('Expected `iterator`')\n  }\n\n  state.iterator(query, node, index, parent, state)\n  if (!state.shallow) descendant(query, node, index, parent, state)\n}\n\n/** @type {Handler} */\nfunction descendant(query, node, index, parent, state) {\n  const previous = state.iterator\n\n  state.iterator = iterator\n  child(query, node, index, parent, state)\n\n  /** @type {SelectIterator} */\n  function iterator(query, node, index, parent, state) {\n    // Shouldn’t happen.\n    /* c8 ignore next 3 */\n    if (!previous) {\n      throw new Error('Expected `iterator`')\n    }\n\n    state.iterator = previous\n    previous(query, node, index, parent, state)\n    state.iterator = iterator\n\n    if (state.one && state.found) return\n\n    child(query, node, index, parent, state)\n  }\n}\n\n/** @type {Handler} */\nfunction child(query, node, _1, _2, state) {\n  if (!parent(node)) return\n  if (node.children.length === 0) return\n  indexedSearch(query, node, state)\n}\n\n/** @type {Handler} */\nfunction adjacentSibling(query, _, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next */\n  if (!parent || index === null) return\n  indexedSearch(query, parent, state, index + 1, true)\n}\n\n/** @type {Handler} */\nfunction generalSibling(query, _, index, parent, state) {\n  // Shouldn’t happen.\n  /* c8 ignore next */\n  if (!parent || index === null) return\n  indexedSearch(query, parent, state, index + 1)\n}\n\n/**\n * Handles `typeIndex` and `typeCount` properties for every walker.\n *\n * @param {Rule} query\n * @param {Parent} parent\n * @param {SelectState} state\n * @param {number} [from=0]\n * @param {boolean} [firstElementOnly=false]\n */\nfunction indexedSearch(query, parent, state, from, firstElementOnly) {\n  const handle = state.index ? delay : add\n  const children = parent.children\n  let elements = 0\n  let index = -1\n  /** @type {Record<string, number>} */\n  const types = {}\n  /** @type {Array<Function>} */\n  const delayed = []\n\n  // Start looking at `from`\n  if (from === undefined || from === null) from = 0\n\n  // Exit if there are no further nodes.\n  if (from >= children.length) return\n\n  // If we need to index for types, do so for all elements before `from`.\n  if (state.index) {\n    while (++index < from) {\n      const child = children[index]\n      if (element(child)) count(child.tagName)\n    }\n  }\n\n  index = from - 1\n\n  while (++index < children.length) {\n    const child = children[index]\n    // Only check elements.\n    // Check either all elements, or only check the first sibling\n    if (element(child)) {\n      handle(child, index)\n\n      // Stop if we’re looking for one node and it’s already found.\n      if (state.one && state.found) return\n      if (firstElementOnly) break\n    }\n  }\n\n  if (state.index) {\n    index = -1\n\n    while (++index < delayed.length) {\n      delayed[index]()\n      if (state.one && state.found) return\n    }\n  }\n\n  /**\n   * @param {Element} node\n   * @param {number} childIndex\n   */\n  function delay(node, childIndex) {\n    const elementsBefore = elements\n    const elementsByTypeBefore = own.call(types, node.tagName)\n      ? types[node.tagName]\n      : 0\n\n    count(node.tagName)\n\n    delayed.push(fn)\n\n    function fn() {\n      // Before counting further elements:\n      state.elementIndex = elementsBefore\n      state.typeIndex = elementsByTypeBefore\n\n      // After counting all elements.\n      state.elementCount = elements\n      state.typeCount = types[node.tagName]\n\n      add(node, childIndex)\n    }\n  }\n\n  /**\n   * @param {Element} node\n   * @param {number} childIndex\n   */\n  function add(node, childIndex) {\n    const exit = enterState(state, node)\n\n    // Shouldn’t happen.\n    /* c8 ignore next 3 */\n    if (!state.iterator) {\n      throw new Error('Expected `iterator`')\n    }\n\n    state.iterator(query, node, childIndex, parent, state)\n    exit()\n  }\n\n  /**\n   * @param {string} name\n   */\n  function count(name) {\n    if (!own.call(types, name)) types[name] = 0\n    elements++\n    types[name]++\n  }\n}\n","/**\n * See <https://tools.ietf.org/html/rfc4647#section-3.1>\n * for more information on the algorithms.\n */\n\n/**\n * @typedef {string} Tag\n * @typedef {Array<Tag>} Tags\n * @typedef {string} Range\n * @typedef {Array<Range>} Ranges\n *\n * @callback Check\n * @param {Tag} tag\n * @param {Range} range\n * @returns {boolean}\n *\n * @typedef {FilterOrLookup<true>} Filter\n * @typedef {FilterOrLookup<false>} Lookup\n */\n\n/**\n * @template {boolean} IsFilter\n * @callback FilterOrLookup\n * @param {Tag|Tags} tags\n * @param {Range|Ranges} [ranges='*']\n * @returns {IsFilter extends true ? Tags : Tag|undefined}\n */\n\n/**\n * Factory to perform a filter or a lookup.\n * This factory creates a function that accepts a list of tags and a list of\n * ranges, and contains logic to exit early for lookups.\n * `check` just has to deal with one tag and one range.\n * This match function iterates over ranges, and for each range,\n * iterates over tags.  That way, earlier ranges matching any tag have\n * precedence over later ranges.\n *\n * @template {boolean} IsFilter\n * @param {Check} check\n * @param {IsFilter} filter\n * @returns {FilterOrLookup<IsFilter>}\n */\nfunction factory(check, filter) {\n  return function (tags, ranges) {\n    let left = cast(tags, 'tag')\n    const right = cast(\n      ranges === null || ranges === undefined ? '*' : ranges,\n      'range'\n    )\n    /** @type {Tags} */\n    const matches = []\n    let rightIndex = -1\n\n    while (++rightIndex < right.length) {\n      const range = right[rightIndex].toLowerCase()\n\n      // Ignore wildcards in lookup mode.\n      if (!filter && range === '*') continue\n\n      let leftIndex = -1\n      /** @type {Tags} */\n      const next = []\n\n      while (++leftIndex < left.length) {\n        if (check(left[leftIndex].toLowerCase(), range)) {\n          // Exit if this is a lookup and we have a match.\n          if (!filter) {\n            return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n              left[leftIndex]\n            )\n          }\n\n          matches.push(left[leftIndex])\n        } else {\n          next.push(left[leftIndex])\n        }\n      }\n\n      left = next\n    }\n\n    // If this is a filter, return the list.  If it’s a lookup, we didn’t find\n    // a match, so return `undefined`.\n    return /** @type {IsFilter extends true ? Tags : Tag|undefined} */ (\n      filter ? matches : undefined\n    )\n  }\n}\n\n/**\n * Basic Filtering (Section 3.3.1) matches a language priority list consisting\n * of basic language ranges (Section 2.1) to sets of language tags.\n */\nexport const basicFilter = factory(function (tag, range) {\n  return range === '*' || tag === range || tag.includes(range + '-')\n}, true)\n\n/**\n * Extended Filtering (Section 3.3.2) matches a language priority list\n * consisting of extended language ranges (Section 2.2) to sets of language\n * tags.\n */\nexport const extendedFilter = factory(function (tag, range) {\n  // 3.3.2.1\n  const left = tag.split('-')\n  const right = range.split('-')\n  let leftIndex = 0\n  let rightIndex = 0\n\n  // 3.3.2.2\n  if (right[rightIndex] !== '*' && left[leftIndex] !== right[rightIndex]) {\n    return false\n  }\n\n  leftIndex++\n  rightIndex++\n\n  // 3.3.2.3\n  while (rightIndex < right.length) {\n    // 3.3.2.3.A\n    if (right[rightIndex] === '*') {\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.B\n    if (!left[leftIndex]) return false\n\n    // 3.3.2.3.C\n    if (left[leftIndex] === right[rightIndex]) {\n      leftIndex++\n      rightIndex++\n      continue\n    }\n\n    // 3.3.2.3.D\n    if (left[leftIndex].length === 1) return false\n\n    // 3.3.2.3.E\n    leftIndex++\n  }\n\n  // 3.3.2.4\n  return true\n}, true)\n\n/**\n * Lookup (Section 3.4) matches a language priority list consisting of basic\n * language ranges to sets of language tags to find the one exact language tag\n * that best matches the range.\n */\nexport const lookup = factory(function (tag, range) {\n  let right = range\n\n  /* eslint-disable-next-line no-constant-condition */\n  while (true) {\n    if (right === '*' || tag === right) return true\n\n    let index = right.lastIndexOf('-')\n\n    if (index < 0) return false\n\n    if (right.charAt(index - 2) === '-') index -= 2\n\n    right = right.slice(0, index)\n  }\n}, false)\n\n/**\n * Validate tags or ranges, and cast them to arrays.\n *\n * @param {string|Array<string>} values\n * @param {string} name\n * @returns {Array<string>}\n */\nfunction cast(values, name) {\n  const value = values && typeof values === 'string' ? [values] : values\n\n  if (!value || typeof value !== 'object' || !('length' in value)) {\n    throw new Error(\n      'Invalid ' + name + ' `' + value + '`, expected non-empty string'\n    )\n  }\n\n  return value\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth\n * @typedef {import('./types.js').RulePseudoSelector} RulePseudoSelector\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').ElementChild} ElementChild\n */\n\nimport {extendedFilter} from 'bcp-47-match'\nimport {parse as commas} from 'comma-separated-tokens'\nimport {hasProperty} from 'hast-util-has-property'\nimport {isElement} from 'hast-util-is-element'\nimport {whitespace} from 'hast-util-whitespace'\nimport {zwitch} from 'zwitch'\nimport {any} from './any.js'\n\nconst handle = zwitch('name', {\n  // @ts-expect-error: hush.\n  unknown: unknownPseudo,\n  invalid: invalidPseudo,\n  handlers: {\n    // @ts-expect-error: hush.\n    any: matches,\n    // @ts-expect-error: hush.\n    'any-link': anyLink,\n    // @ts-expect-error: hush.\n    blank,\n    // @ts-expect-error: hush.\n    checked,\n    // @ts-expect-error: hush.\n    dir,\n    // @ts-expect-error: hush.\n    disabled,\n    // @ts-expect-error: hush.\n    empty,\n    // @ts-expect-error: hush.\n    enabled,\n    // @ts-expect-error: hush.\n    'first-child': firstChild,\n    // @ts-expect-error: hush.\n    'first-of-type': firstOfType,\n    // @ts-expect-error: hush.\n    has,\n    // @ts-expect-error: hush.\n    lang,\n    // @ts-expect-error: hush.\n    'last-child': lastChild,\n    // @ts-expect-error: hush.\n    'last-of-type': lastOfType,\n    // @ts-expect-error: hush.\n    matches,\n    // @ts-expect-error: hush.\n    not,\n    // @ts-expect-error: hush.\n    'nth-child': nthChild,\n    // @ts-expect-error: hush.\n    'nth-last-child': nthLastChild,\n    // @ts-expect-error: hush.\n    'nth-of-type': nthOfType,\n    // @ts-expect-error: hush.\n    'nth-last-of-type': nthLastOfType,\n    // @ts-expect-error: hush.\n    'only-child': onlyChild,\n    // @ts-expect-error: hush.\n    'only-of-type': onlyOfType,\n    // @ts-expect-error: hush.\n    optional,\n    // @ts-expect-error: hush.\n    'read-only': readOnly,\n    // @ts-expect-error: hush.\n    'read-write': readWrite,\n    // @ts-expect-error: hush.\n    required,\n    // @ts-expect-error: hush.\n    root,\n    // @ts-expect-error: hush.\n    scope\n  }\n})\n\npseudo.needsIndex = [\n  'first-child',\n  'first-of-type',\n  'last-child',\n  'last-of-type',\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type',\n  'only-child',\n  'only-of-type'\n]\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function pseudo(query, element, index, parent, state) {\n  const pseudos = query.pseudos\n  let offset = -1\n\n  while (++offset < pseudos.length) {\n    if (!handle(pseudos[offset], element, index, parent, state)) return false\n  }\n\n  return true\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number|null} _1\n * @param {Parent|null} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction matches(query, element, _1, _2, state) {\n  const shallow = state.shallow\n  const one = state.one\n\n  state.shallow = true\n  state.one = true\n\n  const result = any(query.value, element, state)[0] === element\n\n  state.shallow = shallow\n  state.one = one\n\n  return result\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction not(query, element, index, parent, state) {\n  return !matches(query, element, index, parent, state)\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction anyLink(_, element) {\n  return (\n    isElement(element, ['a', 'area', 'link']) && hasProperty(element, 'href')\n  )\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction checked(_, element) {\n  if (isElement(element, ['input', 'menuitem'])) {\n    return Boolean(\n      element.properties &&\n        (element.properties.type === 'checkbox' ||\n          element.properties.type === 'radio') &&\n        hasProperty(element, 'checked')\n    )\n  }\n\n  if (isElement(element, 'option')) {\n    return hasProperty(element, 'selected')\n  }\n\n  return false\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction dir(query, _1, _2, _3, state) {\n  return state.direction === query.value\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction disabled(_, element) {\n  return (\n    isElement(element, [\n      'button',\n      'input',\n      'select',\n      'textarea',\n      'optgroup',\n      'option',\n      'menuitem',\n      'fieldset'\n    ]) && hasProperty(element, 'disabled')\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction enabled(query, element) {\n  return !disabled(query, element)\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction required(_, element) {\n  return (\n    isElement(element, ['input', 'textarea', 'select']) &&\n    hasProperty(element, 'required')\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} element\n * @returns {boolean}\n */\nfunction optional(query, element) {\n  return !required(query, element)\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number|null} _1\n * @param {Parent|null} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction readWrite(_, element, _1, _2, state) {\n  return isElement(element, ['input', 'textarea'])\n    ? !hasProperty(element, 'readOnly') && !hasProperty(element, 'disabled')\n    : Boolean(state.editableOrEditingHost)\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} element\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction readOnly(query, element, index, parent, state) {\n  return !readWrite(query, element, index, parent, state)\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number|null} _1\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction root(_, element, _1, parent, state) {\n  return Boolean(\n    (!parent || parent.type === 'root') &&\n      state.schema &&\n      (state.schema.space === 'html' || state.schema.space === 'svg') &&\n      isElement(element, ['html', 'svg'])\n  )\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @param {number|null} _1\n * @param {Parent|null} _2\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction scope(_, element, _1, _2, state) {\n  return Boolean(\n    isElement(element) &&\n      state.scopeElements &&\n      state.scopeElements.includes(element)\n  )\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction empty(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementChild} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return child.type === 'element' || child.type === 'text'\n  }\n}\n\n/**\n * @param {RulePseudo} _\n * @param {Element} element\n * @returns {boolean}\n */\nfunction blank(_, element) {\n  return !someChildren(element, check)\n\n  /**\n   * @param {ElementChild} child\n   * @returns {boolean}\n   */\n  function check(child) {\n    return (\n      child.type === 'element' || (child.type === 'text' && !whitespace(child))\n    )\n  }\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementIndex === 0\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lang(query, _1, _2, _3, state) {\n  return (\n    state.language !== '' &&\n    state.language !== undefined &&\n    state.language !== null &&\n    // @ts-expect-error never `selectors`.\n    extendedFilter(state.language, commas(query.value)).length > 0\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    state.elementCount && state.elementIndex === state.elementCount - 1\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.elementCount === 1\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.elementIndex === 'number' && query.value(state.elementIndex)\n  )\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastChild(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return Boolean(\n    typeof state.elementCount === 'number' &&\n      typeof state.elementIndex === 'number' &&\n      query.value(state.elementCount - state.elementIndex - 1)\n  )\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return typeof state.typeIndex === 'number' && query.value(state.typeIndex)\n}\n\n/**\n * @param {RulePseudoNth} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction nthLastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeCount === 'number' &&\n    typeof state.typeIndex === 'number' &&\n    query.value(state.typeCount - 1 - state.typeIndex)\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction firstOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeIndex === 0\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction lastOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return (\n    typeof state.typeIndex === 'number' &&\n    typeof state.typeCount === 'number' &&\n    state.typeIndex === state.typeCount - 1\n  )\n}\n\n/**\n * @param {RulePseudo} query\n * @param {Element} _1\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction onlyOfType(query, _1, _2, _3, state) {\n  assertDeep(state, query)\n  return state.typeCount === 1\n}\n\n/**\n * @param {Element} element\n * @param {(child: ElementChild) => boolean} check\n * @returns {boolean}\n */\nfunction someChildren(element, check) {\n  const children = element.children\n  let index = -1\n\n  while (++index < children.length) {\n    if (check(children[index])) return true\n  }\n\n  return false\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidPseudo() {\n  throw new Error('Invalid pseudo-selector')\n}\n\n/**\n * @param {RulePseudo} query\n */\nfunction unknownPseudo(query) {\n  if (query.name) {\n    throw new Error('Unknown pseudo-selector `' + query.name + '`')\n  }\n\n  throw new Error('Unexpected pseudo-element or empty pseudo-class')\n}\n\n/**\n * @param {SelectState} state\n * @param {RulePseudo|RulePseudoNth} query\n */\nfunction assertDeep(state, query) {\n  if (state.shallow) {\n    throw new Error('Cannot use `:' + query.name + '` without parent')\n  }\n}\n\n/**\n * @param {RulePseudoSelector} query\n * @param {Element} element\n * @param {number|null} _2\n * @param {Parent|null} _3\n * @param {SelectState} state\n * @returns {boolean}\n */\nfunction has(query, element, _2, _3, state) {\n  const shallow = state.shallow\n  const one = state.one\n  const scopeElements = state.scopeElements\n  const value = appendScope(query.value)\n\n  state.shallow = false\n  state.one = true\n  state.scopeElements = [element]\n\n  const result = any(value, element, state).length > 0\n\n  state.shallow = shallow\n  state.one = one\n  state.scopeElements = scopeElements\n\n  return result\n}\n\n/**\n * @param {Selector} value\n * @returns {Selectors}\n */\nfunction appendScope(value) {\n  /** @type {Selectors} */\n  const selector =\n    value.type === 'ruleSet' ? {type: 'selectors', selectors: [value]} : value\n  let index = -1\n\n  while (++index < selector.selectors.length) {\n    const rule = selector.selectors[index].rule\n    rule.nestingOperator = null\n\n    if (\n      !rule.pseudos ||\n      rule.pseudos.length !== 1 ||\n      rule.pseudos[0].name !== 'scope'\n    ) {\n      selector.selectors[index] = {\n        type: 'ruleSet',\n        // @ts-expect-error pseudos are fine w/ just a name!\n        rule: {type: 'rule', rule, pseudos: [{name: 'scope'}]}\n      }\n    }\n  }\n\n  return selector\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleAttr} RuleAttr\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Schema} Schema\n * @typedef {import('./types.js').Info} Info\n * @typedef {import('./types.js').PropertyValue} PropertyValue\n */\n\nimport {stringify as commas} from 'comma-separated-tokens'\nimport {hasProperty} from 'hast-util-has-property'\nimport {find} from 'property-information'\nimport {stringify as spaces} from 'space-separated-tokens'\nimport {zwitch} from 'zwitch'\n\nconst handle = zwitch('operator', {\n  // @ts-expect-error: hush.\n  unknown: unknownOperator,\n  // @ts-expect-error: hush.\n  invalid: exists,\n  handlers: {\n    // @ts-expect-error: hush.\n    '=': exact,\n    // @ts-expect-error: hush.\n    '~=': spaceSeparatedList,\n    // @ts-expect-error: hush.\n    '|=': exactOrPrefix,\n    // @ts-expect-error: hush.\n    '^=': begins,\n    // @ts-expect-error: hush.\n    '$=': ends,\n    // @ts-expect-error: hush.\n    '*=': contains\n  }\n})\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @param {Schema} schema\n * @returns {boolean}\n */\nexport function attribute(query, element, schema) {\n  const attrs = query.attrs\n  let index = -1\n\n  while (++index < attrs.length) {\n    if (!handle(attrs[index], element, find(schema, attrs[index].name))) {\n      return false\n    }\n  }\n\n  return true\n}\n\n/**\n * `[attr]`\n *\n * @param {RuleAttr} _\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exists(_, element, info) {\n  return hasProperty(element, info.property)\n}\n\n/**\n * `[attr=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exact(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      normalizeValue(element.properties[info.property], info) === query.value\n  )\n}\n\n/**\n * `[attr~=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction spaceSeparatedList(query, element, info) {\n  const value = element.properties && element.properties[info.property]\n\n  return (\n    // If this is a comma-separated list, and the query is contained in it, return\n    // true.\n    (!info.commaSeparated &&\n      value &&\n      typeof value === 'object' &&\n      query.value &&\n      value.includes(query.value)) ||\n    // For all other values (including comma-separated lists), return whether this\n    // is an exact match.\n    (hasProperty(element, info.property) &&\n      normalizeValue(value, info) === query.value)\n  )\n}\n\n/**\n * `[attr|=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction exactOrPrefix(query, element, info) {\n  const value = normalizeValue(\n    element.properties && element.properties[info.property],\n    info\n  )\n\n  return Boolean(\n    hasProperty(element, info.property) &&\n      query.value &&\n      (value === query.value ||\n        (value.slice(0, query.value.length) === query.value &&\n          value.charAt(query.value.length) === '-'))\n  )\n}\n\n/**\n * `[attr^=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction begins(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).slice(\n        0,\n        query.value.length\n      ) === query.value\n  )\n}\n\n/**\n * `[attr$=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction ends(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).slice(\n        -query.value.length\n      ) === query.value\n  )\n}\n\n/**\n * `[attr*=value]`\n *\n * @param {RuleAttr} query\n * @param {Element} element\n * @param {Info} info\n * @returns {boolean}\n */\nfunction contains(query, element, info) {\n  return Boolean(\n    hasProperty(element, info.property) &&\n      element.properties &&\n      query.value &&\n      normalizeValue(element.properties[info.property], info).includes(\n        query.value\n      )\n  )\n}\n\n// Shouldn’t be called, Parser throws an error instead.\n/**\n * @param {RuleAttr} query\n * @returns {boolean}\n */\n/* c8 ignore next 3 */\nfunction unknownOperator(query) {\n  throw new Error('Unknown operator `' + query.operator + '`')\n}\n\n/**\n * Stringify a hast value back to its HTML form.\n *\n * @param {PropertyValue} value\n * @param {Info} info\n * @returns {string}\n */\nfunction normalizeValue(value, info) {\n  if (typeof value === 'boolean') {\n    return info.attribute\n  }\n\n  if (Array.isArray(value)) {\n    return (info.commaSeparated ? commas : spaces)(value)\n  }\n\n  return String(value)\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').HastNode} HastNode\n * @typedef {import('./types.js').Element} Element\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').SelectState} SelectState\n * @typedef {import('hast-util-is-element').AssertPredicate<Element>} IsElement\n */\n\nimport {attribute} from './attribute.js'\nimport {className} from './class-name.js'\nimport {id} from './id.js'\nimport {name} from './name.js'\nimport {pseudo} from './pseudo.js'\nimport {element} from './util.js'\n\n/**\n * @param {Rule} query\n * @param {HastNode} node\n * @param {number|null} index\n * @param {Parent|null} parent\n * @param {SelectState} state\n * @returns {boolean}\n */\nexport function test(query, node, index, parent, state) {\n  return Boolean(\n    element(node) &&\n      state.schema &&\n      (!query.tagName || name(query, node)) &&\n      (!query.classNames || className(query, node)) &&\n      (!query.id || id(query, node)) &&\n      (!query.attrs || attribute(query, node, state.schema)) &&\n      (!query.pseudos || pseudo(query, node, index, parent, state))\n  )\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function name(query, element) {\n  return query.tagName === '*' || query.tagName === element.tagName\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function className(query, element) {\n  /** @type {Array<string>} */\n  // @ts-expect-error Assume array.\n  const value = element.properties.className || []\n  let index = -1\n\n  if (query.classNames) {\n    while (++index < query.classNames.length) {\n      if (!value.includes(query.classNames[index])) return false\n    }\n  }\n\n  return true\n}\n","/**\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').Element} Element\n */\n\n/**\n * @param {Rule} query\n * @param {Element} element\n * @returns {boolean}\n */\nexport function id(query, element) {\n  return Boolean(element.properties && element.properties.id === query.id)\n}\n","/**\n * @typedef {import('hast').Element} Element\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').HastNode} HastNode\n * @typedef {import('./types.js').SelectIterator} SelectIterator\n * @typedef {import('./types.js').SelectState} SelectState\n */\n\nimport {html, svg} from 'property-information'\nimport {zwitch} from 'zwitch'\nimport {enterState} from './enter-state.js'\nimport {nest} from './nest.js'\nimport {pseudo} from './pseudo.js'\nimport {test} from './test.js'\n\nconst type = zwitch('type', {\n  // @ts-expect-error: hush.\n  unknown: unknownType,\n  invalid: invalidType,\n  // @ts-expect-error: hush.\n  handlers: {selectors, ruleSet, rule}\n})\n\n/**\n * @param {Selectors|RuleSet|Rule} query\n * @param {HastNode|undefined} node\n * @param {SelectState} state\n * @returns {Array<Element>}\n */\nexport function any(query, node, state) {\n  // @ts-expect-error zwitch types are off.\n  return query && node ? type(query, node, state) : []\n}\n\n/**\n * @param {Selectors} query\n * @param {HastNode} node\n * @param {SelectState} state\n * @returns {Array<Element>}\n */\nfunction selectors(query, node, state) {\n  const collector = new Collector(state.one)\n  let index = -1\n\n  while (++index < query.selectors.length) {\n    collector.collectAll(ruleSet(query.selectors[index], node, state))\n  }\n\n  return collector.result\n}\n\n/**\n * @param {RuleSet} query\n * @param {HastNode} node\n * @param {SelectState} state\n * @returns {Array<Element>}\n */\nfunction ruleSet(query, node, state) {\n  return rule(query.rule, node, state)\n}\n\n/**\n * @param {Rule} query\n * @param {HastNode} tree\n * @param {SelectState} state\n * @returns {Array<Element>}\n */\nfunction rule(query, tree, state) {\n  const collector = new Collector(state.one)\n\n  if (state.shallow && query.rule) {\n    throw new Error('Expected selector without nesting')\n  }\n\n  nest(\n    query,\n    tree,\n    0,\n    null,\n    configure(query, {\n      schema: state.space === 'svg' ? svg : html,\n      language: undefined,\n      direction: 'ltr',\n      editableOrEditingHost: false,\n      // @ts-expect-error assume elements.\n      scopeElements: tree.type === 'root' ? tree.children : [tree],\n      iterator,\n      one: state.one,\n      shallow: state.shallow\n    })\n  )\n\n  return collector.result\n\n  /** @type {SelectIterator} */\n  function iterator(query, node, index, parent, state) {\n    const exit = enterState(state, node)\n\n    if (test(query, node, index, parent, state)) {\n      if (query.rule) {\n        nest(query.rule, node, index, parent, configure(query.rule, state))\n      } else {\n        // @ts-expect-error `test` also asserts `node is Element`\n        collector.collect(node)\n        state.found = true\n      }\n    }\n\n    exit()\n  }\n\n  /**\n   * @template {SelectState} S\n   * @param {Rule} query\n   * @param {S} state\n   * @returns {S}\n   */\n  function configure(query, state) {\n    const pseudos = query.pseudos || []\n    let index = -1\n\n    while (++index < pseudos.length) {\n      if (pseudo.needsIndex.includes(pseudos[index].name)) {\n        state.index = true\n        break\n      }\n    }\n\n    return state\n  }\n}\n\n// Shouldn’t be called, all data is handled.\n/* c8 ignore next 6 */\n/**\n * @param {{[x: string]: unknown, type: string}} query\n */\nfunction unknownType(query) {\n  throw new Error('Unknown type `' + query.type + '`')\n}\n\n// Shouldn’t be called, parser gives correct data.\n/* c8 ignore next 3 */\nfunction invalidType() {\n  throw new Error('Invalid type')\n}\n\nclass Collector {\n  /**\n   * @param {boolean|undefined} [one]\n   */\n  constructor(one) {\n    /** @type {Array<Element>} */\n    this.result = []\n    /** @type {boolean|undefined} */\n    this.one = one\n    /** @type {boolean} */\n    this.found = false\n  }\n\n  /**\n   * Append nodes to array, filtering out duplicates.\n   *\n   * @param {Array<Element>} elements\n   */\n  collectAll(elements) {\n    let index = -1\n\n    while (++index < elements.length) {\n      this.collect(elements[index])\n    }\n  }\n\n  /**\n   * Append one node.\n   *\n   * @param {Element} element\n   */\n  collect(element) {\n    if (this.one) {\n      // Shouldn’t happen, safeguards performance problems.\n      /* c8 ignore next */\n      if (this.found) return\n      this.found = true\n    }\n\n    if (!this.result.includes(element)) this.result.push(element)\n  }\n}\n",null,null,null,"/**\n * @typedef {import('./types.js').Selector} Selector\n * @typedef {import('./types.js').Selectors} Selectors\n * @typedef {import('./types.js').RuleSet} RuleSet\n * @typedef {import('./types.js').Rule} Rule\n * @typedef {import('./types.js').RulePseudo} RulePseudo\n * @typedef {import('./types.js').RulePseudoNth} RulePseudoNth\n */\n\nimport {CssSelectorParser} from 'css-selector-parser'\nimport fauxEsmNthCheck from 'nth-check'\nimport {zwitch} from 'zwitch'\n\n/** @type {import('nth-check').default} */\n// @ts-expect-error\nconst nthCheck = fauxEsmNthCheck.default || fauxEsmNthCheck\n\nconst nth = new Set([\n  'nth-child',\n  'nth-last-child',\n  'nth-of-type',\n  'nth-last-of-type'\n])\n\nconst parser = new CssSelectorParser()\n\n// @ts-expect-error: hush.\nconst compile = zwitch('type', {handlers: {selectors, ruleSet, rule}})\n\nparser.registerAttrEqualityMods('~', '|', '^', '$', '*')\nparser.registerSelectorPseudos('any', 'matches', 'not', 'has')\nparser.registerNestingOperators('>', '+', '~')\n\n/**\n * @param {string} selector\n * @returns {Selector}\n */\nexport function parse(selector) {\n  if (typeof selector !== 'string') {\n    throw new TypeError('Expected `string` as selector, not `' + selector + '`')\n  }\n\n  // @ts-expect-error types are wrong.\n  return compile(parser.parse(selector))\n}\n\n/**\n * @param {Selectors} query\n * @returns {Selectors}\n */\nfunction selectors(query) {\n  let index = -1\n\n  while (++index < query.selectors.length) {\n    compile(query.selectors[index])\n  }\n\n  return query\n}\n\n/**\n * @param {RuleSet} query\n * @returns {Rule}\n */\nfunction ruleSet(query) {\n  return rule(query.rule)\n}\n\n/**\n * @param {Rule} query\n * @returns {Rule}\n */\nfunction rule(query) {\n  const pseudos = query.pseudos || []\n  let index = -1\n\n  while (++index < pseudos.length) {\n    const pseudo = pseudos[index]\n\n    if (nth.has(pseudo.name)) {\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.value = nthCheck(pseudo.value)\n      // @ts-expect-error Patch a non-primitive type.\n      pseudo.valueType = 'function'\n    }\n  }\n\n  compile(query.rule)\n\n  return query\n}\n","/**\n * @typedef {import('./lib/types.js').Element} Element\n * @typedef {import('./lib/types.js').HastNode} HastNode\n * @typedef {import('./lib/types.js').Space} Space\n */\n\nimport {any} from './lib/any.js'\nimport {parse} from './lib/parse.js'\n\n/**\n * @param {string} selector\n * @param {HastNode} [node]\n * @param {Space} [space]\n * @returns {boolean}\n */\nexport function matches(selector, node, space) {\n  return Boolean(\n    any(parse(selector), node, {space, one: true, shallow: true})[0]\n  )\n}\n\n/**\n * @param {string} selector\n * @param {HastNode} [node]\n * @param {Space} [space]\n * @returns {Element|null}\n */\nexport function select(selector, node, space) {\n  return any(parse(selector), node, {space, one: true})[0] || null\n}\n\n/**\n * @param {string} selector\n * @param {HastNode} [node]\n * @param {Space} [space]\n * @returns {Array<Element>}\n */\nexport function selectAll(selector, node, space) {\n  return any(parse(selector), node, {space})\n}\n","import { Plugin } from 'unified';\nimport { Root, Element, ElementContent, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\nimport { selectAll } from 'hast-util-select';\nimport { Test } from 'unist-util-is';\n\n/** Get the node tree source code string */\nexport const getCodeString = (data: ElementContent[] = [], code: string = '') => {\n  data.forEach((node) => {\n    if (node.type === 'text') {\n      code += node.value;\n    } else if (node.type === 'element' && node.children && Array.isArray(node.children)) {\n      code += getCodeString(node.children);\n    }\n  });\n  return code;\n};\n\nexport type RehypeRewriteOptions = {\n  /**\n   * Select an element to be wrapped. Expects a string selector that can be passed to hast-util-select ([supported selectors](https://github.com/syntax-tree/hast-util-select/blob/master/readme.md#support)).\n   * If `selector` is not set then wrap will check for a body all elements.\n   */\n  selector?: string;\n  /** Rewrite Element. */\n  rewrite(node: Root | RootContent, index: number | null, parent: Root | Element | null): void;\n}\n\nconst remarkRewrite: Plugin<[RehypeRewriteOptions?], Root> = (options) => {\n  const { selector, rewrite } = options || {};\n  return (tree) => {\n    if (!rewrite || typeof rewrite !== 'function') return;\n    if (selector && typeof selector === 'string') {\n      const selected = selectAll(selector, tree);\n      if (selected && selected.length > 0) {\n        visit(tree, selected as unknown as Test, (node: Element, index, parent) => {\n          rewrite(node, index, parent);\n        });\n      }\n      return;\n    }\n\n    visit(tree, (node: Root | RootContent, index, parent) => {\n      rewrite(node, index, parent);\n    });\n  }\n}\n\nexport default remarkRewrite;\n","import { Element } from 'hast';\n\nexport const octiconLink: Element = {\n  type: 'element',\n  tagName: 'svg',\n  properties: {\n    className: 'octicon octicon-link',\n    viewBox: '0 0 16 16',\n    version: '1.1',\n    width: '16',\n    height: '16',\n    ariaHidden: 'true',\n  },\n  children: [\n    {\n      type: 'element',\n      tagName: 'path',\n      children: [],\n      properties: {\n        fillRule: 'evenodd',\n        d: 'M7.775 3.275a.75.75 0 001.06 1.06l1.25-1.25a2 2 0 112.83 2.83l-2.5 2.5a2 2 0 01-2.83 0 .75.75 0 00-1.06 1.06 3.5 3.5 0 004.95 0l2.5-2.5a3.5 3.5 0 00-4.95-4.95l-1.25 1.25zm-4.69 9.64a2 2 0 010-2.83l2.5-2.5a2 2 0 012.83 0 .75.75 0 001.06-1.06 3.5 3.5 0 00-4.95 0l-2.5 2.5a3.5 3.5 0 004.95 4.95l1.25-1.25a.75.75 0 00-1.06-1.06l-1.25 1.25a2 2 0 01-2.83 0z',\n      },\n    },\n  ],\n};\n","import { Plugin } from 'unified';\nimport { Root, RootContent } from 'hast';\nimport { visit } from 'unist-util-visit';\n\nexport interface ReservedMetaOptions {}\n\nexport const reservedMeta: Plugin<[ReservedMetaOptions?], Root> = (options = {}) => {\n  return (tree) => {\n    visit(tree, (node: Root | RootContent) => {\n      if (node.type === 'element' && node.tagName === 'code' && node.data && node.data.meta) {\n        node.properties = { ...node.properties, 'data-meta': String(node.data.meta) };\n      }\n    });\n  };\n};\n","import React, { useImperativeHandle } from 'react';\nimport ReactMarkdown, { Options } from 'react-markdown';\nimport { Element } from 'hast';\nimport { PluggableList } from 'unified';\nimport gfm from 'remark-gfm';\nimport slug from 'rehype-slug';\nimport headings from 'rehype-autolink-headings';\nimport rehypeRaw from 'rehype-raw';\nimport rehypeAttrs from 'rehype-attr';\nimport rehypeIgnore from 'rehype-ignore';\nimport rehypePrism from 'rehype-prism-plus';\nimport rehypeRewrite, { getCodeString, RehypeRewriteOptions } from 'rehype-rewrite';\nimport { octiconLink } from './nodes/octiconLink';\nimport { copyElement } from './nodes/copy';\nimport './styles/markdown.less';\n\nimport { reservedMeta } from './plugins/reservedMeta';\n\nexport interface MarkdownPreviewProps extends Omit<Options, 'children'> {\n  prefixCls?: string;\n  className?: string;\n  source?: string;\n  disableCopy?: boolean;\n  style?: React.CSSProperties;\n  pluginsFilter?: (type: 'rehype' | 'remark', plugin: PluggableList) => PluggableList;\n  warpperElement?: React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> & {\n    'data-color-mode'?: 'light' | 'dark';\n  };\n  onScroll?: (e: React.UIEvent<HTMLDivElement>) => void;\n  onMouseOver?: (e: React.MouseEvent<HTMLDivElement>) => void;\n  rehypeRewrite?: RehypeRewriteOptions['rewrite'];\n}\n\nexport interface MarkdownPreviewRef extends MarkdownPreviewProps {\n  mdp: React.RefObject<HTMLDivElement>;\n}\n\nexport default React.forwardRef<MarkdownPreviewRef, MarkdownPreviewProps>((props, ref) => {\n  const {\n    prefixCls = 'wmde-markdown wmde-markdown-color',\n    className,\n    source,\n    style,\n    disableCopy = false,\n    onScroll,\n    onMouseOver,\n    pluginsFilter,\n    rehypeRewrite: rewrite,\n    warpperElement = {},\n    ...other\n  } = props;\n  const mdp = React.createRef<HTMLDivElement>();\n  useImperativeHandle(ref, () => ({ ...props, mdp }), [mdp, props]);\n  const cls = `${prefixCls || ''} ${className || ''}`;\n\n  const rehypeRewriteHandle: RehypeRewriteOptions['rewrite'] = (node, index, parent) => {\n    if (node.type === 'element' && parent && parent.type === 'root' && /h(1|2|3|4|5|6)/.test(node.tagName)) {\n      const child = node.children && (node.children[0] as Element);\n      if (child && child.properties && child.properties.ariaHidden === 'true') {\n        child.properties = { class: 'anchor', ...child.properties };\n        child.children = [octiconLink];\n      }\n    }\n    if (node.type === 'element' && node.tagName === 'pre' && !disableCopy) {\n      const code = getCodeString(node.children);\n      node.children.push(copyElement(code));\n    }\n    rewrite && rewrite(node, index, parent);\n  };\n\n  const rehypePlugins: PluggableList = [\n    reservedMeta,\n    [rehypePrism, { ignoreMissing: true }],\n    rehypeRaw,\n    slug,\n    headings,\n    rehypeIgnore,\n    [rehypeRewrite, { rewrite: rehypeRewriteHandle }],\n    [rehypeAttrs, { properties: 'attr' }],\n    ...(other.rehypePlugins || []),\n  ];\n  const customProps: MarkdownPreviewProps = {\n    allowElement: (element, index, parent) => {\n      if (other.allowElement) {\n        return other.allowElement(element, index, parent);\n      }\n      return /^[A-Za-z0-9]+$/.test(element.tagName);\n    },\n  };\n  const remarkPlugins = [...(other.remarkPlugins || []), gfm];\n  return (\n    <div ref={mdp} onScroll={onScroll} onMouseOver={onMouseOver} {...warpperElement} className={cls} style={style}>\n      <ReactMarkdown\n        {...other}\n        {...customProps}\n        rehypePlugins={pluginsFilter ? pluginsFilter('rehype', rehypePlugins) : rehypePlugins}\n        remarkPlugins={pluginsFilter ? pluginsFilter('remark', remarkPlugins) : remarkPlugins}\n        children={source || ''}\n      />\n    </div>\n  );\n});\n","import { Element } from 'hast';\nimport copyTextToClipboard from '@uiw/copy-to-clipboard';\n\nexport function copyElement(str: string = ''): Element {\n  return {\n    type: 'element',\n    tagName: 'div',\n    properties: {\n      // @ts-ignore\n      onClick: (event) => {\n        const target = event.currentTarget || event.target;\n        target.classList.add('active');\n        copyTextToClipboard(target.dataset.code as string, function () {\n          setTimeout(() => {\n            target.classList.remove('active');\n          }, 2000);\n        });\n      },\n      'data-code': str,\n      class: 'copied',\n    },\n    children: [\n      {\n        type: 'element',\n        tagName: 'svg',\n        properties: {\n          className: 'octicon-copy',\n          ariaHidden: 'true',\n          viewBox: '0 0 16 16',\n          fill: 'currentColor',\n          height: 12,\n          width: 12,\n        },\n        children: [\n          {\n            type: 'element',\n            tagName: 'path',\n            properties: {\n              fillRule: 'evenodd',\n              d: 'M0 6.75C0 5.784.784 5 1.75 5h1.5a.75.75 0 010 1.5h-1.5a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-1.5a.75.75 0 011.5 0v1.5A1.75 1.75 0 019.25 16h-7.5A1.75 1.75 0 010 14.25v-7.5z',\n            },\n            children: [],\n          },\n          {\n            type: 'element',\n            tagName: 'path',\n            properties: {\n              fillRule: 'evenodd',\n              d: 'M5 1.75C5 .784 5.784 0 6.75 0h7.5C15.216 0 16 .784 16 1.75v7.5A1.75 1.75 0 0114.25 11h-7.5A1.75 1.75 0 015 9.25v-7.5zm1.75-.25a.25.25 0 00-.25.25v7.5c0 .138.112.25.25.25h7.5a.25.25 0 00.25-.25v-7.5a.25.25 0 00-.25-.25h-7.5z',\n            },\n            children: [],\n          },\n        ],\n      },\n      {\n        type: 'element',\n        tagName: 'svg',\n        properties: {\n          className: 'octicon-check',\n          ariaHidden: 'true',\n          viewBox: '0 0 16 16',\n          fill: 'currentColor',\n          height: 12,\n          width: 12,\n        },\n        children: [\n          {\n            type: 'element',\n            tagName: 'path',\n            properties: {\n              fillRule: 'evenodd',\n              d: 'M13.78 4.22a.75.75 0 010 1.06l-7.25 7.25a.75.75 0 01-1.06 0L2.22 9.28a.75.75 0 011.06-1.06L6 10.94l6.72-6.72a.75.75 0 011.06 0z',\n            },\n            children: [],\n          },\n        ],\n      },\n    ],\n  };\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = _default;\n\nfunction _default() {\n  return {\n    name: 'transform-remove-imports',\n    visitor: {\n      // https://babeljs.io/docs/en/babel-types#callexpression\n      CallExpression: function CallExpression(path, state) {\n        var node = path.node;\n\n        if (node.callee.name !== 'require') {\n          return;\n        }\n\n        var argument = node.arguments[0];\n        var moduleId = argument.value;\n        var options = state.opts;\n\n        if (options.test && !testMatches(moduleId, options.test)) {\n          return;\n        }\n\n        var parentType = path.parentPath.node.type; // In remove effects mode we should delete only requires that are\n        // simple expression statements\n\n        if (options.remove === 'effects' && parentType !== 'ExpressionStatement') {\n          return;\n        }\n\n        path.remove();\n      },\n      // https://babeljs.io/docs/en/babel-types#importdeclaration\n      ImportDeclaration: function ImportDeclaration(path, state) {\n        var node = path.node;\n        var source = node.source;\n        var opts = state.opts;\n\n        if (opts.removeAll) {\n          path.remove();\n          return;\n        }\n\n        if (!opts.test) {\n          console.warn('transform-remove-imports: \"test\" option should be specified');\n          return;\n        }\n        /** @var {string} importName */\n\n\n        var importName = source && source.value ? source.value : undefined;\n        var isMatch = testMatches(importName, opts.test); // https://github.com/uiwjs/babel-plugin-transform-remove-imports/issues/3\n\n        if (opts.remove === 'effects') {\n          if (node.specifiers && node.specifiers.length === 0 && importName && isMatch) {\n            path.remove();\n          }\n\n          return;\n        }\n\n        if (importName && isMatch) {\n          path.remove();\n        }\n      }\n    }\n  };\n}\n/**\n * Determines if the import matches the specified tests.\n *\n * @param {string} importName\n * @param {RegExp|RegExp[]|string|string[]} test\n * @returns {Boolean}\n */\n\n\nfunction testMatches(importName, test) {\n  // Normalizing tests\n  var tests = Array.isArray(test) ? test : [test]; // Finding out if at least one test matches\n\n  return tests.some(function (regex) {\n    if (typeof regex === 'string') {\n      regex = new RegExp(regex);\n    }\n\n    return regex.test(importName || '');\n  });\n}","module.exports = {\n\ttrueFunc: function trueFunc(){\n\t\treturn true;\n\t},\n\tfalseFunc: function falseFunc(){\n\t\treturn false;\n\t}\n};","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar parser_context_1 = require(\"./parser-context\");\nvar render_1 = require(\"./render\");\nvar CssSelectorParser = /** @class */ (function () {\n    function CssSelectorParser() {\n        this.pseudos = {};\n        this.attrEqualityMods = {};\n        this.ruleNestingOperators = {};\n        this.substitutesEnabled = false;\n    }\n    CssSelectorParser.prototype.registerSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_1 = pseudos; _a < pseudos_1.length; _a++) {\n            var pseudo = pseudos_1[_a];\n            this.pseudos[pseudo] = 'selector';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterSelectorPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_2 = pseudos; _a < pseudos_2.length; _a++) {\n            var pseudo = pseudos_2[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_3 = pseudos; _a < pseudos_3.length; _a++) {\n            var pseudo = pseudos_3[_a];\n            this.pseudos[pseudo] = 'numeric';\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNumericPseudos = function () {\n        var pseudos = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            pseudos[_i] = arguments[_i];\n        }\n        for (var _a = 0, pseudos_4 = pseudos; _a < pseudos_4.length; _a++) {\n            var pseudo = pseudos_4[_a];\n            delete this.pseudos[pseudo];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_1 = operators; _a < operators_1.length; _a++) {\n            var operator = operators_1[_a];\n            this.ruleNestingOperators[operator] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterNestingOperators = function () {\n        var operators = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            operators[_i] = arguments[_i];\n        }\n        for (var _a = 0, operators_2 = operators; _a < operators_2.length; _a++) {\n            var operator = operators_2[_a];\n            delete this.ruleNestingOperators[operator];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.registerAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_1 = mods; _a < mods_1.length; _a++) {\n            var mod = mods_1[_a];\n            this.attrEqualityMods[mod] = true;\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.unregisterAttrEqualityMods = function () {\n        var mods = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            mods[_i] = arguments[_i];\n        }\n        for (var _a = 0, mods_2 = mods; _a < mods_2.length; _a++) {\n            var mod = mods_2[_a];\n            delete this.attrEqualityMods[mod];\n        }\n        return this;\n    };\n    CssSelectorParser.prototype.enableSubstitutes = function () {\n        this.substitutesEnabled = true;\n        return this;\n    };\n    CssSelectorParser.prototype.disableSubstitutes = function () {\n        this.substitutesEnabled = false;\n        return this;\n    };\n    CssSelectorParser.prototype.parse = function (str) {\n        return parser_context_1.parseCssSelector(str, 0, this.pseudos, this.attrEqualityMods, this.ruleNestingOperators, this.substitutesEnabled);\n    };\n    CssSelectorParser.prototype.render = function (path) {\n        return render_1.renderEntity(path).trim();\n    };\n    return CssSelectorParser;\n}());\nexports.CssSelectorParser = CssSelectorParser;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction parseCssSelector(str, pos, pseudos, attrEqualityMods, ruleNestingOperators, substitutesEnabled) {\n    var l = str.length;\n    var chr = '';\n    function getStr(quote, escapeTable) {\n        var result = '';\n        pos++;\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (chr === quote) {\n                pos++;\n                return result;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                chr = str.charAt(pos);\n                var esc = void 0;\n                if (chr === quote) {\n                    result += quote;\n                }\n                else if ((esc = escapeTable[chr]) !== undefined) {\n                    result += esc;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                result += chr;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function getIdent() {\n        var result = '';\n        chr = str.charAt(pos);\n        while (pos < l) {\n            if (utils_1.isIdent(chr)) {\n                result += chr;\n            }\n            else if (chr === '\\\\') {\n                pos++;\n                if (pos >= l) {\n                    throw Error('Expected symbol but end of file reached.');\n                }\n                chr = str.charAt(pos);\n                if (utils_1.identSpecialChars[chr]) {\n                    result += chr;\n                }\n                else if (utils_1.isHex(chr)) {\n                    var hex = chr;\n                    pos++;\n                    chr = str.charAt(pos);\n                    while (utils_1.isHex(chr)) {\n                        hex += chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (chr === ' ') {\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    result += String.fromCharCode(parseInt(hex, 16));\n                    continue;\n                }\n                else {\n                    result += chr;\n                }\n            }\n            else {\n                return result;\n            }\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function skipWhitespace() {\n        chr = str.charAt(pos);\n        var result = false;\n        while (chr === ' ' || chr === \"\\t\" || chr === \"\\n\" || chr === \"\\r\" || chr === \"\\f\") {\n            result = true;\n            pos++;\n            chr = str.charAt(pos);\n        }\n        return result;\n    }\n    function parse() {\n        var res = parseSelector();\n        if (pos < l) {\n            throw Error('Rule expected but \"' + str.charAt(pos) + '\" found.');\n        }\n        return res;\n    }\n    function parseSelector() {\n        var selector = parseSingleSelector();\n        if (!selector) {\n            return null;\n        }\n        var res = selector;\n        chr = str.charAt(pos);\n        while (chr === ',') {\n            pos++;\n            skipWhitespace();\n            if (res.type !== 'selectors') {\n                res = {\n                    type: 'selectors',\n                    selectors: [selector]\n                };\n            }\n            selector = parseSingleSelector();\n            if (!selector) {\n                throw Error('Rule expected after \",\".');\n            }\n            res.selectors.push(selector);\n        }\n        return res;\n    }\n    function parseSingleSelector() {\n        skipWhitespace();\n        var selector = {\n            type: 'ruleSet'\n        };\n        var rule = parseRule();\n        if (!rule) {\n            return null;\n        }\n        var currentRule = selector;\n        while (rule) {\n            rule.type = 'rule';\n            currentRule.rule = rule;\n            currentRule = rule;\n            skipWhitespace();\n            chr = str.charAt(pos);\n            if (pos >= l || chr === ',' || chr === ')') {\n                break;\n            }\n            if (ruleNestingOperators[chr]) {\n                var op = chr;\n                pos++;\n                skipWhitespace();\n                rule = parseRule();\n                if (!rule) {\n                    throw Error('Rule expected after \"' + op + '\".');\n                }\n                rule.nestingOperator = op;\n            }\n            else {\n                rule = parseRule();\n                if (rule) {\n                    rule.nestingOperator = null;\n                }\n            }\n        }\n        return selector;\n    }\n    // @ts-ignore no-overlap\n    function parseRule() {\n        var rule = null;\n        while (pos < l) {\n            chr = str.charAt(pos);\n            if (chr === '*') {\n                pos++;\n                (rule = rule || {}).tagName = '*';\n            }\n            else if (utils_1.isIdentStart(chr) || chr === '\\\\') {\n                (rule = rule || {}).tagName = getIdent();\n            }\n            else if (chr === '.') {\n                pos++;\n                rule = rule || {};\n                (rule.classNames = rule.classNames || []).push(getIdent());\n            }\n            else if (chr === '#') {\n                pos++;\n                (rule = rule || {}).id = getIdent();\n            }\n            else if (chr === '[') {\n                pos++;\n                skipWhitespace();\n                var attr = {\n                    name: getIdent()\n                };\n                skipWhitespace();\n                // @ts-ignore\n                if (chr === ']') {\n                    pos++;\n                }\n                else {\n                    var operator = '';\n                    if (attrEqualityMods[chr]) {\n                        operator = chr;\n                        pos++;\n                        chr = str.charAt(pos);\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \"=\" but end of file reached.');\n                    }\n                    if (chr !== '=') {\n                        throw Error('Expected \"=\" but \"' + chr + '\" found.');\n                    }\n                    attr.operator = operator + '=';\n                    pos++;\n                    skipWhitespace();\n                    var attrValue = '';\n                    attr.valueType = 'string';\n                    // @ts-ignore\n                    if (chr === '\"') {\n                        attrValue = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (chr === '\\'') {\n                        attrValue = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                        // @ts-ignore\n                    }\n                    else if (substitutesEnabled && chr === '$') {\n                        pos++;\n                        attrValue = getIdent();\n                        attr.valueType = 'substitute';\n                    }\n                    else {\n                        while (pos < l) {\n                            if (chr === ']') {\n                                break;\n                            }\n                            attrValue += chr;\n                            pos++;\n                            chr = str.charAt(pos);\n                        }\n                        attrValue = attrValue.trim();\n                    }\n                    skipWhitespace();\n                    if (pos >= l) {\n                        throw Error('Expected \"]\" but end of file reached.');\n                    }\n                    if (chr !== ']') {\n                        throw Error('Expected \"]\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    attr.value = attrValue;\n                }\n                rule = rule || {};\n                (rule.attrs = rule.attrs || []).push(attr);\n            }\n            else if (chr === ':') {\n                pos++;\n                var pseudoName = getIdent();\n                var pseudo = {\n                    name: pseudoName\n                };\n                // @ts-ignore\n                if (chr === '(') {\n                    pos++;\n                    var value = '';\n                    skipWhitespace();\n                    if (pseudos[pseudoName] === 'selector') {\n                        pseudo.valueType = 'selector';\n                        value = parseSelector();\n                    }\n                    else {\n                        pseudo.valueType = pseudos[pseudoName] || 'string';\n                        // @ts-ignore\n                        if (chr === '\"') {\n                            value = getStr('\"', utils_1.doubleQuotesEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (chr === '\\'') {\n                            value = getStr('\\'', utils_1.singleQuoteEscapeChars);\n                            // @ts-ignore\n                        }\n                        else if (substitutesEnabled && chr === '$') {\n                            pos++;\n                            value = getIdent();\n                            pseudo.valueType = 'substitute';\n                        }\n                        else {\n                            while (pos < l) {\n                                if (chr === ')') {\n                                    break;\n                                }\n                                value += chr;\n                                pos++;\n                                chr = str.charAt(pos);\n                            }\n                            value = value.trim();\n                        }\n                        skipWhitespace();\n                    }\n                    if (pos >= l) {\n                        throw Error('Expected \")\" but end of file reached.');\n                    }\n                    if (chr !== ')') {\n                        throw Error('Expected \")\" but \"' + chr + '\" found.');\n                    }\n                    pos++;\n                    pseudo.value = value;\n                }\n                rule = rule || {};\n                (rule.pseudos = rule.pseudos || []).push(pseudo);\n            }\n            else {\n                break;\n            }\n        }\n        return rule;\n    }\n    return parse();\n}\nexports.parseCssSelector = parseCssSelector;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar utils_1 = require(\"./utils\");\nfunction renderEntity(entity) {\n    var res = '';\n    switch (entity.type) {\n        case 'ruleSet':\n            var currentEntity = entity.rule;\n            var parts = [];\n            while (currentEntity) {\n                if (currentEntity.nestingOperator) {\n                    parts.push(currentEntity.nestingOperator);\n                }\n                parts.push(renderEntity(currentEntity));\n                currentEntity = currentEntity.rule;\n            }\n            res = parts.join(' ');\n            break;\n        case 'selectors':\n            res = entity.selectors.map(renderEntity).join(', ');\n            break;\n        case 'rule':\n            if (entity.tagName) {\n                if (entity.tagName === '*') {\n                    res = '*';\n                }\n                else {\n                    res = utils_1.escapeIdentifier(entity.tagName);\n                }\n            }\n            if (entity.id) {\n                res += \"#\" + utils_1.escapeIdentifier(entity.id);\n            }\n            if (entity.classNames) {\n                res += entity.classNames.map(function (cn) {\n                    return \".\" + (utils_1.escapeIdentifier(cn));\n                }).join('');\n            }\n            if (entity.attrs) {\n                res += entity.attrs.map(function (attr) {\n                    if ('operator' in attr) {\n                        if (attr.valueType === 'substitute') {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + \"$\" + attr.value + \"]\";\n                        }\n                        else {\n                            return \"[\" + utils_1.escapeIdentifier(attr.name) + attr.operator + utils_1.escapeStr(attr.value) + \"]\";\n                        }\n                    }\n                    else {\n                        return \"[\" + utils_1.escapeIdentifier(attr.name) + \"]\";\n                    }\n                }).join('');\n            }\n            if (entity.pseudos) {\n                res += entity.pseudos.map(function (pseudo) {\n                    if (pseudo.valueType) {\n                        if (pseudo.valueType === 'selector') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + renderEntity(pseudo.value) + \")\";\n                        }\n                        else if (pseudo.valueType === 'substitute') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"($\" + pseudo.value + \")\";\n                        }\n                        else if (pseudo.valueType === 'numeric') {\n                            return \":\" + utils_1.escapeIdentifier(pseudo.name) + \"(\" + pseudo.value + \")\";\n                        }\n                        else {\n                            return (\":\" + utils_1.escapeIdentifier(pseudo.name) +\n                                \"(\" + utils_1.escapeIdentifier(pseudo.value) + \")\");\n                        }\n                    }\n                    else {\n                        return \":\" + utils_1.escapeIdentifier(pseudo.name);\n                    }\n                }).join('');\n            }\n            break;\n        default:\n            throw Error('Unknown entity type: \"' + entity.type + '\".');\n    }\n    return res;\n}\nexports.renderEntity = renderEntity;\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction isIdentStart(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c === '-') || (c === '_');\n}\nexports.isIdentStart = isIdentStart;\nfunction isIdent(c) {\n    return (c >= 'a' && c <= 'z') || (c >= 'A' && c <= 'Z') || (c >= '0' && c <= '9') || c === '-' || c === '_';\n}\nexports.isIdent = isIdent;\nfunction isHex(c) {\n    return (c >= 'a' && c <= 'f') || (c >= 'A' && c <= 'F') || (c >= '0' && c <= '9');\n}\nexports.isHex = isHex;\nfunction escapeIdentifier(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (exports.identSpecialChars[chr]) {\n            result += '\\\\' + chr;\n        }\n        else {\n            if (!(chr === '_' || chr === '-' ||\n                (chr >= 'A' && chr <= 'Z') ||\n                (chr >= 'a' && chr <= 'z') ||\n                (i !== 0 && chr >= '0' && chr <= '9'))) {\n                var charCode = chr.charCodeAt(0);\n                if ((charCode & 0xF800) === 0xD800) {\n                    var extraCharCode = s.charCodeAt(i++);\n                    if ((charCode & 0xFC00) !== 0xD800 || (extraCharCode & 0xFC00) !== 0xDC00) {\n                        throw Error('UCS-2(decode): illegal sequence');\n                    }\n                    charCode = ((charCode & 0x3FF) << 10) + (extraCharCode & 0x3FF) + 0x10000;\n                }\n                result += '\\\\' + charCode.toString(16) + ' ';\n            }\n            else {\n                result += chr;\n            }\n        }\n        i++;\n    }\n    return result;\n}\nexports.escapeIdentifier = escapeIdentifier;\nfunction escapeStr(s) {\n    var len = s.length;\n    var result = '';\n    var i = 0;\n    var replacement;\n    while (i < len) {\n        var chr = s.charAt(i);\n        if (chr === '\"') {\n            chr = '\\\\\"';\n        }\n        else if (chr === '\\\\') {\n            chr = '\\\\\\\\';\n        }\n        else if ((replacement = exports.strReplacementsRev[chr]) !== undefined) {\n            chr = replacement;\n        }\n        result += chr;\n        i++;\n    }\n    return \"\\\"\" + result + \"\\\"\";\n}\nexports.escapeStr = escapeStr;\nexports.identSpecialChars = {\n    '!': true,\n    '\"': true,\n    '#': true,\n    '$': true,\n    '%': true,\n    '&': true,\n    '\\'': true,\n    '(': true,\n    ')': true,\n    '*': true,\n    '+': true,\n    ',': true,\n    '.': true,\n    '/': true,\n    ';': true,\n    '<': true,\n    '=': true,\n    '>': true,\n    '?': true,\n    '@': true,\n    '[': true,\n    '\\\\': true,\n    ']': true,\n    '^': true,\n    '`': true,\n    '{': true,\n    '|': true,\n    '}': true,\n    '~': true\n};\nexports.strReplacementsRev = {\n    '\\n': '\\\\n',\n    '\\r': '\\\\r',\n    '\\t': '\\\\t',\n    '\\f': '\\\\f',\n    '\\v': '\\\\v'\n};\nexports.singleQuoteEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\\'': '\\''\n};\nexports.doubleQuotesEscapeChars = {\n    n: '\\n',\n    r: '\\r',\n    t: '\\t',\n    f: '\\f',\n    '\\\\': '\\\\',\n    '\"': '\"'\n};\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","const regex = require('./regex.js')\n\nmodule.exports = BananaSlug\n\nconst own = Object.hasOwnProperty\n\nfunction BananaSlug () {\n  const self = this\n\n  if (!(self instanceof BananaSlug)) return new BananaSlug()\n\n  self.reset()\n}\n\n/**\n * Generate a unique slug.\n * @param  {string} value String of text to slugify\n * @param  {boolean} [false] Keep the current case, otherwise make all lowercase\n * @return {string}       A unique slug string\n */\nBananaSlug.prototype.slug = function (value, maintainCase) {\n  const self = this\n  let slug = slugger(value, maintainCase === true)\n  const originalSlug = slug\n\n  while (own.call(self.occurrences, slug)) {\n    self.occurrences[originalSlug]++\n    slug = originalSlug + '-' + self.occurrences[originalSlug]\n  }\n\n  self.occurrences[slug] = 0\n\n  return slug\n}\n\n/**\n * Reset - Forget all previous slugs\n * @return void\n */\nBananaSlug.prototype.reset = function () {\n  this.occurrences = Object.create(null)\n}\n\nfunction slugger (string, maintainCase) {\n  if (typeof string !== 'string') return ''\n  if (!maintainCase) string = string.toLowerCase()\n  return string.replace(regex, '').replace(/ /g, '-')\n}\n\nBananaSlug.slug = slugger\n","// This module is generated by `script/`.\n/* eslint-disable no-control-regex, no-misleading-character-class, no-useless-escape */\nmodule.exports = /[\\0-\\x1F!-,\\.\\/:-@\\[-\\^`\\{-\\xA9\\xAB-\\xB4\\xB6-\\xB9\\xBB-\\xBF\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0378\\u0379\\u037E\\u0380-\\u0385\\u0387\\u038B\\u038D\\u03A2\\u03F6\\u0482\\u0530\\u0557\\u0558\\u055A-\\u055F\\u0589-\\u0590\\u05BE\\u05C0\\u05C3\\u05C6\\u05C8-\\u05CF\\u05EB-\\u05EE\\u05F3-\\u060F\\u061B-\\u061F\\u066A-\\u066D\\u06D4\\u06DD\\u06DE\\u06E9\\u06FD\\u06FE\\u0700-\\u070F\\u074B\\u074C\\u07B2-\\u07BF\\u07F6-\\u07F9\\u07FB\\u07FC\\u07FE\\u07FF\\u082E-\\u083F\\u085C-\\u085F\\u086B-\\u089F\\u08B5\\u08BE-\\u08D2\\u08E2\\u0964\\u0965\\u0970\\u0984\\u098D\\u098E\\u0991\\u0992\\u09A9\\u09B1\\u09B3-\\u09B5\\u09BA\\u09BB\\u09C5\\u09C6\\u09C9\\u09CA\\u09CF-\\u09D6\\u09D8-\\u09DB\\u09DE\\u09E4\\u09E5\\u09F2-\\u09FB\\u09FD\\u09FF\\u0A00\\u0A04\\u0A0B-\\u0A0E\\u0A11\\u0A12\\u0A29\\u0A31\\u0A34\\u0A37\\u0A3A\\u0A3B\\u0A3D\\u0A43-\\u0A46\\u0A49\\u0A4A\\u0A4E-\\u0A50\\u0A52-\\u0A58\\u0A5D\\u0A5F-\\u0A65\\u0A76-\\u0A80\\u0A84\\u0A8E\\u0A92\\u0AA9\\u0AB1\\u0AB4\\u0ABA\\u0ABB\\u0AC6\\u0ACA\\u0ACE\\u0ACF\\u0AD1-\\u0ADF\\u0AE4\\u0AE5\\u0AF0-\\u0AF8\\u0B00\\u0B04\\u0B0D\\u0B0E\\u0B11\\u0B12\\u0B29\\u0B31\\u0B34\\u0B3A\\u0B3B\\u0B45\\u0B46\\u0B49\\u0B4A\\u0B4E-\\u0B55\\u0B58-\\u0B5B\\u0B5E\\u0B64\\u0B65\\u0B70\\u0B72-\\u0B81\\u0B84\\u0B8B-\\u0B8D\\u0B91\\u0B96-\\u0B98\\u0B9B\\u0B9D\\u0BA0-\\u0BA2\\u0BA5-\\u0BA7\\u0BAB-\\u0BAD\\u0BBA-\\u0BBD\\u0BC3-\\u0BC5\\u0BC9\\u0BCE\\u0BCF\\u0BD1-\\u0BD6\\u0BD8-\\u0BE5\\u0BF0-\\u0BFF\\u0C0D\\u0C11\\u0C29\\u0C3A-\\u0C3C\\u0C45\\u0C49\\u0C4E-\\u0C54\\u0C57\\u0C5B-\\u0C5F\\u0C64\\u0C65\\u0C70-\\u0C7F\\u0C84\\u0C8D\\u0C91\\u0CA9\\u0CB4\\u0CBA\\u0CBB\\u0CC5\\u0CC9\\u0CCE-\\u0CD4\\u0CD7-\\u0CDD\\u0CDF\\u0CE4\\u0CE5\\u0CF0\\u0CF3-\\u0CFF\\u0D04\\u0D0D\\u0D11\\u0D45\\u0D49\\u0D4F-\\u0D53\\u0D58-\\u0D5E\\u0D64\\u0D65\\u0D70-\\u0D79\\u0D80\\u0D81\\u0D84\\u0D97-\\u0D99\\u0DB2\\u0DBC\\u0DBE\\u0DBF\\u0DC7-\\u0DC9\\u0DCB-\\u0DCE\\u0DD5\\u0DD7\\u0DE0-\\u0DE5\\u0DF0\\u0DF1\\u0DF4-\\u0E00\\u0E3B-\\u0E3F\\u0E4F\\u0E5A-\\u0E80\\u0E83\\u0E85\\u0E8B\\u0EA4\\u0EA6\\u0EBE\\u0EBF\\u0EC5\\u0EC7\\u0ECE\\u0ECF\\u0EDA\\u0EDB\\u0EE0-\\u0EFF\\u0F01-\\u0F17\\u0F1A-\\u0F1F\\u0F2A-\\u0F34\\u0F36\\u0F38\\u0F3A-\\u0F3D\\u0F48\\u0F6D-\\u0F70\\u0F85\\u0F98\\u0FBD-\\u0FC5\\u0FC7-\\u0FFF\\u104A-\\u104F\\u109E\\u109F\\u10C6\\u10C8-\\u10CC\\u10CE\\u10CF\\u10FB\\u1249\\u124E\\u124F\\u1257\\u1259\\u125E\\u125F\\u1289\\u128E\\u128F\\u12B1\\u12B6\\u12B7\\u12BF\\u12C1\\u12C6\\u12C7\\u12D7\\u1311\\u1316\\u1317\\u135B\\u135C\\u1360-\\u137F\\u1390-\\u139F\\u13F6\\u13F7\\u13FE-\\u1400\\u166D\\u166E\\u1680\\u169B-\\u169F\\u16EB-\\u16ED\\u16F9-\\u16FF\\u170D\\u1715-\\u171F\\u1735-\\u173F\\u1754-\\u175F\\u176D\\u1771\\u1774-\\u177F\\u17D4-\\u17D6\\u17D8-\\u17DB\\u17DE\\u17DF\\u17EA-\\u180A\\u180E\\u180F\\u181A-\\u181F\\u1879-\\u187F\\u18AB-\\u18AF\\u18F6-\\u18FF\\u191F\\u192C-\\u192F\\u193C-\\u1945\\u196E\\u196F\\u1975-\\u197F\\u19AC-\\u19AF\\u19CA-\\u19CF\\u19DA-\\u19FF\\u1A1C-\\u1A1F\\u1A5F\\u1A7D\\u1A7E\\u1A8A-\\u1A8F\\u1A9A-\\u1AA6\\u1AA8-\\u1AAF\\u1ABF-\\u1AFF\\u1B4C-\\u1B4F\\u1B5A-\\u1B6A\\u1B74-\\u1B7F\\u1BF4-\\u1BFF\\u1C38-\\u1C3F\\u1C4A-\\u1C4C\\u1C7E\\u1C7F\\u1C89-\\u1C8F\\u1CBB\\u1CBC\\u1CC0-\\u1CCF\\u1CD3\\u1CFB-\\u1CFF\\u1DFA\\u1F16\\u1F17\\u1F1E\\u1F1F\\u1F46\\u1F47\\u1F4E\\u1F4F\\u1F58\\u1F5A\\u1F5C\\u1F5E\\u1F7E\\u1F7F\\u1FB5\\u1FBD\\u1FBF-\\u1FC1\\u1FC5\\u1FCD-\\u1FCF\\u1FD4\\u1FD5\\u1FDC-\\u1FDF\\u1FED-\\u1FF1\\u1FF5\\u1FFD-\\u203E\\u2041-\\u2053\\u2055-\\u2070\\u2072-\\u207E\\u2080-\\u208F\\u209D-\\u20CF\\u20F1-\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F-\\u215F\\u2189-\\u24B5\\u24EA-\\u2BFF\\u2C2F\\u2C5F\\u2CE5-\\u2CEA\\u2CF4-\\u2CFF\\u2D26\\u2D28-\\u2D2C\\u2D2E\\u2D2F\\u2D68-\\u2D6E\\u2D70-\\u2D7E\\u2D97-\\u2D9F\\u2DA7\\u2DAF\\u2DB7\\u2DBF\\u2DC7\\u2DCF\\u2DD7\\u2DDF\\u2E00-\\u2E2E\\u2E30-\\u3004\\u3008-\\u3020\\u3030\\u3036\\u3037\\u303D-\\u3040\\u3097\\u3098\\u309B\\u309C\\u30A0\\u30FB\\u3100-\\u3104\\u3130\\u318F-\\u319F\\u31BB-\\u31EF\\u3200-\\u33FF\\u4DB6-\\u4DFF\\u9FF0-\\u9FFF\\uA48D-\\uA4CF\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA62C-\\uA63F\\uA673\\uA67E\\uA6F2-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA7C0\\uA7C1\\uA7C7-\\uA7F6\\uA828-\\uA83F\\uA874-\\uA87F\\uA8C6-\\uA8CF\\uA8DA-\\uA8DF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA954-\\uA95F\\uA97D-\\uA97F\\uA9C1-\\uA9CE\\uA9DA-\\uA9DF\\uA9FF\\uAA37-\\uAA3F\\uAA4E\\uAA4F\\uAA5A-\\uAA5F\\uAA77-\\uAA79\\uAAC3-\\uAADA\\uAADE\\uAADF\\uAAF0\\uAAF1\\uAAF7-\\uAB00\\uAB07\\uAB08\\uAB0F\\uAB10\\uAB17-\\uAB1F\\uAB27\\uAB2F\\uAB5B\\uAB68-\\uAB6F\\uABEB\\uABEE\\uABEF\\uABFA-\\uABFF\\uD7A4-\\uD7AF\\uD7C7-\\uD7CA\\uD7FC-\\uD7FF\\uE000-\\uF8FF\\uFA6E\\uFA6F\\uFADA-\\uFAFF\\uFB07-\\uFB12\\uFB18-\\uFB1C\\uFB29\\uFB37\\uFB3D\\uFB3F\\uFB42\\uFB45\\uFBB2-\\uFBD2\\uFD3E-\\uFD4F\\uFD90\\uFD91\\uFDC8-\\uFDEF\\uFDFC-\\uFDFF\\uFE10-\\uFE1F\\uFE30-\\uFE32\\uFE35-\\uFE4C\\uFE50-\\uFE6F\\uFE75\\uFEFD-\\uFF0F\\uFF1A-\\uFF20\\uFF3B-\\uFF3E\\uFF40\\uFF5B-\\uFF65\\uFFBF-\\uFFC1\\uFFC8\\uFFC9\\uFFD0\\uFFD1\\uFFD8\\uFFD9\\uFFDD-\\uFFFF]|\\uD800[\\uDC0C\\uDC27\\uDC3B\\uDC3E\\uDC4E\\uDC4F\\uDC5E-\\uDC7F\\uDCFB-\\uDD3F\\uDD75-\\uDDFC\\uDDFE-\\uDE7F\\uDE9D-\\uDE9F\\uDED1-\\uDEDF\\uDEE1-\\uDEFF\\uDF20-\\uDF2C\\uDF4B-\\uDF4F\\uDF7B-\\uDF7F\\uDF9E\\uDF9F\\uDFC4-\\uDFC7\\uDFD0\\uDFD6-\\uDFFF]|\\uD801[\\uDC9E\\uDC9F\\uDCAA-\\uDCAF\\uDCD4-\\uDCD7\\uDCFC-\\uDCFF\\uDD28-\\uDD2F\\uDD64-\\uDDFF\\uDF37-\\uDF3F\\uDF56-\\uDF5F\\uDF68-\\uDFFF]|\\uD802[\\uDC06\\uDC07\\uDC09\\uDC36\\uDC39-\\uDC3B\\uDC3D\\uDC3E\\uDC56-\\uDC5F\\uDC77-\\uDC7F\\uDC9F-\\uDCDF\\uDCF3\\uDCF6-\\uDCFF\\uDD16-\\uDD1F\\uDD3A-\\uDD7F\\uDDB8-\\uDDBD\\uDDC0-\\uDDFF\\uDE04\\uDE07-\\uDE0B\\uDE14\\uDE18\\uDE36\\uDE37\\uDE3B-\\uDE3E\\uDE40-\\uDE5F\\uDE7D-\\uDE7F\\uDE9D-\\uDEBF\\uDEC8\\uDEE7-\\uDEFF\\uDF36-\\uDF3F\\uDF56-\\uDF5F\\uDF73-\\uDF7F\\uDF92-\\uDFFF]|\\uD803[\\uDC49-\\uDC7F\\uDCB3-\\uDCBF\\uDCF3-\\uDCFF\\uDD28-\\uDD2F\\uDD3A-\\uDEFF\\uDF1D-\\uDF26\\uDF28-\\uDF2F\\uDF51-\\uDFDF\\uDFF7-\\uDFFF]|\\uD804[\\uDC47-\\uDC65\\uDC70-\\uDC7E\\uDCBB-\\uDCCF\\uDCE9-\\uDCEF\\uDCFA-\\uDCFF\\uDD35\\uDD40-\\uDD43\\uDD47-\\uDD4F\\uDD74\\uDD75\\uDD77-\\uDD7F\\uDDC5-\\uDDC8\\uDDCD-\\uDDCF\\uDDDB\\uDDDD-\\uDDFF\\uDE12\\uDE38-\\uDE3D\\uDE3F-\\uDE7F\\uDE87\\uDE89\\uDE8E\\uDE9E\\uDEA9-\\uDEAF\\uDEEB-\\uDEEF\\uDEFA-\\uDEFF\\uDF04\\uDF0D\\uDF0E\\uDF11\\uDF12\\uDF29\\uDF31\\uDF34\\uDF3A\\uDF45\\uDF46\\uDF49\\uDF4A\\uDF4E\\uDF4F\\uDF51-\\uDF56\\uDF58-\\uDF5C\\uDF64\\uDF65\\uDF6D-\\uDF6F\\uDF75-\\uDFFF]|\\uD805[\\uDC4B-\\uDC4F\\uDC5A-\\uDC5D\\uDC60-\\uDC7F\\uDCC6\\uDCC8-\\uDCCF\\uDCDA-\\uDD7F\\uDDB6\\uDDB7\\uDDC1-\\uDDD7\\uDDDE-\\uDDFF\\uDE41-\\uDE43\\uDE45-\\uDE4F\\uDE5A-\\uDE7F\\uDEB9-\\uDEBF\\uDECA-\\uDEFF\\uDF1B\\uDF1C\\uDF2C-\\uDF2F\\uDF3A-\\uDFFF]|\\uD806[\\uDC3B-\\uDC9F\\uDCEA-\\uDCFE\\uDD00-\\uDD9F\\uDDA8\\uDDA9\\uDDD8\\uDDD9\\uDDE2\\uDDE5-\\uDDFF\\uDE3F-\\uDE46\\uDE48-\\uDE4F\\uDE9A-\\uDE9C\\uDE9E-\\uDEBF\\uDEF9-\\uDFFF]|\\uD807[\\uDC09\\uDC37\\uDC41-\\uDC4F\\uDC5A-\\uDC71\\uDC90\\uDC91\\uDCA8\\uDCB7-\\uDCFF\\uDD07\\uDD0A\\uDD37-\\uDD39\\uDD3B\\uDD3E\\uDD48-\\uDD4F\\uDD5A-\\uDD5F\\uDD66\\uDD69\\uDD8F\\uDD92\\uDD99-\\uDD9F\\uDDAA-\\uDEDF\\uDEF7-\\uDFFF]|\\uD808[\\uDF9A-\\uDFFF]|\\uD809[\\uDC6F-\\uDC7F\\uDD44-\\uDFFF]|[\\uD80A\\uD80B\\uD80E-\\uD810\\uD812-\\uD819\\uD823-\\uD82B\\uD82D\\uD82E\\uD830-\\uD833\\uD837\\uD839\\uD83D-\\uD83F\\uD87B-\\uD87D\\uD87F-\\uDB3F\\uDB41-\\uDBFF][\\uDC00-\\uDFFF]|\\uD80D[\\uDC2F-\\uDFFF]|\\uD811[\\uDE47-\\uDFFF]|\\uD81A[\\uDE39-\\uDE3F\\uDE5F\\uDE6A-\\uDECF\\uDEEE\\uDEEF\\uDEF5-\\uDEFF\\uDF37-\\uDF3F\\uDF44-\\uDF4F\\uDF5A-\\uDF62\\uDF78-\\uDF7C\\uDF90-\\uDFFF]|\\uD81B[\\uDC00-\\uDE3F\\uDE80-\\uDEFF\\uDF4B-\\uDF4E\\uDF88-\\uDF8E\\uDFA0-\\uDFDF\\uDFE2\\uDFE4-\\uDFFF]|\\uD821[\\uDFF8-\\uDFFF]|\\uD822[\\uDEF3-\\uDFFF]|\\uD82C[\\uDD1F-\\uDD4F\\uDD53-\\uDD63\\uDD68-\\uDD6F\\uDEFC-\\uDFFF]|\\uD82F[\\uDC6B-\\uDC6F\\uDC7D-\\uDC7F\\uDC89-\\uDC8F\\uDC9A-\\uDC9C\\uDC9F-\\uDFFF]|\\uD834[\\uDC00-\\uDD64\\uDD6A-\\uDD6C\\uDD73-\\uDD7A\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDE41\\uDE45-\\uDFFF]|\\uD835[\\uDC55\\uDC9D\\uDCA0\\uDCA1\\uDCA3\\uDCA4\\uDCA7\\uDCA8\\uDCAD\\uDCBA\\uDCBC\\uDCC4\\uDD06\\uDD0B\\uDD0C\\uDD15\\uDD1D\\uDD3A\\uDD3F\\uDD45\\uDD47-\\uDD49\\uDD51\\uDEA6\\uDEA7\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3\\uDFCC\\uDFCD]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85-\\uDE9A\\uDEA0\\uDEB0-\\uDFFF]|\\uD838[\\uDC07\\uDC19\\uDC1A\\uDC22\\uDC25\\uDC2B-\\uDCFF\\uDD2D-\\uDD2F\\uDD3E\\uDD3F\\uDD4A-\\uDD4D\\uDD4F-\\uDEBF\\uDEFA-\\uDFFF]|\\uD83A[\\uDCC5-\\uDCCF\\uDCD7-\\uDCFF\\uDD4C-\\uDD4F\\uDD5A-\\uDFFF]|\\uD83B[\\uDC00-\\uDDFF\\uDE04\\uDE20\\uDE23\\uDE25\\uDE26\\uDE28\\uDE33\\uDE38\\uDE3A\\uDE3C-\\uDE41\\uDE43-\\uDE46\\uDE48\\uDE4A\\uDE4C\\uDE50\\uDE53\\uDE55\\uDE56\\uDE58\\uDE5A\\uDE5C\\uDE5E\\uDE60\\uDE63\\uDE65\\uDE66\\uDE6B\\uDE73\\uDE78\\uDE7D\\uDE7F\\uDE8A\\uDE9C-\\uDEA0\\uDEA4\\uDEAA\\uDEBC-\\uDFFF]|\\uD83C[\\uDC00-\\uDD2F\\uDD4A-\\uDD4F\\uDD6A-\\uDD6F\\uDD8A-\\uDFFF]|\\uD869[\\uDED7-\\uDEFF]|\\uD86D[\\uDF35-\\uDF3F]|\\uD86E[\\uDC1E\\uDC1F]|\\uD873[\\uDEA2-\\uDEAF]|\\uD87A[\\uDFE1-\\uDFFF]|\\uD87E[\\uDE1E-\\uDFFF]|\\uDB40[\\uDC00-\\uDCFF\\uDDF0-\\uDFFF]/g\n","// http://www.w3.org/TR/CSS21/grammar.html\n// https://github.com/visionmedia/css-parse/pull/49#issuecomment-30088027\nvar COMMENT_REGEX = /\\/\\*[^*]*\\*+([^/*][^*]*\\*+)*\\//g;\n\nvar NEWLINE_REGEX = /\\n/g;\nvar WHITESPACE_REGEX = /^\\s*/;\n\n// declaration\nvar PROPERTY_REGEX = /^(\\*?[-#/*\\\\\\w]+(\\[[0-9a-z_-]+\\])?)\\s*/;\nvar COLON_REGEX = /^:\\s*/;\nvar VALUE_REGEX = /^((?:'(?:\\\\'|.)*?'|\"(?:\\\\\"|.)*?\"|\\([^)]*?\\)|[^};])+)/;\nvar SEMICOLON_REGEX = /^[;\\s]*/;\n\n// https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/String/Trim#Polyfill\nvar TRIM_REGEX = /^\\s+|\\s+$/g;\n\n// strings\nvar NEWLINE = '\\n';\nvar FORWARD_SLASH = '/';\nvar ASTERISK = '*';\nvar EMPTY_STRING = '';\n\n// types\nvar TYPE_COMMENT = 'comment';\nvar TYPE_DECLARATION = 'declaration';\n\n/**\n * @param {String} style\n * @param {Object} [options]\n * @return {Object[]}\n * @throws {TypeError}\n * @throws {Error}\n */\nmodule.exports = function(style, options) {\n  if (typeof style !== 'string') {\n    throw new TypeError('First argument must be a string');\n  }\n\n  if (!style) return [];\n\n  options = options || {};\n\n  /**\n   * Positional.\n   */\n  var lineno = 1;\n  var column = 1;\n\n  /**\n   * Update lineno and column based on `str`.\n   *\n   * @param {String} str\n   */\n  function updatePosition(str) {\n    var lines = str.match(NEWLINE_REGEX);\n    if (lines) lineno += lines.length;\n    var i = str.lastIndexOf(NEWLINE);\n    column = ~i ? str.length - i : column + str.length;\n  }\n\n  /**\n   * Mark position and patch `node.position`.\n   *\n   * @return {Function}\n   */\n  function position() {\n    var start = { line: lineno, column: column };\n    return function(node) {\n      node.position = new Position(start);\n      whitespace();\n      return node;\n    };\n  }\n\n  /**\n   * Store position information for a node.\n   *\n   * @constructor\n   * @property {Object} start\n   * @property {Object} end\n   * @property {undefined|String} source\n   */\n  function Position(start) {\n    this.start = start;\n    this.end = { line: lineno, column: column };\n    this.source = options.source;\n  }\n\n  /**\n   * Non-enumerable source string.\n   */\n  Position.prototype.content = style;\n\n  var errorsList = [];\n\n  /**\n   * Error `msg`.\n   *\n   * @param {String} msg\n   * @throws {Error}\n   */\n  function error(msg) {\n    var err = new Error(\n      options.source + ':' + lineno + ':' + column + ': ' + msg\n    );\n    err.reason = msg;\n    err.filename = options.source;\n    err.line = lineno;\n    err.column = column;\n    err.source = style;\n\n    if (options.silent) {\n      errorsList.push(err);\n    } else {\n      throw err;\n    }\n  }\n\n  /**\n   * Match `re` and return captures.\n   *\n   * @param {RegExp} re\n   * @return {undefined|Array}\n   */\n  function match(re) {\n    var m = re.exec(style);\n    if (!m) return;\n    var str = m[0];\n    updatePosition(str);\n    style = style.slice(str.length);\n    return m;\n  }\n\n  /**\n   * Parse whitespace.\n   */\n  function whitespace() {\n    match(WHITESPACE_REGEX);\n  }\n\n  /**\n   * Parse comments.\n   *\n   * @param {Object[]} [rules]\n   * @return {Object[]}\n   */\n  function comments(rules) {\n    var c;\n    rules = rules || [];\n    while ((c = comment())) {\n      if (c !== false) {\n        rules.push(c);\n      }\n    }\n    return rules;\n  }\n\n  /**\n   * Parse comment.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function comment() {\n    var pos = position();\n    if (FORWARD_SLASH != style.charAt(0) || ASTERISK != style.charAt(1)) return;\n\n    var i = 2;\n    while (\n      EMPTY_STRING != style.charAt(i) &&\n      (ASTERISK != style.charAt(i) || FORWARD_SLASH != style.charAt(i + 1))\n    ) {\n      ++i;\n    }\n    i += 2;\n\n    if (EMPTY_STRING === style.charAt(i - 1)) {\n      return error('End of comment missing');\n    }\n\n    var str = style.slice(2, i - 2);\n    column += 2;\n    updatePosition(str);\n    style = style.slice(i);\n    column += 2;\n\n    return pos({\n      type: TYPE_COMMENT,\n      comment: str\n    });\n  }\n\n  /**\n   * Parse declaration.\n   *\n   * @return {Object}\n   * @throws {Error}\n   */\n  function declaration() {\n    var pos = position();\n\n    // prop\n    var prop = match(PROPERTY_REGEX);\n    if (!prop) return;\n    comment();\n\n    // :\n    if (!match(COLON_REGEX)) return error(\"property missing ':'\");\n\n    // val\n    var val = match(VALUE_REGEX);\n\n    var ret = pos({\n      type: TYPE_DECLARATION,\n      property: trim(prop[0].replace(COMMENT_REGEX, EMPTY_STRING)),\n      value: val\n        ? trim(val[0].replace(COMMENT_REGEX, EMPTY_STRING))\n        : EMPTY_STRING\n    });\n\n    // ;\n    match(SEMICOLON_REGEX);\n\n    return ret;\n  }\n\n  /**\n   * Parse declarations.\n   *\n   * @return {Object[]}\n   */\n  function declarations() {\n    var decls = [];\n\n    comments(decls);\n\n    // declarations\n    var decl;\n    while ((decl = declaration())) {\n      if (decl !== false) {\n        decls.push(decl);\n        comments(decls);\n      }\n    }\n\n    return decls;\n  }\n\n  whitespace();\n  return declarations();\n};\n\n/**\n * Trim `str`.\n *\n * @param {String} str\n * @return {String}\n */\nfunction trim(str) {\n  return str ? str.replace(TRIM_REGEX, EMPTY_STRING) : EMPTY_STRING;\n}\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","import { Parent, Node } from 'unist';\nimport webpack from 'webpack';\nimport remark from 'remark';\nimport { getTransformValue } from './transform';\nimport { Options, FUNNAME_PREFIX, CodeBlockItem, CodeBlockData } from '../';\n\n/**\n * Creates an object containing the parameters of the current URL.\n *\n * ```js\n * getURLParameters('name=Adam&surname=Smith');\n * // 👉 {name: 'Adam', surname: 'Smith'}\n * ```\n * @param url `name=Adam&surname=Smith`\n * @returns\n */\nexport const getURLParameters = (url: string): Record<string, string> =>\n  (url.match(/([^?=&]+)(=([^&]*))/g) || []).reduce(\n    (a: Record<string, string>, v: string) => ((a[v.slice(0, v.indexOf('='))] = v.slice(v.indexOf('=') + 1)), a),\n    {},\n  );\n\nexport interface MarkdownDataChild extends Node {\n  lang: string;\n  meta: string;\n  value: string;\n}\n\nexport interface MarkdownParseData extends Parent<MarkdownDataChild> {}\n\n/** 转换 代码*/\nexport const getProcessor = (source: string) => {\n  try {\n    const child = remark.parse(source) as MarkdownParseData;\n    return child.children;\n  } catch (err) {\n    console.warn(err);\n  }\n};\n\n/**\n * ```js\n * 'mdx:preview' => ''  // Empty\n * 'mdx:preview:demo12' => 'demo12' // return meta id => 'demo12'\n * ```\n * @param meta string\n * @returns string?\n */\nexport const getMetaId = (meta: string = '') => {\n  const [metaRaw = ''] = /mdx:(.[\\w|:]+)/i.exec(meta) || [];\n  return metaRaw.replace(/^mdx:preview:?/, '');\n};\n\n/**\n * ```js\n * isMeta('mdx:preview') => true\n * isMeta('mdx:preview:demo12') => true\n * isMeta('mdx:preview--demo12') => false\n * ```\n * @param meta\n * @returns boolean\n */\nexport const isMeta = (meta: string = '') => meta && meta.includes('mdx:preview');\n\n/** 获取需要渲染的代码块 **/\nexport function getCodeBlock(\n  child: MarkdownParseData['children'],\n  opts: Options = {},\n  resourcePath?: string,\n): CodeBlockData['data'] {\n  const { lang = ['jsx', 'tsx'] } = opts;\n  // 获取渲染部分\n  const codeBlock: Record<string | number, CodeBlockItem> = {};\n  child.forEach((item) => {\n    if (item && item.type === 'code' && lang.includes(item.lang)) {\n      const line = item.position.start.line;\n      const metaId = getMetaId(item.meta);\n      if (isMeta(item.meta)) {\n        let name = metaId || line;\n        const funName = `${resourcePath}.${FUNNAME_PREFIX}${name}`;\n        const returnCode = getTransformValue(item.value, `${funName}.${item.lang}`, opts);\n        codeBlock[name] = {\n          name,\n          meta: getURLParameters(item.meta),\n          code: returnCode,\n          language: item.lang,\n          value: item.value,\n        };\n      }\n    }\n  });\n  return codeBlock;\n}\n\n/**\n * `mdCodeModulesLoader` method for adding `markdown-react-code-preview-loader` to webpack config.\n * @param {webpack.Configuration} config webpack config\n * @param {string[]} lang Parsing language\n * @param {Options} option Loader Options\n * @returns {webpack.Configuration}\n */\nexport const mdCodeModulesLoader = (\n  config: webpack.Configuration,\n  lang?: string[],\n  option: Options = {},\n): webpack.Configuration => {\n  config.module.rules.forEach((ruleItem) => {\n    if (typeof ruleItem === 'object') {\n      if (ruleItem.oneOf) {\n        ruleItem.oneOf.unshift({\n          test: /.md$/,\n          use: [\n            {\n              loader: 'markdown-react-code-preview-loader',\n              options: { lang, ...option },\n            },\n          ],\n        });\n      }\n    }\n  });\n  return config;\n};\n","\n'use strict';\n\n\nvar encodeCache = {};\n\n\n// Create a lookup array where anything but characters in `chars` string\n// and alphanumeric chars is percent-encoded.\n//\nfunction getEncodeCache(exclude) {\n  var i, ch, cache = encodeCache[exclude];\n  if (cache) { return cache; }\n\n  cache = encodeCache[exclude] = [];\n\n  for (i = 0; i < 128; i++) {\n    ch = String.fromCharCode(i);\n\n    if (/^[0-9a-z]$/i.test(ch)) {\n      // always allow unencoded alphanumeric characters\n      cache.push(ch);\n    } else {\n      cache.push('%' + ('0' + i.toString(16).toUpperCase()).slice(-2));\n    }\n  }\n\n  for (i = 0; i < exclude.length; i++) {\n    cache[exclude.charCodeAt(i)] = exclude[i];\n  }\n\n  return cache;\n}\n\n\n// Encode unsafe characters with percent-encoding, skipping already\n// encoded sequences.\n//\n//  - string       - string to encode\n//  - exclude      - list of characters to ignore (in addition to a-zA-Z0-9)\n//  - keepEscaped  - don't encode '%' in a correct escape sequence (default: true)\n//\nfunction encode(string, exclude, keepEscaped) {\n  var i, l, code, nextCode, cache,\n      result = '';\n\n  if (typeof exclude !== 'string') {\n    // encode(string, keepEscaped)\n    keepEscaped  = exclude;\n    exclude = encode.defaultChars;\n  }\n\n  if (typeof keepEscaped === 'undefined') {\n    keepEscaped = true;\n  }\n\n  cache = getEncodeCache(exclude);\n\n  for (i = 0, l = string.length; i < l; i++) {\n    code = string.charCodeAt(i);\n\n    if (keepEscaped && code === 0x25 /* % */ && i + 2 < l) {\n      if (/^[0-9a-f]{2}$/i.test(string.slice(i + 1, i + 3))) {\n        result += string.slice(i, i + 3);\n        i += 2;\n        continue;\n      }\n    }\n\n    if (code < 128) {\n      result += cache[code];\n      continue;\n    }\n\n    if (code >= 0xD800 && code <= 0xDFFF) {\n      if (code >= 0xD800 && code <= 0xDBFF && i + 1 < l) {\n        nextCode = string.charCodeAt(i + 1);\n        if (nextCode >= 0xDC00 && nextCode <= 0xDFFF) {\n          result += encodeURIComponent(string[i] + string[i + 1]);\n          i++;\n          continue;\n        }\n      }\n      result += '%EF%BF%BD';\n      continue;\n    }\n\n    result += encodeURIComponent(string[i]);\n  }\n\n  return result;\n}\n\nencode.defaultChars   = \";/?:@&=+$,-_.!~*'()#\";\nencode.componentChars = \"-_.!~*'()\";\n\n\nmodule.exports = encode;\n","/**\n * @param {string} string    The string to parse\n * @returns {Array<number>}  Returns an energetic array.\n */\nfunction parsePart(string) {\n  let res = [];\n  let m;\n\n  for (let str of string.split(\",\").map((str) => str.trim())) {\n    // just a number\n    if (/^-?\\d+$/.test(str)) {\n      res.push(parseInt(str, 10));\n    } else if (\n      (m = str.match(/^(-?\\d+)(-|\\.\\.\\.?|\\u2025|\\u2026|\\u22EF)(-?\\d+)$/))\n    ) {\n      // 1-5 or 1..5 (equivalent) or 1...5 (doesn't include 5)\n      let [_, lhs, sep, rhs] = m;\n\n      if (lhs && rhs) {\n        lhs = parseInt(lhs);\n        rhs = parseInt(rhs);\n        const incr = lhs < rhs ? 1 : -1;\n\n        // Make it inclusive by moving the right 'stop-point' away by one.\n        if (sep === \"-\" || sep === \"..\" || sep === \"\\u2025\") rhs += incr;\n\n        for (let i = lhs; i !== rhs; i += incr) res.push(i);\n      }\n    }\n  }\n\n  return res;\n}\n\nexports.default = parsePart;\nmodule.exports = parsePart;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","import React from 'react';\n\nexport const ExpandIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path\n        d=\"M8.64 5.23a1 1 0 0 0-1.41.13l-5 6a1 1 0 0 0 0 1.27l4.83 6a1 1 0 0 0 .78.37 1 1 0 0 0 .78-1.63L4.29 12l4.48-5.36a1 1 0 0 0-.13-1.41zm13.14 6.14-4.78-6a1 1 0 0 0-1.41-.15 1 1 0 0 0-.15 1.41L19.71 12l-4.48 5.37a1 1 0 0 0 .13 1.41A1 1 0 0 0 16 19a1 1 0 0 0 .77-.36l5-6a1 1 0 0 0 .01-1.27z\"\n        data-name=\"code\"\n      />\n    </svg>\n  );\n};\nexport const CopyIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"currentColor\">\n      <path d=\"M18 21h-6a3 3 0 0 1-3-3v-6a3 3 0 0 1 3-3h6a3 3 0 0 1 3 3v6a3 3 0 0 1-3 3zm-6-10a1 1 0 0 0-1 1v6a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1v-6a1 1 0 0 0-1-1z\" />\n      <path d=\"M9.73 15H5.67A2.68 2.68 0 0 1 3 12.33V5.67A2.68 2.68 0 0 1 5.67 3h6.66A2.68 2.68 0 0 1 15 5.67V9.4h-2V5.67a.67.67 0 0 0-.67-.67H5.67a.67.67 0 0 0-.67.67v6.66a.67.67 0 0 0 .67.67h4.06z\" />\n    </svg>\n  );\n};\nexport const CopySuccessIcon = (props: React.SVGProps<SVGSVGElement>) => {\n  return (\n    <svg viewBox=\"0 0 24 24\" fill=\"green\">\n      <path d=\"M9.71 11.29a1 1 0 0 0-1.42 1.42l3 3A1 1 0 0 0 12 16a1 1 0 0 0 .72-.34l7-8a1 1 0 0 0-1.5-1.32L12 13.54z\" />\n      <path d=\"M21 11a1 1 0 0 0-1 1 8 8 0 0 1-8 8A8 8 0 0 1 6.33 6.36 7.93 7.93 0 0 1 12 4a8.79 8.79 0 0 1 1.9.22 1 1 0 1 0 .47-1.94A10.54 10.54 0 0 0 12 2a10 10 0 0 0-7 17.09A9.93 9.93 0 0 0 12 22a10 10 0 0 0 10-10 1 1 0 0 0-1-1z\" />\n    </svg>\n  );\n};\n","import { useState } from 'react';\nimport copyTextToClipboard from '@uiw/copy-to-clipboard';\nimport { CopyIcon, CopySuccessIcon } from './icons';\n\nexport const Copied = (props: { text?: string }) => {\n  const [copied, setCopied] = useState(false);\n  const handle = () => {\n    setCopied(true);\n    copyTextToClipboard(props.text || '', () => {\n      const timer = setTimeout(() => {\n        setCopied(false);\n        clearTimeout(timer);\n      }, 2000);\n    });\n  };\n  return <button onClick={handle}>{copied ? <CopySuccessIcon /> : <CopyIcon />}</button>;\n};\n","import { forwardRef, useState } from 'react';\nimport { Copied } from './Copied';\nimport { ExpandIcon } from './icons';\nimport './styles.css';\n\nexport interface CodeLayoutProps extends React.DetailedHTMLProps<React.HTMLAttributes<HTMLDivElement>, HTMLDivElement> {\n  prefixCls?: string;\n  /** 原始 代码块 渲染 **/\n  code?: React.ReactNode;\n  text?: string;\n  /** Title section, you can also place buttons **/\n  toolbar?: React.ReactNode;\n  /** 额外内容，展示 toolbar 右侧内容 */\n  toolbarExtra?: React.ReactNode;\n  disableToolbar?: boolean;\n  disableCode?: boolean;\n  disablePreview?: boolean;\n  /** 禁用方格背景 */\n  disableCheckered?: boolean;\n  /** Configure the preview background color. */\n  background?: string;\n  /**\n   * 是否需要边框\n   * @default true\n   */\n  bordered?: boolean;\n  /**\n   * 是否显示复制按钮\n   * @default true\n   */\n  copied?: boolean;\n}\n\n/** react-code-preview-layout 缩写 */\nconst PRE_FIX = 'w-rcpl';\n\nconst CodeLayout = forwardRef<HTMLDivElement, CodeLayoutProps>((props, ref) => {\n  const [showCode, setShowCode] = useState(false);\n  const {\n    children,\n    toolbar,\n    bordered = true,\n    disableCheckered = false,\n    disablePreview = false,\n    disableCode = false,\n    disableToolbar = false,\n    text = '',\n    background = '',\n    copied = true,\n    toolbarExtra,\n    code,\n    prefixCls = PRE_FIX,\n    className,\n    ...other\n  } = props;\n  const cls = [prefixCls, className, bordered ? `w-bordered` : null, disableCheckered ? `w-disable-checkered` : null]\n    .filter(Boolean)\n    .join(' ')\n    .trim();\n\n  const style: React.CSSProperties = !background\n    ? {}\n    : {\n        backgroundColor: background,\n        backgroundImage: 'none',\n      };\n  return (\n    <div ref={ref} {...other} className={cls}>\n      {!disablePreview && (\n        <div className={`${prefixCls}-preview`} style={style}>\n          {children}\n        </div>\n      )}\n      {!disableToolbar && (\n        <div className={`${prefixCls}-toolbar`}>\n          <div className={`${prefixCls}-title`}>{toolbar}</div>\n          <div className={`${prefixCls}-extra`}>\n            {toolbarExtra}\n            {copied && <Copied text={text} />}\n            {!disableCode && (\n              <button onClick={() => setShowCode(!showCode)}>\n                <ExpandIcon />\n              </button>\n            )}\n          </div>\n        </div>\n      )}\n      {!disableCode && <div className={`${prefixCls}-code ${showCode ? 'w-display' : 'w-hidden'}`}>{code}</div>}\n    </div>\n  );\n});\n\nexport default CodeLayout;\n","/**\n * @license React\n * react-is.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var b=Symbol.for(\"react.element\"),c=Symbol.for(\"react.portal\"),d=Symbol.for(\"react.fragment\"),e=Symbol.for(\"react.strict_mode\"),f=Symbol.for(\"react.profiler\"),g=Symbol.for(\"react.provider\"),h=Symbol.for(\"react.context\"),k=Symbol.for(\"react.server_context\"),l=Symbol.for(\"react.forward_ref\"),m=Symbol.for(\"react.suspense\"),n=Symbol.for(\"react.suspense_list\"),p=Symbol.for(\"react.memo\"),q=Symbol.for(\"react.lazy\"),t=Symbol.for(\"react.offscreen\"),u;u=Symbol.for(\"react.module.reference\");\nfunction v(a){if(\"object\"===typeof a&&null!==a){var r=a.$$typeof;switch(r){case b:switch(a=a.type,a){case d:case f:case e:case m:case n:return a;default:switch(a=a&&a.$$typeof,a){case k:case h:case l:case q:case p:case g:return a;default:return r}}case c:return r}}}exports.ContextConsumer=h;exports.ContextProvider=g;exports.Element=b;exports.ForwardRef=l;exports.Fragment=d;exports.Lazy=q;exports.Memo=p;exports.Portal=c;exports.Profiler=f;exports.StrictMode=e;exports.Suspense=m;\nexports.SuspenseList=n;exports.isAsyncMode=function(){return!1};exports.isConcurrentMode=function(){return!1};exports.isContextConsumer=function(a){return v(a)===h};exports.isContextProvider=function(a){return v(a)===g};exports.isElement=function(a){return\"object\"===typeof a&&null!==a&&a.$$typeof===b};exports.isForwardRef=function(a){return v(a)===l};exports.isFragment=function(a){return v(a)===d};exports.isLazy=function(a){return v(a)===q};exports.isMemo=function(a){return v(a)===p};\nexports.isPortal=function(a){return v(a)===c};exports.isProfiler=function(a){return v(a)===f};exports.isStrictMode=function(a){return v(a)===e};exports.isSuspense=function(a){return v(a)===m};exports.isSuspenseList=function(a){return v(a)===n};\nexports.isValidElementType=function(a){return\"string\"===typeof a||\"function\"===typeof a||a===d||a===f||a===e||a===m||a===n||a===t||\"object\"===typeof a&&null!==a&&(a.$$typeof===q||a.$$typeof===p||a.$$typeof===g||a.$$typeof===h||a.$$typeof===l||a.$$typeof===u||void 0!==a.getModuleId)?!0:!1};exports.typeOf=v;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-is.production.min.js');\n} else {\n  module.exports = require('./cjs/react-is.development.js');\n}\n","'use strict'\n\nmodule.exports = stringify\n\nvar toMarkdown = require('mdast-util-to-markdown')\n\nfunction stringify(options) {\n  var self = this\n\n  this.Compiler = compile\n\n  function compile(tree) {\n    return toMarkdown(\n      tree,\n      Object.assign({}, self.data('settings'), options, {\n        // Note: this option is not in the readme.\n        // The goal is for it to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: self.data('toMarkdownExtensions') || []\n      })\n    )\n  }\n}\n","'use strict'\n\nmodule.exports = longestStreak\n\n// Get the count of the longest repeating streak of `character` in `value`.\nfunction longestStreak(value, character) {\n  var count = 0\n  var maximum = 0\n  var expected\n  var index\n\n  if (typeof character !== 'string' || character.length !== 1) {\n    throw new Error('Expected character')\n  }\n\n  value = String(value)\n  index = value.indexOf(character)\n  expected = index\n\n  while (index !== -1) {\n    count++\n\n    if (index === expected) {\n      if (count > maximum) {\n        maximum = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + 1\n    index = value.indexOf(character, expected)\n  }\n\n  return maximum\n}\n","module.exports = require('./lib')\n","module.exports = configure\n\nfunction configure(base, extension) {\n  var index = -1\n  var key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      base[key] = base[key].concat(extension[key] || [])\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n","module.exports = blockquote\n\nvar flow = require('../util/container-flow')\nvar indentLines = require('../util/indent-lines')\n\nfunction blockquote(node, _, context) {\n  var exit = context.enter('blockquote')\n  var value = indentLines(flow(node, context), map)\n  exit()\n  return value\n}\n\nfunction map(line, index, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","module.exports = hardBreak\n\nvar patternInScope = require('../util/pattern-in-scope')\n\nfunction hardBreak(node, _, context, safe) {\n  var index = -1\n\n  while (++index < context.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      context.unsafe[index].character === '\\n' &&\n      patternInScope(context.stack, context.unsafe[index])\n    ) {\n      return /[ \\t]/.test(safe.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","module.exports = code\n\nvar repeat = require('repeat-string')\nvar streak = require('longest-streak')\nvar formatCodeAsIndented = require('../util/format-code-as-indented')\nvar checkFence = require('../util/check-fence')\nvar indentLines = require('../util/indent-lines')\nvar safe = require('../util/safe')\n\nfunction code(node, _, context) {\n  var marker = checkFence(context)\n  var raw = node.value || ''\n  var suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n  var value\n  var sequence\n  var exit\n  var subexit\n\n  if (formatCodeAsIndented(node, context)) {\n    exit = context.enter('codeIndented')\n    value = indentLines(raw, map)\n  } else {\n    sequence = repeat(marker, Math.max(streak(raw, marker) + 1, 3))\n    exit = context.enter('codeFenced')\n    value = sequence\n\n    if (node.lang) {\n      subexit = context.enter('codeFencedLang' + suffix)\n      value += safe(context, node.lang, {\n        before: '`',\n        after: ' ',\n        encode: ['`']\n      })\n      subexit()\n    }\n\n    if (node.lang && node.meta) {\n      subexit = context.enter('codeFencedMeta' + suffix)\n      value +=\n        ' ' +\n        safe(context, node.meta, {\n          before: ' ',\n          after: '\\n',\n          encode: ['`']\n        })\n      subexit()\n    }\n\n    value += '\\n'\n\n    if (raw) {\n      value += raw + '\\n'\n    }\n\n    value += sequence\n  }\n\n  exit()\n  return value\n}\n\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","module.exports = definition\n\nvar association = require('../util/association')\nvar checkQuote = require('../util/check-quote')\nvar safe = require('../util/safe')\n\nfunction definition(node, _, context) {\n  var marker = checkQuote(context)\n  var suffix = marker === '\"' ? 'Quote' : 'Apostrophe'\n  var exit = context.enter('definition')\n  var subexit = context.enter('label')\n  var value =\n    '[' + safe(context, association(node), {before: '[', after: ']'}) + ']: '\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there’s whitespace, enclosed is prettier.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {before: ' ', after: ' '})\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      marker +\n      safe(context, node.title, {before: marker, after: marker}) +\n      marker\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","module.exports = emphasis\nemphasis.peek = emphasisPeek\n\nvar checkEmphasis = require('../util/check-emphasis')\nvar phrasing = require('../util/container-phrasing')\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\nfunction emphasis(node, _, context) {\n  var marker = checkEmphasis(context)\n  var exit = context.enter('emphasis')\n  var value = phrasing(node, context, {before: marker, after: marker})\n  exit()\n  return marker + value + marker\n}\n\nfunction emphasisPeek(node, _, context) {\n  return context.options.emphasis || '*'\n}\n","module.exports = heading\n\nvar repeat = require('repeat-string')\nvar formatHeadingAsSetext = require('../util/format-heading-as-setext')\nvar phrasing = require('../util/container-phrasing')\n\nfunction heading(node, _, context) {\n  var rank = Math.max(Math.min(6, node.depth || 1), 1)\n  var exit\n  var subexit\n  var value\n  var sequence\n\n  if (formatHeadingAsSetext(node, context)) {\n    exit = context.enter('headingSetext')\n    subexit = context.enter('phrasing')\n    value = phrasing(node, context, {before: '\\n', after: '\\n'})\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      repeat(\n        rank === 1 ? '=' : '-',\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  sequence = repeat('#', rank)\n  exit = context.enter('headingAtx')\n  subexit = context.enter('phrasing')\n  value = phrasing(node, context, {before: '# ', after: '\\n'})\n  value = value ? sequence + ' ' + value : sequence\n  if (context.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","module.exports = html\nhtml.peek = htmlPeek\n\nfunction html(node) {\n  return node.value || ''\n}\n\nfunction htmlPeek() {\n  return '<'\n}\n","module.exports = imageReference\nimageReference.peek = imageReferencePeek\n\nvar association = require('../util/association')\nvar safe = require('../util/safe')\n\nfunction imageReference(node, _, context) {\n  var type = node.referenceType\n  var exit = context.enter('imageReference')\n  var subexit = context.enter('label')\n  var alt = safe(context, node.alt, {before: '[', after: ']'})\n  var value = '![' + alt + ']'\n  var reference\n  var stack\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  reference = safe(context, association(node), {before: '[', after: ']'})\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += '[' + reference + ']'\n  } else if (type !== 'shortcut') {\n    value += '[]'\n  }\n\n  return value\n}\n\nfunction imageReferencePeek() {\n  return '!'\n}\n","module.exports = image\nimage.peek = imagePeek\n\nvar checkQuote = require('../util/check-quote')\nvar safe = require('../util/safe')\n\nfunction image(node, _, context) {\n  var quote = checkQuote(context)\n  var suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  var exit = context.enter('image')\n  var subexit = context.enter('label')\n  var value = '![' + safe(context, node.alt, {before: '[', after: ']'}) + ']('\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // Or if there’s markdown whitespace or an eol, enclose.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {\n      before: '(',\n      after: node.title ? ' ' : ')'\n    })\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      quote +\n      safe(context, node.title, {before: quote, after: quote}) +\n      quote\n    subexit()\n  }\n\n  value += ')'\n  exit()\n\n  return value\n}\n\nfunction imagePeek() {\n  return '!'\n}\n","exports.blockquote = require('./blockquote')\nexports.break = require('./break')\nexports.code = require('./code')\nexports.definition = require('./definition')\nexports.emphasis = require('./emphasis')\nexports.hardBreak = require('./break')\nexports.heading = require('./heading')\nexports.html = require('./html')\nexports.image = require('./image')\nexports.imageReference = require('./image-reference')\nexports.inlineCode = require('./inline-code')\nexports.link = require('./link')\nexports.linkReference = require('./link-reference')\nexports.list = require('./list')\nexports.listItem = require('./list-item')\nexports.paragraph = require('./paragraph')\nexports.root = require('./root')\nexports.strong = require('./strong')\nexports.text = require('./text')\nexports.thematicBreak = require('./thematic-break')\n","module.exports = inlineCode\ninlineCode.peek = inlineCodePeek\n\nvar patternCompile = require('../util/pattern-compile')\n\nfunction inlineCode(node, parent, context) {\n  var value = node.value || ''\n  var sequence = '`'\n  var index = -1\n  var pattern\n  var expression\n  var match\n  var position\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    (/[ \\r\\n`]/.test(value.charAt(0)) ||\n      /[ \\r\\n`]/.test(value.charAt(value.length - 1)))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\nfunction inlineCodePeek() {\n  return '`'\n}\n","module.exports = linkReference\nlinkReference.peek = linkReferencePeek\n\nvar association = require('../util/association')\nvar phrasing = require('../util/container-phrasing')\nvar safe = require('../util/safe')\n\nfunction linkReference(node, _, context) {\n  var type = node.referenceType\n  var exit = context.enter('linkReference')\n  var subexit = context.enter('label')\n  var text = phrasing(node, context, {before: '[', after: ']'})\n  var value = '[' + text + ']'\n  var reference\n  var stack\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  stack = context.stack\n  context.stack = []\n  subexit = context.enter('reference')\n  reference = safe(context, association(node), {before: '[', after: ']'})\n  subexit()\n  context.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += '[' + reference + ']'\n  } else if (type !== 'shortcut') {\n    value += '[]'\n  }\n\n  return value\n}\n\nfunction linkReferencePeek() {\n  return '['\n}\n","module.exports = link\nlink.peek = linkPeek\n\nvar checkQuote = require('../util/check-quote')\nvar formatLinkAsAutolink = require('../util/format-link-as-autolink')\nvar phrasing = require('../util/container-phrasing')\nvar safe = require('../util/safe')\n\nfunction link(node, _, context) {\n  var quote = checkQuote(context)\n  var suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  var exit\n  var subexit\n  var value\n  var stack\n\n  if (formatLinkAsAutolink(node, context)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    stack = context.stack\n    context.stack = []\n    exit = context.enter('autolink')\n    value = '<' + phrasing(node, context, {before: '<', after: '>'}) + '>'\n    exit()\n    context.stack = stack\n    return value\n  }\n\n  exit = context.enter('link')\n  subexit = context.enter('label')\n  value = '[' + phrasing(node, context, {before: '[', after: ']'}) + ']('\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // Or if there’s markdown whitespace or an eol, enclose.\n    /[ \\t\\r\\n]/.test(node.url)\n  ) {\n    subexit = context.enter('destinationLiteral')\n    value += '<' + safe(context, node.url, {before: '<', after: '>'}) + '>'\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = context.enter('destinationRaw')\n    value += safe(context, node.url, {\n      before: '(',\n      after: node.title ? ' ' : ')'\n    })\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = context.enter('title' + suffix)\n    value +=\n      ' ' +\n      quote +\n      safe(context, node.title, {before: quote, after: quote}) +\n      quote\n    subexit()\n  }\n\n  value += ')'\n\n  exit()\n  return value\n}\n\nfunction linkPeek(node, _, context) {\n  return formatLinkAsAutolink(node, context) ? '<' : '['\n}\n","module.exports = listItem\n\nvar repeat = require('repeat-string')\nvar checkBullet = require('../util/check-bullet')\nvar checkListItemIndent = require('../util/check-list-item-indent')\nvar flow = require('../util/container-flow')\nvar indentLines = require('../util/indent-lines')\n\nfunction listItem(node, parent, context) {\n  var bullet = checkBullet(context)\n  var listItemIndent = checkListItemIndent(context)\n  var size\n  var value\n  var exit\n\n  if (parent && parent.ordered) {\n    bullet =\n      (parent.start > -1 ? parent.start : 1) +\n      (context.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      '.'\n  }\n\n  size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' && ((parent && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  exit = context.enter('listItem')\n  value = indentLines(flow(node, context), map)\n  exit()\n\n  return value\n\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : repeat(' ', size)) + line\n    }\n\n    return (blank ? bullet : bullet + repeat(' ', size - bullet.length)) + line\n  }\n}\n","module.exports = list\n\nvar flow = require('../util/container-flow')\n\nfunction list(node, _, context) {\n  var exit = context.enter('list')\n  var value = flow(node, context)\n  exit()\n  return value\n}\n","module.exports = paragraph\n\nvar phrasing = require('../util/container-phrasing')\n\nfunction paragraph(node, _, context) {\n  var exit = context.enter('paragraph')\n  var subexit = context.enter('phrasing')\n  var value = phrasing(node, context, {before: '\\n', after: '\\n'})\n  subexit()\n  exit()\n  return value\n}\n","module.exports = root\n\nvar flow = require('../util/container-flow')\n\nfunction root(node, _, context) {\n  return flow(node, context)\n}\n","module.exports = strong\nstrong.peek = strongPeek\n\nvar checkStrong = require('../util/check-strong')\nvar phrasing = require('../util/container-phrasing')\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\nfunction strong(node, _, context) {\n  var marker = checkStrong(context)\n  var exit = context.enter('strong')\n  var value = phrasing(node, context, {before: marker, after: marker})\n  exit()\n  return marker + marker + value + marker + marker\n}\n\nfunction strongPeek(node, _, context) {\n  return context.options.strong || '*'\n}\n","module.exports = text\n\nvar safe = require('../util/safe')\n\nfunction text(node, parent, context, safeOptions) {\n  return safe(context, node.value, safeOptions)\n}\n","module.exports = thematicBreak\n\nvar repeat = require('repeat-string')\nvar checkRepeat = require('../util/check-rule-repeat')\nvar checkRule = require('../util/check-rule')\n\nfunction thematicBreak(node, parent, context) {\n  var value = repeat(\n    checkRule(context) + (context.options.ruleSpaces ? ' ' : ''),\n    checkRepeat(context)\n  )\n\n  return context.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","module.exports = toMarkdown\n\nvar zwitch = require('zwitch')\nvar configure = require('./configure')\nvar defaultHandlers = require('./handle')\nvar defaultJoin = require('./join')\nvar defaultUnsafe = require('./unsafe')\n\nfunction toMarkdown(tree, options) {\n  var settings = options || {}\n  var context = {\n    enter: enter,\n    stack: [],\n    unsafe: [],\n    join: [],\n    handlers: {},\n    options: {}\n  }\n  var result\n\n  configure(context, {\n    unsafe: defaultUnsafe,\n    join: defaultJoin,\n    handlers: defaultHandlers\n  })\n  configure(context, settings)\n\n  if (context.options.tightDefinitions) {\n    context.join = [joinDefinition].concat(context.join)\n  }\n\n  context.handle = zwitch('type', {\n    invalid: invalid,\n    unknown: unknown,\n    handlers: context.handlers\n  })\n\n  result = context.handle(tree, null, context, {before: '\\n', after: '\\n'})\n\n  if (\n    result &&\n    result.charCodeAt(result.length - 1) !== 10 &&\n    result.charCodeAt(result.length - 1) !== 13\n  ) {\n    result += '\\n'\n  }\n\n  return result\n\n  function enter(name) {\n    context.stack.push(name)\n    return exit\n\n    function exit() {\n      context.stack.pop()\n    }\n  }\n}\n\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\nfunction unknown(node) {\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\nfunction joinDefinition(left, right) {\n  // No blank line between adjacent definitions.\n  if (left.type === 'definition' && left.type === right.type) {\n    return 0\n  }\n}\n","module.exports = [joinDefaults]\n\nvar formatCodeAsIndented = require('./util/format-code-as-indented')\nvar formatHeadingAsSetext = require('./util/format-heading-as-setext')\n\nfunction joinDefaults(left, right, parent, context) {\n  if (\n    // Two lists with the same marker.\n    (right.type === 'list' &&\n      right.type === left.type &&\n      Boolean(left.ordered) === Boolean(right.ordered)) ||\n    // Indented code after list or another indented code.\n    (right.type === 'code' &&\n      formatCodeAsIndented(right, context) &&\n      (left.type === 'list' ||\n        (left.type === right.type && formatCodeAsIndented(left, context))))\n  ) {\n    return false\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if (typeof parent.spread === 'boolean') {\n    if (\n      left.type === 'paragraph' &&\n      // Two paragraphs.\n      (left.type === right.type ||\n        right.type === 'definition' ||\n        // Paragraph followed by a setext heading.\n        (right.type === 'heading' && formatHeadingAsSetext(right, context)))\n    ) {\n      return\n    }\n\n    return parent.spread ? 1 : 0\n  }\n}\n","module.exports = [\n  {\n    character: '\\t',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  {\n    character: '\\r',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: '\\n',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: ' ',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  // An exclamation mark can start an image, if it is followed by a link or\n  // a link reference.\n  {character: '!', after: '\\\\[', inConstruct: 'phrasing'},\n  // A quote can break out of a title.\n  {character: '\"', inConstruct: 'titleQuote'},\n  // A number sign could start an ATX heading if it starts a line.\n  {atBreak: true, character: '#'},\n  {character: '#', inConstruct: 'headingAtx', after: '(?:[\\r\\n]|$)'},\n  // Dollar sign and percentage are not used in markdown.\n  // An ampersand could start a character reference.\n  {character: '&', after: '[#A-Za-z]', inConstruct: 'phrasing'},\n  // An apostrophe can break out of a title.\n  {character: \"'\", inConstruct: 'titleApostrophe'},\n  // A left paren could break out of a destination raw.\n  {character: '(', inConstruct: 'destinationRaw'},\n  {before: '\\\\]', character: '(', inConstruct: 'phrasing'},\n  // A right paren could start a list item or break out of a destination\n  // raw.\n  {atBreak: true, before: '\\\\d+', character: ')'},\n  {character: ')', inConstruct: 'destinationRaw'},\n  // An asterisk can start thematic breaks, list items, emphasis, strong.\n  {atBreak: true, character: '*'},\n  {character: '*', inConstruct: 'phrasing'},\n  // A plus sign could start a list item.\n  {atBreak: true, character: '+'},\n  // A dash can start thematic breaks, list items, and setext heading\n  // underlines.\n  {atBreak: true, character: '-'},\n  // A dot could start a list item.\n  {atBreak: true, before: '\\\\d+', character: '.', after: '(?:[ \\t\\r\\n]|$)'},\n  // Slash, colon, and semicolon are not used in markdown for constructs.\n  // A less than can start html (flow or text) or an autolink.\n  // HTML could start with an exclamation mark (declaration, cdata, comment),\n  // slash (closing tag), question mark (instruction), or a letter (tag).\n  // An autolink also starts with a letter.\n  // Finally, it could break out of a destination literal.\n  {atBreak: true, character: '<', after: '[!/?A-Za-z]'},\n  {character: '<', after: '[!/?A-Za-z]', inConstruct: 'phrasing'},\n  {character: '<', inConstruct: 'destinationLiteral'},\n  // An equals to can start setext heading underlines.\n  {atBreak: true, character: '='},\n  // A greater than can start block quotes and it can break out of a\n  // destination literal.\n  {atBreak: true, character: '>'},\n  {character: '>', inConstruct: 'destinationLiteral'},\n  // Question mark and at sign are not used in markdown for constructs.\n  // A left bracket can start definitions, references, labels,\n  {atBreak: true, character: '['},\n  {character: '[', inConstruct: ['phrasing', 'label', 'reference']},\n  // A backslash can start an escape (when followed by punctuation) or a\n  // hard break (when followed by an eol).\n  // Note: typical escapes are handled in `safe`!\n  {character: '\\\\', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  // A right bracket can exit labels.\n  {\n    character: ']',\n    inConstruct: ['label', 'reference']\n  },\n  // Caret is not used in markdown for constructs.\n  // An underscore can start emphasis, strong, or a thematic break.\n  {atBreak: true, character: '_'},\n  {before: '[^A-Za-z]', character: '_', inConstruct: 'phrasing'},\n  {character: '_', after: '[^A-Za-z]', inConstruct: 'phrasing'},\n  // A grave accent can start code (fenced or text), or it can break out of\n  // a grave accent code fence.\n  {atBreak: true, character: '`'},\n  {\n    character: '`',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedMetaGraveAccent',\n      'phrasing'\n    ]\n  },\n  // Left brace, vertical bar, right brace are not used in markdown for\n  // constructs.\n  // A tilde can start code (fenced).\n  {atBreak: true, character: '~'}\n]\n","module.exports = association\n\nvar decode = require('parse-entities/decode-entity')\n\nvar characterEscape = /\\\\([!-/:-@[-`{-~])/g\nvar characterReference = /&(#(\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n\n// The `label` of an association is the string value: character escapes and\n// references work, and casing is intact.\n// The `identifier` is used to match one association to another: controversially,\n// character escapes and references don’t work in this matching: `&copy;` does\n// not match `©`, and `\\+` does not match `+`.\n// But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n// matches `a b`.\n// So, we do prefer the label when figuring out how we’re going to serialize:\n// it has whitespace, casing, and we can ignore most useless character escapes\n// and all character references.\nfunction association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return node.identifier\n    .replace(characterEscape, '$1')\n    .replace(characterReference, decodeIfPossible)\n}\n\nfunction decodeIfPossible($0, $1) {\n  return decode($1) || $0\n}\n","module.exports = checkBullet\n\nfunction checkBullet(context) {\n  var marker = context.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkEmphasis\n\nfunction checkEmphasis(context) {\n  var marker = context.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkFence\n\nfunction checkFence(context) {\n  var marker = context.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkListItemIndent\n\nfunction checkListItemIndent(context) {\n  var style = context.options.listItemIndent || 'tab'\n\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","module.exports = checkQuote\n\nfunction checkQuote(context) {\n  var marker = context.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkRule\n\nfunction checkRule(context) {\n  var repetition = context.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","module.exports = checkRule\n\nfunction checkRule(context) {\n  var marker = context.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","module.exports = checkStrong\n\nfunction checkStrong(context) {\n  var marker = context.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","module.exports = flow\n\nvar repeat = require('repeat-string')\n\nfunction flow(parent, context) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    results.push(\n      context.handle(child, parent, context, {before: '\\n', after: '\\n'})\n    )\n\n    if (index + 1 < children.length) {\n      results.push(between(child, children[index + 1]))\n    }\n  }\n\n  return results.join('')\n\n  function between(left, right) {\n    var index = -1\n    var result\n\n    while (++index < context.join.length) {\n      result = context.join[index](left, right, parent, context)\n\n      if (result === true || result === 1) {\n        break\n      }\n\n      if (typeof result === 'number') {\n        return repeat('\\n', 1 + Number(result))\n      }\n\n      if (result === false) {\n        return '\\n\\n<!---->\\n\\n'\n      }\n    }\n\n    return '\\n\\n'\n  }\n}\n","module.exports = phrasing\n\nfunction phrasing(parent, context, safeOptions) {\n  var children = parent.children || []\n  var results = []\n  var index = -1\n  var before = safeOptions.before\n  var after\n  var handle\n  var child\n\n  while (++index < children.length) {\n    child = children[index]\n\n    if (index + 1 < children.length) {\n      handle = context.handle.handlers[children[index + 1].type]\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, context, {\n            before: '',\n            after: ''\n          }).charAt(0)\n        : ''\n    } else {\n      after = safeOptions.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n    }\n\n    results.push(\n      context.handle(child, parent, context, {\n        before: before,\n        after: after\n      })\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  return results.join('')\n}\n","module.exports = formatCodeAsIndented\n\nfunction formatCodeAsIndented(node, context) {\n  return (\n    !context.options.fences &&\n    node.value &&\n    // If there’s no info…\n    !node.lang &&\n    // And there’s a non-whitespace character…\n    /[^ \\r\\n]/.test(node.value) &&\n    // And the value doesn’t start or end in a blank…\n    !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","module.exports = formatHeadingAsSetext\n\nvar toString = require('mdast-util-to-string')\n\nfunction formatHeadingAsSetext(node, context) {\n  return (\n    context.options.setext && (!node.depth || node.depth < 3) && toString(node)\n  )\n}\n","module.exports = formatLinkAsAutolink\n\nvar toString = require('mdast-util-to-string')\n\nfunction formatLinkAsAutolink(node, context) {\n  var raw = toString(node)\n\n  return (\n    !context.options.resourceLink &&\n    // If there’s a url…\n    node.url &&\n    // And there’s a no title…\n    !node.title &&\n    // And the content of `node` is a single text node…\n    node.children &&\n    node.children.length === 1 &&\n    node.children[0].type === 'text' &&\n    // And if the url is the same as the content…\n    (raw === node.url || 'mailto:' + raw === node.url) &&\n    // And that starts w/ a protocol…\n    /^[a-z][a-z+.-]+:/i.test(node.url) &&\n    // And that doesn’t contain ASCII control codes (character escapes and\n    // references don’t work) or angle brackets…\n    !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","module.exports = indentLines\n\nvar eol = /\\r?\\n|\\r/g\n\nfunction indentLines(value, map) {\n  var result = []\n  var start = 0\n  var line = 0\n  var match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","module.exports = patternCompile\n\nfunction patternCompile(pattern) {\n  var before\n  var after\n\n  if (!pattern._compiled) {\n    before = pattern.before ? '(?:' + pattern.before + ')' : ''\n    after = pattern.after ? '(?:' + pattern.after + ')' : ''\n\n    if (pattern.atBreak) {\n      before = '[\\\\r\\\\n][\\\\t ]*' + before\n    }\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (after || ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","module.exports = patternInScope\n\nfunction patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct)\n  )\n}\n\nfunction listInScope(stack, list, none) {\n  var index\n\n  if (!list) {\n    return none\n  }\n\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  index = -1\n\n  while (++index < list.length) {\n    if (stack.indexOf(list[index]) !== -1) {\n      return true\n    }\n  }\n\n  return false\n}\n","module.exports = safe\n\nvar patternCompile = require('./pattern-compile')\nvar patternInScope = require('./pattern-in-scope')\n\nfunction safe(context, input, config) {\n  var value = (config.before || '') + (input || '') + (config.after || '')\n  var positions = []\n  var result = []\n  var infos = {}\n  var index = -1\n  var before\n  var after\n  var position\n  var pattern\n  var expression\n  var match\n  var start\n  var end\n\n  while (++index < context.unsafe.length) {\n    pattern = context.unsafe[index]\n\n    if (!patternInScope(context.stack, pattern)) {\n      continue\n    }\n\n    expression = patternCompile(pattern)\n\n    while ((match = expression.exec(value))) {\n      before = 'before' in pattern || pattern.atBreak\n      after = 'after' in pattern\n\n      position = match.index + (before ? match[1].length : 0)\n\n      if (positions.indexOf(position) === -1) {\n        positions.push(position)\n        infos[position] = {before: before, after: after}\n      } else {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  start = config.before ? config.before.length : 0\n  end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    position = positions[index]\n\n    if (\n      // Character before or after matched:\n      position < start ||\n      position >= end\n    ) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      position + 1 < end &&\n      positions[index + 1] === position + 1 &&\n      infos[position].after &&\n      !infos[position + 1].before &&\n      !infos[position + 1].after\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || config.encode.indexOf(value.charAt(position)) === -1)\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\nfunction numerical(a, b) {\n  return a - b\n}\n\nfunction escapeBackslashes(value, after) {\n  var expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  var positions = []\n  var results = []\n  var index = -1\n  var start = 0\n  var whole = value + after\n  var match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","'use strict'\n\nmodule.exports = toString\n\n// Get the text content of a node.\n// Prefer the node’s plain-text fields, otherwise serialize its children,\n// and if the given value is an array, serialize the nodes in it.\nfunction toString(node) {\n  return (\n    (node &&\n      (node.value ||\n        node.alt ||\n        node.title ||\n        ('children' in node && all(node.children)) ||\n        ('length' in node && all(node)))) ||\n    ''\n  )\n}\n\nfunction all(values) {\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = toString(values[index])\n  }\n\n  return result.join('')\n}\n","'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","'use strict'\n\nmodule.exports = factory\n\nvar noop = Function.prototype\nvar own = {}.hasOwnProperty\n\n// Handle values based on a property.\nfunction factory(key, options) {\n  var settings = options || {}\n\n  function one(value) {\n    var fn = one.invalid\n    var handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      fn = own.call(handlers, value[key]) ? handlers[value[key]] : one.unknown\n    }\n\n    return (fn || noop).apply(this, arguments)\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  return one\n}\n","'use strict'\n\nvar unified = require('unified')\nvar parse = require('remark-parse')\nvar stringify = require('remark-stringify')\n\nmodule.exports = unified().use(parse).use(stringify).freeze()\n","'use strict'\n\nmodule.exports = bail\n\nfunction bail(err) {\n  if (err) {\n    throw err\n  }\n}\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict'\n\nmodule.exports = fromMarkdown\n\n// These three are compiled away in the `dist/`\n\nvar toString = require('mdast-util-to-string')\nvar assign = require('micromark/dist/constant/assign')\nvar own = require('micromark/dist/constant/has-own-property')\nvar normalizeIdentifier = require('micromark/dist/util/normalize-identifier')\nvar safeFromInt = require('micromark/dist/util/safe-from-int')\nvar parser = require('micromark/dist/parse')\nvar preprocessor = require('micromark/dist/preprocess')\nvar postprocess = require('micromark/dist/postprocess')\nvar decode = require('parse-entities/decode-entity')\nvar stringifyPosition = require('unist-util-stringify-position')\n\nfunction fromMarkdown(value, encoding, options) {\n  if (typeof encoding !== 'string') {\n    options = encoding\n    encoding = undefined\n  }\n\n  return compiler(options)(\n    postprocess(\n      parser(options).document().write(preprocessor()(value, encoding, true))\n    )\n  )\n}\n\n// Note this compiler only understand complete buffering, not streaming.\nfunction compiler(options) {\n  var settings = options || {}\n  var config = configure(\n    {\n      transforms: [],\n      canContainEols: [\n        'emphasis',\n        'fragment',\n        'heading',\n        'paragraph',\n        'strong'\n      ],\n\n      enter: {\n        autolink: opener(link),\n        autolinkProtocol: onenterdata,\n        autolinkEmail: onenterdata,\n        atxHeading: opener(heading),\n        blockQuote: opener(blockQuote),\n        characterEscape: onenterdata,\n        characterReference: onenterdata,\n        codeFenced: opener(codeFlow),\n        codeFencedFenceInfo: buffer,\n        codeFencedFenceMeta: buffer,\n        codeIndented: opener(codeFlow, buffer),\n        codeText: opener(codeText, buffer),\n        codeTextData: onenterdata,\n        data: onenterdata,\n        codeFlowValue: onenterdata,\n        definition: opener(definition),\n        definitionDestinationString: buffer,\n        definitionLabelString: buffer,\n        definitionTitleString: buffer,\n        emphasis: opener(emphasis),\n        hardBreakEscape: opener(hardBreak),\n        hardBreakTrailing: opener(hardBreak),\n        htmlFlow: opener(html, buffer),\n        htmlFlowData: onenterdata,\n        htmlText: opener(html, buffer),\n        htmlTextData: onenterdata,\n        image: opener(image),\n        label: buffer,\n        link: opener(link),\n        listItem: opener(listItem),\n        listItemValue: onenterlistitemvalue,\n        listOrdered: opener(list, onenterlistordered),\n        listUnordered: opener(list),\n        paragraph: opener(paragraph),\n        reference: onenterreference,\n        referenceString: buffer,\n        resourceDestinationString: buffer,\n        resourceTitleString: buffer,\n        setextHeading: opener(heading),\n        strong: opener(strong),\n        thematicBreak: opener(thematicBreak)\n      },\n\n      exit: {\n        atxHeading: closer(),\n        atxHeadingSequence: onexitatxheadingsequence,\n        autolink: closer(),\n        autolinkEmail: onexitautolinkemail,\n        autolinkProtocol: onexitautolinkprotocol,\n        blockQuote: closer(),\n        characterEscapeValue: onexitdata,\n        characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n        characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n        characterReferenceValue: onexitcharacterreferencevalue,\n        codeFenced: closer(onexitcodefenced),\n        codeFencedFence: onexitcodefencedfence,\n        codeFencedFenceInfo: onexitcodefencedfenceinfo,\n        codeFencedFenceMeta: onexitcodefencedfencemeta,\n        codeFlowValue: onexitdata,\n        codeIndented: closer(onexitcodeindented),\n        codeText: closer(onexitcodetext),\n        codeTextData: onexitdata,\n        data: onexitdata,\n        definition: closer(),\n        definitionDestinationString: onexitdefinitiondestinationstring,\n        definitionLabelString: onexitdefinitionlabelstring,\n        definitionTitleString: onexitdefinitiontitlestring,\n        emphasis: closer(),\n        hardBreakEscape: closer(onexithardbreak),\n        hardBreakTrailing: closer(onexithardbreak),\n        htmlFlow: closer(onexithtmlflow),\n        htmlFlowData: onexitdata,\n        htmlText: closer(onexithtmltext),\n        htmlTextData: onexitdata,\n        image: closer(onexitimage),\n        label: onexitlabel,\n        labelText: onexitlabeltext,\n        lineEnding: onexitlineending,\n        link: closer(onexitlink),\n        listItem: closer(),\n        listOrdered: closer(),\n        listUnordered: closer(),\n        paragraph: closer(),\n        referenceString: onexitreferencestring,\n        resourceDestinationString: onexitresourcedestinationstring,\n        resourceTitleString: onexitresourcetitlestring,\n        resource: onexitresource,\n        setextHeading: closer(onexitsetextheading),\n        setextHeadingLineSequence: onexitsetextheadinglinesequence,\n        setextHeadingText: onexitsetextheadingtext,\n        strong: closer(),\n        thematicBreak: closer()\n      }\n    },\n\n    settings.mdastExtensions || []\n  )\n\n  var data = {}\n\n  return compile\n\n  function compile(events) {\n    var tree = {type: 'root', children: []}\n    var stack = [tree]\n    var tokenStack = []\n    var listStack = []\n    var index = -1\n    var handler\n    var listStart\n\n    var context = {\n      stack: stack,\n      tokenStack: tokenStack,\n      config: config,\n      enter: enter,\n      exit: exit,\n      buffer: buffer,\n      resume: resume,\n      setData: setData,\n      getData: getData\n    }\n\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          listStart = listStack.pop(index)\n          index = prepareList(events, listStart, index)\n        }\n      }\n    }\n\n    index = -1\n\n    while (++index < events.length) {\n      handler = config[events[index][0]]\n\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          assign({sliceSerialize: events[index][2].sliceSerialize}, context),\n          events[index][1]\n        )\n      }\n    }\n\n    if (tokenStack.length) {\n      throw new Error(\n        'Cannot close document, a token (`' +\n          tokenStack[tokenStack.length - 1].type +\n          '`, ' +\n          stringifyPosition({\n            start: tokenStack[tokenStack.length - 1].start,\n            end: tokenStack[tokenStack.length - 1].end\n          }) +\n          ') is still open'\n      )\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length ? events[0][1].start : {line: 1, column: 1, offset: 0}\n      ),\n\n      end: point(\n        events.length\n          ? events[events.length - 2][1].end\n          : {line: 1, column: 1, offset: 0}\n      )\n    }\n\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n\n    return tree\n  }\n\n  function prepareList(events, start, length) {\n    var index = start - 1\n    var containerBalance = -1\n    var listSpread = false\n    var listItem\n    var tailIndex\n    var lineIndex\n    var tailEvent\n    var event\n    var firstBlankLineIndex\n    var atMarker\n\n    while (++index <= length) {\n      event = events[index]\n\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          tailIndex = index\n          lineIndex = undefined\n\n          while (tailIndex--) {\n            tailEvent = events[tailIndex]\n\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = point(\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            _spread: false,\n            start: point(event[1].start)\n          }\n\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  function getData(key) {\n    return data[key]\n  }\n\n  function point(d) {\n    return {line: d.line, column: d.column, offset: d.offset}\n  }\n\n  function opener(create, and) {\n    return open\n\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  function buffer() {\n    this.stack.push({type: 'fragment', children: []})\n  }\n\n  function enter(node, token) {\n    this.stack[this.stack.length - 1].children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push(token)\n    node.position = {start: point(token.start)}\n    return node\n  }\n\n  function closer(and) {\n    return close\n\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  function exit(token) {\n    var node = this.stack.pop()\n    var open = this.tokenStack.pop()\n\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): it’s not open'\n      )\n    } else if (open.type !== token.type) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({start: token.start, end: token.end}) +\n          '): a different token (`' +\n          open.type +\n          '`, ' +\n          stringifyPosition({start: open.start, end: open.end}) +\n          ') is open'\n      )\n    }\n\n    node.position.end = point(token.end)\n    return node\n  }\n\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      this.stack[this.stack.length - 2].start = parseInt(\n        this.sliceSerialize(token),\n        10\n      )\n\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  function onexitcodefencedfenceinfo() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].lang = data\n  }\n\n  function onexitcodefencedfencemeta() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].meta = data\n  }\n\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  function onexitcodefenced() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data.replace(\n      /^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g,\n      ''\n    )\n\n    setData('flowCodeInside')\n  }\n\n  function onexitcodeindented() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitdefinitionlabelstring(token) {\n    // Discard label, use the source content instead.\n    var label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  function onexitdefinitiontitlestring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n\n  function onexitdefinitiondestinationstring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n\n  function onexitatxheadingsequence(token) {\n    if (!this.stack[this.stack.length - 1].depth) {\n      this.stack[this.stack.length - 1].depth = this.sliceSerialize(\n        token\n      ).length\n    }\n  }\n\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  function onexitsetextheadinglinesequence(token) {\n    this.stack[this.stack.length - 1].depth =\n      this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  function onenterdata(token) {\n    var siblings = this.stack[this.stack.length - 1].children\n    var tail = siblings[siblings.length - 1]\n\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      tail.position = {start: point(token.start)}\n      this.stack[this.stack.length - 1].children.push(tail)\n    }\n\n    this.stack.push(tail)\n  }\n\n  function onexitdata(token) {\n    var tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  function onexitlineending(token) {\n    var context = this.stack[this.stack.length - 1]\n\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      context.children[context.children.length - 1].position.end = point(\n        token.end\n      )\n\n      setData('atHardBreak')\n      return\n    }\n\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.indexOf(context.type) > -1\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  function onexithtmlflow() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexithtmltext() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitcodetext() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].value = data\n  }\n\n  function onexitlink() {\n    var context = this.stack[this.stack.length - 1]\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n\n  function onexitimage() {\n    var context = this.stack[this.stack.length - 1]\n\n    // To do: clean.\n    if (getData('inReference')) {\n      context.type += 'Reference'\n      context.referenceType = getData('referenceType') || 'shortcut'\n      delete context.url\n      delete context.title\n    } else {\n      delete context.identifier\n      delete context.label\n      delete context.referenceType\n    }\n\n    setData('referenceType')\n  }\n\n  function onexitlabeltext(token) {\n    this.stack[this.stack.length - 2].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  function onexitlabel() {\n    var fragment = this.stack[this.stack.length - 1]\n    var value = this.resume()\n\n    this.stack[this.stack.length - 1].label = value\n\n    // Assume a reference.\n    setData('inReference', true)\n\n    if (this.stack[this.stack.length - 1].type === 'link') {\n      this.stack[this.stack.length - 1].children = fragment.children\n    } else {\n      this.stack[this.stack.length - 1].alt = value\n    }\n  }\n\n  function onexitresourcedestinationstring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].url = data\n  }\n\n  function onexitresourcetitlestring() {\n    var data = this.resume()\n    this.stack[this.stack.length - 1].title = data\n  }\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  function onexitreferencestring(token) {\n    var label = this.resume()\n    this.stack[this.stack.length - 1].label = label\n    this.stack[this.stack.length - 1].identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  function onexitcharacterreferencevalue(token) {\n    var data = this.sliceSerialize(token)\n    var type = getData('characterReferenceType')\n    var value\n    var tail\n\n    if (type) {\n      value = safeFromInt(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n\n      setData('characterReferenceType')\n    } else {\n      value = decode(data)\n    }\n\n    tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url = this.sliceSerialize(token)\n  }\n\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    this.stack[this.stack.length - 1].url =\n      'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  function blockQuote() {\n    return {type: 'blockquote', children: []}\n  }\n\n  function codeFlow() {\n    return {type: 'code', lang: null, meta: null, value: ''}\n  }\n\n  function codeText() {\n    return {type: 'inlineCode', value: ''}\n  }\n\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  function emphasis() {\n    return {type: 'emphasis', children: []}\n  }\n\n  function heading() {\n    return {type: 'heading', depth: undefined, children: []}\n  }\n\n  function hardBreak() {\n    return {type: 'break'}\n  }\n\n  function html() {\n    return {type: 'html', value: ''}\n  }\n\n  function image() {\n    return {type: 'image', title: null, url: '', alt: null}\n  }\n\n  function link() {\n    return {type: 'link', title: null, url: '', children: []}\n  }\n\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  function paragraph() {\n    return {type: 'paragraph', children: []}\n  }\n\n  function strong() {\n    return {type: 'strong', children: []}\n  }\n\n  function text() {\n    return {type: 'text', value: ''}\n  }\n\n  function thematicBreak() {\n    return {type: 'thematicBreak'}\n  }\n}\n\nfunction configure(config, extensions) {\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(config, extensions[index])\n  }\n\n  return config\n}\n\nfunction extension(config, extension) {\n  var key\n  var left\n\n  for (key in extension) {\n    left = own.call(config, key) ? config[key] : (config[key] = {})\n\n    if (key === 'canContainEols' || key === 'transforms') {\n      config[key] = [].concat(left, extension[key])\n    } else {\n      Object.assign(left, extension[key])\n    }\n  }\n}\n","'use strict'\n\nmodule.exports = require('./dist')\n","'use strict'\n\nmodule.exports = toString\n\n// Get the text content of a node.\n// Prefer the node’s plain-text fields, otherwise serialize its children,\n// and if the given value is an array, serialize the nodes in it.\nfunction toString(node) {\n  return (\n    (node &&\n      (node.value ||\n        node.alt ||\n        node.title ||\n        ('children' in node && all(node.children)) ||\n        ('length' in node && all(node)))) ||\n    ''\n  )\n}\n\nfunction all(values) {\n  var result = []\n  var index = -1\n\n  while (++index < values.length) {\n    result[index] = toString(values[index])\n  }\n\n  return result.join('')\n}\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlpha = regexCheck(/[A-Za-z]/)\n\nmodule.exports = asciiAlpha\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n\nmodule.exports = asciiAlphanumeric\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n\nmodule.exports = asciiAtext\n","'use strict'\n\n// Note: EOF is seen as ASCII control here, because `null < 32 == true`.\nfunction asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code < 32 || code === 127\n  )\n}\n\nmodule.exports = asciiControl\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiDigit = regexCheck(/\\d/)\n\nmodule.exports = asciiDigit\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n\nmodule.exports = asciiHexDigit\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n\nmodule.exports = asciiPunctuation\n","'use strict'\n\nfunction markdownLineEndingOrSpace(code) {\n  return code < 0 || code === 32\n}\n\nmodule.exports = markdownLineEndingOrSpace\n","'use strict'\n\nfunction markdownLineEnding(code) {\n  return code < -2\n}\n\nmodule.exports = markdownLineEnding\n","'use strict'\n\nfunction markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n\nmodule.exports = markdownSpace\n","'use strict'\n\nvar unicodePunctuationRegex = require('../constant/unicode-punctuation-regex.js')\nvar regexCheck = require('../util/regex-check.js')\n\n// In fact adds to the bundle size.\n\nvar unicodePunctuation = regexCheck(unicodePunctuationRegex)\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nvar regexCheck = require('../util/regex-check.js')\n\nvar unicodeWhitespace = regexCheck(/\\s/)\n\nmodule.exports = unicodeWhitespace\n","'use strict'\n\nvar assign = Object.assign\n\nmodule.exports = assign\n","'use strict'\n\nvar fromCharCode = String.fromCharCode\n\nmodule.exports = fromCharCode\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = own\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar basics = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'source',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\nmodule.exports = basics\n","'use strict'\n\n// This module is copied from <https://spec.commonmark.org/0.29/#html-blocks>.\nvar raws = ['pre', 'script', 'style', 'textarea']\n\nmodule.exports = raws\n","'use strict'\n\nvar splice = [].splice\n\nmodule.exports = splice\n","'use strict'\n\n// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nvar unicodePunctuation = /[!-\\/:-@\\[-`\\{-~\\xA1\\xA7\\xAB\\xB6\\xB7\\xBB\\xBF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n\nmodule.exports = unicodePunctuation\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar text$1 = require('./initialize/text.js')\nvar attention = require('./tokenize/attention.js')\nvar autolink = require('./tokenize/autolink.js')\nvar blockQuote = require('./tokenize/block-quote.js')\nvar characterEscape = require('./tokenize/character-escape.js')\nvar characterReference = require('./tokenize/character-reference.js')\nvar codeFenced = require('./tokenize/code-fenced.js')\nvar codeIndented = require('./tokenize/code-indented.js')\nvar codeText = require('./tokenize/code-text.js')\nvar definition = require('./tokenize/definition.js')\nvar hardBreakEscape = require('./tokenize/hard-break-escape.js')\nvar headingAtx = require('./tokenize/heading-atx.js')\nvar htmlFlow = require('./tokenize/html-flow.js')\nvar htmlText = require('./tokenize/html-text.js')\nvar labelEnd = require('./tokenize/label-end.js')\nvar labelStartImage = require('./tokenize/label-start-image.js')\nvar labelStartLink = require('./tokenize/label-start-link.js')\nvar lineEnding = require('./tokenize/line-ending.js')\nvar list = require('./tokenize/list.js')\nvar setextUnderline = require('./tokenize/setext-underline.js')\nvar thematicBreak = require('./tokenize/thematic-break.js')\n\nvar document = {\n  42: list,\n  // Asterisk\n  43: list,\n  // Plus sign\n  45: list,\n  // Dash\n  48: list,\n  // 0\n  49: list,\n  // 1\n  50: list,\n  // 2\n  51: list,\n  // 3\n  52: list,\n  // 4\n  53: list,\n  // 5\n  54: list,\n  // 6\n  55: list,\n  // 7\n  56: list,\n  // 8\n  57: list,\n  // 9\n  62: blockQuote // Greater than\n}\nvar contentInitial = {\n  91: definition // Left square bracket\n}\nvar flowInitial = {\n  '-2': codeIndented,\n  // Horizontal tab\n  '-1': codeIndented,\n  // Virtual space\n  32: codeIndented // Space\n}\nvar flow = {\n  35: headingAtx,\n  // Number sign\n  42: thematicBreak,\n  // Asterisk\n  45: [setextUnderline, thematicBreak],\n  // Dash\n  60: htmlFlow,\n  // Less than\n  61: setextUnderline,\n  // Equals to\n  95: thematicBreak,\n  // Underscore\n  96: codeFenced,\n  // Grave accent\n  126: codeFenced // Tilde\n}\nvar string = {\n  38: characterReference,\n  // Ampersand\n  92: characterEscape // Backslash\n}\nvar text = {\n  '-5': lineEnding,\n  // Carriage return\n  '-4': lineEnding,\n  // Line feed\n  '-3': lineEnding,\n  // Carriage return + line feed\n  33: labelStartImage,\n  // Exclamation mark\n  38: characterReference,\n  // Ampersand\n  42: attention,\n  // Asterisk\n  60: [autolink, htmlText],\n  // Less than\n  91: labelStartLink,\n  // Left square bracket\n  92: [hardBreakEscape, characterEscape],\n  // Backslash\n  93: labelEnd,\n  // Right square bracket\n  95: attention,\n  // Underscore\n  96: codeText // Grave accent\n}\nvar insideSpan = {\n  null: [attention, text$1.resolver]\n}\nvar disable = {\n  null: []\n}\n\nexports.contentInitial = contentInitial\nexports.disable = disable\nexports.document = document\nexports.flow = flow\nexports.flowInitial = flowInitial\nexports.insideSpan = insideSpan\nexports.string = string\nexports.text = text\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\n\nvar tokenize = initializeContent\n\nfunction initializeContent(effects) {\n  var contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  var previous\n  return contentStart\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n\n  function lineStart(code) {\n    var token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous: previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeDocument\nvar containerConstruct = {\n  tokenize: tokenizeContainer\n}\nvar lazyFlowConstruct = {\n  tokenize: tokenizeLazyFlow\n}\n\nfunction initializeDocument(effects) {\n  var self = this\n  var stack = []\n  var continued = 0\n  var inspectConstruct = {\n    tokenize: tokenizeInspect,\n    partial: true\n  }\n  var inspectResult\n  var childFlow\n  var childToken\n  return start\n\n  function start(code) {\n    if (continued < stack.length) {\n      self.containerState = stack[continued][1]\n      return effects.attempt(\n        stack[continued][0].continuation,\n        documentContinue,\n        documentContinued\n      )(code)\n    }\n\n    return documentContinued(code)\n  }\n\n  function documentContinue(code) {\n    continued++\n    return start(code)\n  }\n\n  function documentContinued(code) {\n    // If we’re in a concrete construct (such as when expecting another line of\n    // HTML, or we resulted in lazy content), we can immediately start flow.\n    if (inspectResult && inspectResult.flowContinue) {\n      return flowStart(code)\n    }\n\n    self.interrupt =\n      childFlow &&\n      childFlow.currentConstruct &&\n      childFlow.currentConstruct.interruptible\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n\n  function containerContinue(code) {\n    stack.push([self.currentConstruct, self.containerState])\n    self.containerState = undefined\n    return documentContinued(code)\n  }\n\n  function flowStart(code) {\n    if (code === null) {\n      exitContainers(0, true)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n\n  function flowContinue(code) {\n    if (code === null) {\n      continueFlow(effects.exit('chunkFlow'))\n      return flowStart(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      continueFlow(effects.exit('chunkFlow'))\n      return effects.check(inspectConstruct, documentAfterPeek)\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n\n  function documentAfterPeek(code) {\n    exitContainers(\n      inspectResult.continued,\n      inspectResult && inspectResult.flowEnd\n    )\n    continued = 0\n    return start(code)\n  }\n\n  function continueFlow(token) {\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.lazy = inspectResult && inspectResult.lazy\n    childFlow.defineSkip(token.start)\n    childFlow.write(self.sliceStream(token))\n  }\n\n  function exitContainers(size, end) {\n    var index = stack.length // Close the flow.\n\n    if (childFlow && end) {\n      childFlow.write([null])\n      childToken = childFlow = undefined\n    } // Exit open containers.\n\n    while (index-- > size) {\n      self.containerState = stack[index][1]\n      stack[index][0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function tokenizeInspect(effects, ok) {\n    var subcontinued = 0\n    inspectResult = {}\n    return inspectStart\n\n    function inspectStart(code) {\n      if (subcontinued < stack.length) {\n        self.containerState = stack[subcontinued][1]\n        return effects.attempt(\n          stack[subcontinued][0].continuation,\n          inspectContinue,\n          inspectLess\n        )(code)\n      } // If we’re continued but in a concrete flow, we can’t have more\n      // containers.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        inspectResult.flowContinue = true\n        return inspectDone(code)\n      }\n\n      self.interrupt =\n        childFlow.currentConstruct && childFlow.currentConstruct.interruptible\n      self.containerState = {}\n      return effects.attempt(\n        containerConstruct,\n        inspectFlowEnd,\n        inspectDone\n      )(code)\n    }\n\n    function inspectContinue(code) {\n      subcontinued++\n      return self.containerState._closeFlow\n        ? inspectFlowEnd(code)\n        : inspectStart(code)\n    }\n\n    function inspectLess(code) {\n      if (childFlow.currentConstruct && childFlow.currentConstruct.lazy) {\n        // Maybe another container?\n        self.containerState = {}\n        return effects.attempt(\n          containerConstruct,\n          inspectFlowEnd, // Maybe flow, or a blank line?\n          effects.attempt(\n            lazyFlowConstruct,\n            inspectFlowEnd,\n            effects.check(partialBlankLine, inspectFlowEnd, inspectLazy)\n          )\n        )(code)\n      } // Otherwise we’re interrupting.\n\n      return inspectFlowEnd(code)\n    }\n\n    function inspectLazy(code) {\n      // Act as if all containers are continued.\n      subcontinued = stack.length\n      inspectResult.lazy = true\n      inspectResult.flowContinue = true\n      return inspectDone(code)\n    } // We’re done with flow if we have more containers, or an interruption.\n\n    function inspectFlowEnd(code) {\n      inspectResult.flowEnd = true\n      return inspectDone(code)\n    }\n\n    function inspectDone(code) {\n      inspectResult.continued = subcontinued\n      self.interrupt = self.containerState = undefined\n      return ok(code)\n    }\n  }\n}\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction tokenizeLazyFlow(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.lazy(this.parser.constructs.flow, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar content = require('../tokenize/content.js')\nvar factorySpace = require('../tokenize/factory-space.js')\nvar partialBlankLine = require('../tokenize/partial-blank-line.js')\n\nvar tokenize = initializeFlow\n\nfunction initializeFlow(effects) {\n  var self = this\n  var initial = effects.attempt(\n    // Try to parse a blank line.\n    partialBlankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n\nexports.tokenize = tokenize\n","'use strict'\n\nObject.defineProperty(exports, '__esModule', {value: true})\n\nvar assign = require('../constant/assign.js')\nvar shallow = require('../util/shallow.js')\n\nvar text = initializeFactory('text')\nvar string = initializeFactory('string')\nvar resolver = {\n  resolveAll: createResolver()\n}\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n\n  function initializeText(effects) {\n    var self = this\n    var constructs = this.parser.constructs[field]\n    var text = effects.attempt(constructs, start, notText)\n    return start\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n\n    function atBreak(code) {\n      var list = constructs[code]\n      var index = -1\n\n      if (code === null) {\n        return true\n      }\n\n      if (list) {\n        while (++index < list.length) {\n          if (\n            !list[index].previous ||\n            list[index].previous.call(self, self.previous)\n          ) {\n            return true\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n\n  function resolveAllText(events, context) {\n    var index = -1\n    var enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n} // A rather ugly set of instructions which again looks at chunks in the input\n// stream.\n// The reason to do this here is that it is *much* faster to parse in reverse.\n// And that we can’t hook into `null` to split the line suffix before an EOF.\n// To do: figure out if we can make this into a clean utility, or even in core.\n// As it will be useful for GFMs literal autolink extension (and maybe even\n// tables?)\n\nfunction resolveAllLineSuffixes(events, context) {\n  var eventIndex = -1\n  var chunks\n  var data\n  var chunk\n  var index\n  var bufferIndex\n  var size\n  var tabs\n  var token\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      data = events[eventIndex - 1][1]\n      chunks = context.sliceStream(data)\n      index = chunks.length\n      bufferIndex = -1\n      size = 0\n      tabs = undefined\n\n      while (index--) {\n        chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1);\n        else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: shallow(data.end)\n        }\n        data.end = shallow(token.start)\n\n        if (data.start.offset === data.end.offset) {\n          assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n\nexports.resolver = resolver\nexports.string = string\nexports.text = text\n","'use strict'\n\nvar content = require('./initialize/content.js')\nvar document = require('./initialize/document.js')\nvar flow = require('./initialize/flow.js')\nvar text = require('./initialize/text.js')\nvar combineExtensions = require('./util/combine-extensions.js')\nvar createTokenizer = require('./util/create-tokenizer.js')\nvar miniflat = require('./util/miniflat.js')\nvar constructs = require('./constructs.js')\n\nfunction parse(options) {\n  var settings = options || {}\n  var parser = {\n    defined: [],\n    constructs: combineExtensions(\n      [constructs].concat(miniflat(settings.extensions))\n    ),\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(text.string),\n    text: create(text.text)\n  }\n  return parser\n\n  function create(initializer) {\n    return creator\n\n    function creator(from) {\n      return createTokenizer(parser, initializer, from)\n    }\n  }\n}\n\nmodule.exports = parse\n","'use strict'\n\nvar subtokenize = require('./util/subtokenize.js')\n\nfunction postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n\nmodule.exports = postprocess\n","'use strict'\n\nvar search = /[\\0\\t\\n\\r]/g\n\nfunction preprocess() {\n  var start = true\n  var column = 1\n  var buffer = ''\n  var atCarriageReturn\n  return preprocessor\n\n  function preprocessor(value, encoding, end) {\n    var chunks = []\n    var match\n    var next\n    var startPosition\n    var endPosition\n    var code\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition = match ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        if (code === 0) {\n          chunks.push(65533)\n          column++\n        } else if (code === 9) {\n          next = Math.ceil(column / 4) * 4\n          chunks.push(-2)\n\n          while (column++ < next) chunks.push(-1)\n        } else if (code === 10) {\n          chunks.push(-4)\n          column = 1\n        } // Must be carriage return.\n        else {\n          atCarriageReturn = true\n          column = 1\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n\nmodule.exports = preprocess\n","'use strict'\n\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar classifyCharacter = require('../util/classify-character.js')\nvar movePoint = require('../util/move-point.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\n\nvar attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n\nfunction resolveAllAttention(events, context) {\n  var index = -1\n  var open\n  var group\n  var text\n  var openingSequence\n  var closingSequence\n  var use\n  var nextEvents\n  var offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: movePoint(shallow(events[open][1].end), -use),\n            end: shallow(events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: shallow(events[index][1].start),\n            end: movePoint(shallow(events[index][1].start), use)\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: shallow(events[open][1].end),\n            end: shallow(events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: shallow(openingSequence.start),\n            end: shallow(closingSequence.end)\n          }\n          events[open][1].end = shallow(openingSequence.start)\n          events[index][1].start = shallow(closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = chunkedPush(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = chunkedPush(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = chunkedPush(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          chunkedSplice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n\nfunction tokenizeAttention(effects, ok) {\n  var before = classifyCharacter(this.previous)\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n\n  function sequence(code) {\n    var token\n    var after\n    var open\n    var close\n\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    token = effects.exit('attentionSequence')\n    after = classifyCharacter(code)\n    open = !after || (after === 2 && before)\n    close = !before || (before === 2 && after)\n    token._open = marker === 42 ? open : open && (before || !close)\n    token._close = marker === 42 ? close : close && (after || !open)\n    return ok(code)\n  }\n}\n\nmodule.exports = attention\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiAtext = require('../character/ascii-atext.js')\nvar asciiControl = require('../character/ascii-control.js')\n\nvar autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  var size = 1\n  return start\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n\nmodule.exports = autolink\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit: exit\n}\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    if (code === 62) {\n      if (!self.containerState.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        self.containerState.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4\n  )\n}\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n\nmodule.exports = blockQuote\n","'use strict'\n\nvar asciiPunctuation = require('../character/ascii-punctuation.js')\n\nvar characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterEscape\n","'use strict'\n\nvar decodeEntity = require('parse-entities/decode-entity.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar asciiDigit = require('../character/ascii-digit.js')\nvar asciiHexDigit = require('../character/ascii-hex-digit.js')\n\nfunction _interopDefaultLegacy(e) {\n  return e && typeof e === 'object' && 'default' in e ? e : {default: e}\n}\n\nvar decodeEntity__default = /*#__PURE__*/ _interopDefaultLegacy(decodeEntity)\n\nvar characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  var self = this\n  var size = 0\n  var max\n  var test\n  return start\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n\n  function value(code) {\n    var token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeEntity__default['default'](self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = characterReference\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  var self = this\n  var closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  var initialPrefix = prefixSize(this.events, 'linePrefix')\n  var sizeOpen = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : content(code)\n  }\n\n  function content(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return effects.attempt(\n        closingFenceConstruct,\n        after,\n        initialPrefix\n          ? factorySpace(effects, content, 'linePrefix', initialPrefix + 1)\n          : content\n      )\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return content(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    var size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n\nmodule.exports = codeFenced\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar factorySpace = require('./factory-space.js')\n\nvar codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented,\n  resolve: resolveCodeIndented\n}\nvar indentedContentConstruct = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n\nfunction resolveCodeIndented(events, context) {\n  var code = {\n    type: 'codeIndented',\n    start: events[0][1].start,\n    end: events[events.length - 1][1].end\n  }\n  chunkedSplice(events, 0, 0, [['enter', code, context]])\n  chunkedSplice(events, events.length, 0, [['exit', code, context]])\n  return events\n}\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  return effects.attempt(indentedContentConstruct, afterPrefix, nok)\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return ok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContentConstruct, afterPrefix, ok)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n}\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  var self = this\n  return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n\n  function afterPrefix(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)\n    }\n\n    return prefixSize(self.events, 'linePrefix') < 4 ? nok(code) : ok(code)\n  }\n}\n\nmodule.exports = codeIndented\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous: previous\n}\n\nfunction resolveCodeText(events) {\n  var tailExitIndex = events.length - 4\n  var headEnterIndex = 3\n  var index\n  var enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[tailExitIndex][1].type = events[headEnterIndex][1].type =\n          'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  var sizeOpen = 0\n  var size\n  var token\n  return start\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n\nmodule.exports = codeText\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar subtokenize = require('../util/subtokenize.js')\nvar factorySpace = require('./factory-space.js')\n\n// No name because it must not be turned off.\nvar content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent,\n  interruptible: true,\n  lazy: true\n}\nvar continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n} // Content is transparent: it’s parsed right now. That way, definitions are also\n// parsed right now: before text in paragraphs (specifically, media) are parsed.\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n\nfunction tokenizeContent(effects, ok) {\n  var previous\n  return start\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous = previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous: previous\n    })\n    return data\n  }\n}\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  var self = this\n  return startLookahead\n\n  function startLookahead(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1 ||\n      prefixSize(self.events, 'linePrefix') < 4\n    ) {\n      return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = content\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factorySpace = require('./factory-space.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\nvar factoryTitle = require('./factory-title.js')\n\nvar definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\nvar titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  var self = this\n  var identifier\n  return start\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (self.parser.defined.indexOf(identifier) < 0) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = definition\n","'use strict'\n\nvar asciiControl = require('../character/ascii-control.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\n// eslint-disable-next-line max-params\nfunction destinationFactory(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  var limit = max || Infinity\n  var balance = 0\n  return start\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (asciiControl(code) || code === 41) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n\nmodule.exports = destinationFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\n\n// eslint-disable-next-line max-params\nfunction labelFactory(effects, ok, nok, type, markerType, stringType) {\n  var self = this\n  var size = 0\n  var data\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* c8 ignore next */\n      (code === 94 &&\n        /* c8 ignore next */\n        !size &&\n        /* c8 ignore next */\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n\nmodule.exports = labelFactory\n","'use strict'\n\nvar markdownSpace = require('../character/markdown-space.js')\n\nfunction spaceFactory(effects, ok, type, max) {\n  var limit = max ? max - 1 : Infinity\n  var size = 0\n  return start\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n\nmodule.exports = spaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction titleFactory(effects, ok, nok, type, markerType, stringType) {\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n\nmodule.exports = titleFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nfunction whitespaceFactory(effects, ok) {\n  var seen\n  return start\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n\nmodule.exports = whitespaceFactory\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\n\nvar hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = hardBreakEscape\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar factorySpace = require('./factory-space.js')\n\nvar headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n\nfunction resolveHeadingAtx(events, context) {\n  var contentEnd = events.length - 2\n  var contentStart = 3\n  var content\n  var text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      contentType: 'text'\n    }\n    chunkedSplice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  var self = this\n  var size = 0\n  return start\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n\nmodule.exports = headingAtx\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar fromCharCode = require('../constant/from-char-code.js')\nvar htmlBlockNames = require('../constant/html-block-names.js')\nvar htmlRawNames = require('../constant/html-raw-names.js')\nvar partialBlankLine = require('./partial-blank-line.js')\n\nvar htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\nvar nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n\nfunction resolveToHtmlFlow(events) {\n  var index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  var self = this\n  var kind\n  var startTag\n  var buffer\n  var index\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.indexOf(buffer.toLowerCase()) > -1\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.indexOf(buffer.toLowerCase()) > -1) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting.\n\n      return self.interrupt\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = undefined\n    return completeAttributeValueUnquoted(code)\n  }\n\n  function completeAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return htmlContinueStart\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.indexOf(buffer.toLowerCase()) > -1) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    return continuation(code)\n  }\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(partialBlankLine, ok, nok)\n  }\n}\n\nmodule.exports = htmlFlow\n","'use strict'\n\nvar asciiAlpha = require('../character/ascii-alpha.js')\nvar asciiAlphanumeric = require('../character/ascii-alphanumeric.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  var self = this\n  var marker\n  var buffer\n  var index\n  var returnState\n  return start\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )\n  }\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = htmlText\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar chunkedPush = require('../util/chunked-push.js')\nvar chunkedSplice = require('../util/chunked-splice.js')\nvar normalizeIdentifier = require('../util/normalize-identifier.js')\nvar resolveAll = require('../util/resolve-all.js')\nvar shallow = require('../util/shallow.js')\nvar factoryDestination = require('./factory-destination.js')\nvar factoryLabel = require('./factory-label.js')\nvar factoryTitle = require('./factory-title.js')\nvar factoryWhitespace = require('./factory-whitespace.js')\n\nvar labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\nvar resourceConstruct = {\n  tokenize: tokenizeResource\n}\nvar fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\nvar collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n\nfunction resolveAllLabelEnd(events) {\n  var index = -1\n  var token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      !token._used &&\n      (token.type === 'labelImage' ||\n        token.type === 'labelLink' ||\n        token.type === 'labelEnd')\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n\nfunction resolveToLabelEnd(events, context) {\n  var index = events.length\n  var offset = 0\n  var group\n  var label\n  var text\n  var token\n  var open\n  var close\n  var media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: shallow(events[open][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  }\n  label = {\n    type: 'label',\n    start: shallow(events[open][1].start),\n    end: shallow(events[close][1].end)\n  }\n  text = {\n    type: 'labelText',\n    start: shallow(events[open + offset + 2][1].end),\n    end: shallow(events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = chunkedPush(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = chunkedPush(media, [['enter', text, context]]) // Between.\n\n  media = chunkedPush(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = chunkedPush(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = chunkedPush(media, events.slice(close + 1)) // Media close.\n\n  media = chunkedPush(media, [['exit', group, context]])\n  chunkedSplice(events, open, events.length, media)\n  return events\n}\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var labelStart\n  var defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined =\n      self.parser.defined.indexOf(\n        normalizeIdentifier(\n          self.sliceSerialize({\n            start: labelStart.end,\n            end: self.now()\n          })\n        )\n      ) > -1\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      3\n    )(code)\n  }\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n\n  function afterLabel(code) {\n    return self.parser.defined.indexOf(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    ) < 0\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = labelEnd\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartImage\n","'use strict'\n\nvar labelEnd = require('./label-end.js')\n\nvar labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  var self = this\n  return start\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n\n  function after(code) {\n    /* c8 ignore next */\n    return code === 94 &&\n      /* c8 ignore next */\n      '_hiddenFootnoteSupport' in self.parser.constructs\n      ? /* c8 ignore next */\n        nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = labelStartLink\n","'use strict'\n\nvar factorySpace = require('./factory-space.js')\n\nvar lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n\nmodule.exports = lineEnding\n","'use strict'\n\nvar asciiDigit = require('../character/ascii-digit.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar prefixSize = require('../util/prefix-size.js')\nvar sizeChunks = require('../util/size-chunks.js')\nvar factorySpace = require('./factory-space.js')\nvar partialBlankLine = require('./partial-blank-line.js')\nvar thematicBreak = require('./thematic-break.js')\n\nvar list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\nvar listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\nvar indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n\nfunction tokenizeListStart(effects, ok, nok) {\n  var self = this\n  var initialSize = prefixSize(self.events, 'linePrefix')\n  var size = 0\n  return start\n\n  function start(code) {\n    var kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      partialBlankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize + sizeChunks(self.sliceStream(effects.exit('listItemPrefix')))\n    return ok(code)\n  }\n}\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  var self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(partialBlankLine, onBlank, notBlank)\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n\nfunction tokenizeIndent(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n\n  function afterPrefix(code) {\n    return prefixSize(self.events, 'listItemIndent') ===\n      self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  var self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.indexOf('codeIndented') > -1\n      ? undefined\n      : 4 + 1\n  )\n\n  function afterPrefix(code) {\n    return markdownSpace(code) ||\n      !prefixSize(self.events, 'listItemPrefixWhitespace')\n      ? nok(code)\n      : ok(code)\n  }\n}\n\nmodule.exports = list\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar factorySpace = require('./factory-space.js')\n\nvar partialBlankLine = {\n  tokenize: tokenizePartialBlankLine,\n  partial: true\n}\n\nfunction tokenizePartialBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n\nmodule.exports = partialBlankLine\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar shallow = require('../util/shallow.js')\nvar factorySpace = require('./factory-space.js')\n\nvar setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n\nfunction resolveToSetextUnderline(events, context) {\n  var index = events.length\n  var content\n  var text\n  var definition\n  var heading // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  heading = {\n    type: 'setextHeading',\n    start: shallow(events[text][1].start),\n    end: shallow(events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = shallow(events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  var self = this\n  var index = self.events.length\n  var marker\n  var paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n\n  function start(code) {\n    if (!self.lazy && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n\nmodule.exports = setextUnderline\n","'use strict'\n\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar markdownSpace = require('../character/markdown-space.js')\nvar factorySpace = require('./factory-space.js')\n\nvar thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  var size = 0\n  var marker\n  return start\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n\nmodule.exports = thematicBreak\n","'use strict'\n\nvar chunkedSplice = require('./chunked-splice.js')\n\nfunction chunkedPush(list, items) {\n  if (list.length) {\n    chunkedSplice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n\nmodule.exports = chunkedPush\n","'use strict'\n\nvar splice = require('../constant/splice.js')\n\n// causes a stack overflow in V8 when trying to insert 100k items for instance.\n\nfunction chunkedSplice(list, start, remove, items) {\n  var end = list.length\n  var chunkStart = 0\n  var parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove)\n    splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0)\n      splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n\nmodule.exports = chunkedSplice\n","'use strict'\n\nvar markdownLineEndingOrSpace = require('../character/markdown-line-ending-or-space.js')\nvar unicodePunctuation = require('../character/unicode-punctuation.js')\nvar unicodeWhitespace = require('../character/unicode-whitespace.js')\n\n// Classify whether a character is unicode whitespace, unicode punctuation, or\n// anything else.\n// Used for attention (emphasis, strong), whose sequences can open or close\n// based on the class of surrounding characters.\nfunction classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n\nmodule.exports = classifyCharacter\n","'use strict'\n\nvar hasOwnProperty = require('../constant/has-own-property.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\n\nfunction combineExtensions(extensions) {\n  var all = {}\n  var index = -1\n\n  while (++index < extensions.length) {\n    extension(all, extensions[index])\n  }\n\n  return all\n}\n\nfunction extension(all, extension) {\n  var hook\n  var left\n  var right\n  var code\n\n  for (hook in extension) {\n    left = hasOwnProperty.call(all, hook) ? all[hook] : (all[hook] = {})\n    right = extension[hook]\n\n    for (code in right) {\n      left[code] = constructs(\n        miniflat(right[code]),\n        hasOwnProperty.call(left, code) ? left[code] : []\n      )\n    }\n  }\n}\n\nfunction constructs(list, existing) {\n  var index = -1\n  var before = []\n\n  while (++index < list.length) {\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  chunkedSplice(existing, 0, 0, before)\n  return existing\n}\n\nmodule.exports = combineExtensions\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar markdownLineEnding = require('../character/markdown-line-ending.js')\nvar chunkedPush = require('./chunked-push.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar miniflat = require('./miniflat.js')\nvar resolveAll = require('./resolve-all.js')\nvar serializeChunks = require('./serialize-chunks.js')\nvar shallow = require('./shallow.js')\nvar sliceChunks = require('./slice-chunks.js')\n\n// Create a tokenizer.\n// Tokenizers deal with one type of data (e.g., containers, flow, text).\n// The parser is the object dealing with it all.\n// `initialize` works like other constructs, except that only its `tokenize`\n// function is used, in which case it doesn’t receive an `ok` or `nok`.\n// `from` can be given to set the point before the first character, although\n// when further lines are indented, they must be set with `defineSkip`.\nfunction createTokenizer(parser, initialize, from) {\n  var point = from\n    ? shallow(from)\n    : {\n        line: 1,\n        column: 1,\n        offset: 0\n      }\n  var columnStart = {}\n  var resolveAllConstructs = []\n  var chunks = []\n  var stack = []\n\n  var effects = {\n    consume: consume,\n    enter: enter,\n    exit: exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    }),\n    lazy: constructFactory(onsuccessfulcheck, {\n      lazy: true\n    })\n  } // State and tools for resolving and serializing.\n\n  var context = {\n    previous: null,\n    events: [],\n    parser: parser,\n    sliceStream: sliceStream,\n    sliceSerialize: sliceSerialize,\n    now: now,\n    defineSkip: skip,\n    write: write\n  } // The state function.\n\n  var state = initialize.tokenize.call(context, effects) // Track which character we expect to be consumed, to catch bugs.\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  } // Store where we are in the input stream.\n\n  point._index = 0\n  point._bufferIndex = -1\n  return context\n\n  function write(slice) {\n    chunks = chunkedPush(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  function sliceSerialize(token) {\n    return serializeChunks(sliceStream(token))\n  }\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n\n  function now() {\n    return shallow(point)\n  }\n\n  function skip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n  // Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n  // `consume`).\n  // Here is where we walk through the chunks, which either include strings of\n  // several characters, or numerical character codes.\n  // The reason to do this in a loop instead of a call is so the stack can\n  // drain.\n\n  function main() {\n    var chunkIndex\n    var chunk\n\n    while (point._index < chunks.length) {\n      chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  } // Deal with one code.\n\n  function go(code) {\n    state = state(code)\n  } // Move a character forward.\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n  } // Start a token.\n\n  function enter(type, fields) {\n    var token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  } // Stop a token.\n\n  function exit(type) {\n    var token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  } // Use results.\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  } // Discard results.\n\n  function onsuccessfulcheck(construct, info) {\n    info.restore()\n  } // Factory to attempt/check/interrupt.\n\n  function constructFactory(onreturn, fields) {\n    return hook // Handle either an object mapping codes to constructs, a list of\n    // constructs, or a single construct.\n\n    function hook(constructs, returnState, bogusState) {\n      var listOfConstructs\n      var constructIndex\n      var currentConstruct\n      var info\n      return constructs.tokenize || 'length' in constructs\n        ? handleListOfConstructs(miniflat(constructs))\n        : handleMapOfConstructs\n\n      function handleMapOfConstructs(code) {\n        if (code in constructs || null in constructs) {\n          return handleListOfConstructs(\n            constructs.null\n              ? /* c8 ignore next */\n                miniflat(constructs[code]).concat(miniflat(constructs.null))\n              : constructs[code]\n          )(code)\n        }\n\n        return bogusState(code)\n      }\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n        return handleConstruct(list[constructIndex])\n      }\n\n      function handleConstruct(construct) {\n        return start\n\n        function start(code) {\n          // To do: not nede to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.indexOf(construct.name) > -1\n          ) {\n            return nok()\n          }\n\n          return construct.tokenize.call(\n            fields ? assign({}, context, fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n\n      function ok(code) {\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n\n      function nok(code) {\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && resolveAllConstructs.indexOf(construct) < 0) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      chunkedSplice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n\n  function store() {\n    var startPoint = now()\n    var startPrevious = context.previous\n    var startCurrentConstruct = context.currentConstruct\n    var startEventsIndex = context.events.length\n    var startStack = Array.from(stack)\n    return {\n      restore: restore,\n      from: startEventsIndex\n    }\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n\nmodule.exports = createTokenizer\n","'use strict'\n\nfunction miniflat(value) {\n  return value === null || value === undefined\n    ? []\n    : 'length' in value\n    ? value\n    : [value]\n}\n\nmodule.exports = miniflat\n","'use strict'\n\n// chunks (replacement characters, tabs, or line endings).\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n  return point\n}\n\nmodule.exports = movePoint\n","'use strict'\n\nfunction normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no object method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n\nmodule.exports = normalizeIdentifier\n","'use strict'\n\nvar sizeChunks = require('./size-chunks.js')\n\nfunction prefixSize(events, type) {\n  var tail = events[events.length - 1]\n  if (!tail || tail[1].type !== type) return 0\n  return sizeChunks(tail[2].sliceStream(tail[1]))\n}\n\nmodule.exports = prefixSize\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction regexCheck(regex) {\n  return check\n\n  function check(code) {\n    return regex.test(fromCharCode(code))\n  }\n}\n\nmodule.exports = regexCheck\n","'use strict'\n\nfunction resolveAll(constructs, events, context) {\n  var called = []\n  var index = -1\n  var resolve\n\n  while (++index < constructs.length) {\n    resolve = constructs[index].resolveAll\n\n    if (resolve && called.indexOf(resolve) < 0) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n\nmodule.exports = resolveAll\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction safeFromInt(value, base) {\n  var code = parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return fromCharCode(code)\n}\n\nmodule.exports = safeFromInt\n","'use strict'\n\nvar fromCharCode = require('../constant/from-char-code.js')\n\nfunction serializeChunks(chunks) {\n  var index = -1\n  var result = []\n  var chunk\n  var value\n  var atTab\n\n  while (++index < chunks.length) {\n    chunk = chunks[index]\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else if (chunk === -5) {\n      value = '\\r'\n    } else if (chunk === -4) {\n      value = '\\n'\n    } else if (chunk === -3) {\n      value = '\\r' + '\\n'\n    } else if (chunk === -2) {\n      value = '\\t'\n    } else if (chunk === -1) {\n      if (atTab) continue\n      value = ' '\n    } else {\n      // Currently only replacement character.\n      value = fromCharCode(chunk)\n    }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n\nmodule.exports = serializeChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\n\nfunction shallow(object) {\n  return assign({}, object)\n}\n\nmodule.exports = shallow\n","'use strict'\n\n// Counts tabs based on their expanded size, and CR+LF as one character.\n\nfunction sizeChunks(chunks) {\n  var index = -1\n  var size = 0\n\n  while (++index < chunks.length) {\n    size += typeof chunks[index] === 'string' ? chunks[index].length : 1\n  }\n\n  return size\n}\n\nmodule.exports = sizeChunks\n","'use strict'\n\nfunction sliceChunks(chunks, token) {\n  var startIndex = token.start._index\n  var startBufferIndex = token.start._bufferIndex\n  var endIndex = token.end._index\n  var endBufferIndex = token.end._bufferIndex\n  var view\n\n  if (startIndex === endIndex) {\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n\nmodule.exports = sliceChunks\n","'use strict'\n\nvar assign = require('../constant/assign.js')\nvar chunkedSplice = require('./chunked-splice.js')\nvar shallow = require('./shallow.js')\n\nfunction subtokenize(events) {\n  var jumps = {}\n  var index = -1\n  var event\n  var lineIndex\n  var otherIndex\n  var otherEvent\n  var parameters\n  var subevents\n  var more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1].isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container || event[1]._movePreviousLineEndings) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = shallow(events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        chunkedSplice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n\nfunction subcontent(events, eventIndex) {\n  var token = events[eventIndex][1]\n  var context = events[eventIndex][2]\n  var startPosition = eventIndex - 1\n  var startPositions = []\n  var tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  var childEvents = tokenizer.events\n  var jumps = []\n  var gaps = {}\n  var stream\n  var previous\n  var index\n  var entered\n  var end\n  var adjust // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (token) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== token) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!token._tokenizer) {\n      stream = context.sliceStream(token)\n\n      if (!token.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(token.start)\n      }\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (token.isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = token\n    token = token.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  token = previous\n  index = childEvents.length\n\n  while (index--) {\n    // Make sure we’ve at least seen something (final eol is part of the last\n    // token).\n    if (childEvents[index][0] === 'enter') {\n      entered = true\n    } else if (\n      // Find a void token that includes a break.\n      entered &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      add(childEvents.slice(index + 1, end))\n      // Help GC.\n      token._tokenizer = token.next = undefined\n      token = token.previous\n      end = index + 1\n    }\n  }\n\n  // Help GC.\n  tokenizer.events = token._tokenizer = token.next = undefined // Do head:\n\n  add(childEvents.slice(0, end))\n  index = -1\n  adjust = 0\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n\n  function add(slice) {\n    var start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    chunkedSplice(events, start, 2, slice)\n  }\n}\n\nmodule.exports = subtokenize\n","'use strict'\n\n/* eslint-env browser */\n\nvar el\n\nvar semicolon = 59 //  ';'\n\nmodule.exports = decodeEntity\n\nfunction decodeEntity(characters) {\n  var entity = '&' + characters + ';'\n  var char\n\n  el = el || document.createElement('i')\n  el.innerHTML = entity\n  char = el.textContent\n\n  // Some entities do not require the closing semicolon (`&not` - for instance),\n  // which leads to situations where parsing the assumed entity of &notit; will\n  // result in the string `¬it;`.  When we encounter a trailing semicolon after\n  // parsing and the entity to decode was not a semicolon (`&semi;`), we can\n  // assume that the matching was incomplete\n  if (char.charCodeAt(char.length - 1) === semicolon && characters !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the entity was not valid\n  return char === entity ? false : char\n}\n","'use strict'\n\nmodule.exports = parse\n\nvar fromMarkdown = require('mdast-util-from-markdown')\n\nfunction parse(options) {\n  var self = this\n\n  this.Parser = parse\n\n  function parse(doc) {\n    return fromMarkdown(\n      doc,\n      Object.assign({}, self.data('settings'), options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: self.data('micromarkExtensions') || [],\n        mdastExtensions: self.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n}\n","'use strict'\n\nvar wrap = require('./wrap.js')\n\nmodule.exports = trough\n\ntrough.wrap = wrap\n\nvar slice = [].slice\n\n// Create new middleware.\nfunction trough() {\n  var fns = []\n  var middleware = {}\n\n  middleware.run = run\n  middleware.use = use\n\n  return middleware\n\n  // Run `fns`.  Last argument must be a completion handler.\n  function run() {\n    var index = -1\n    var input = slice.call(arguments, 0, -1)\n    var done = arguments[arguments.length - 1]\n\n    if (typeof done !== 'function') {\n      throw new Error('Expected function as last argument, not ' + done)\n    }\n\n    next.apply(null, [null].concat(input))\n\n    // Run the next `fn`, if any.\n    function next(err) {\n      var fn = fns[++index]\n      var params = slice.call(arguments, 0)\n      var values = params.slice(1)\n      var length = input.length\n      var pos = -1\n\n      if (err) {\n        done(err)\n        return\n      }\n\n      // Copy non-nully input into values.\n      while (++pos < length) {\n        if (values[pos] === null || values[pos] === undefined) {\n          values[pos] = input[pos]\n        }\n      }\n\n      input = values\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next).apply(null, input)\n      } else {\n        done.apply(null, [null].concat(input))\n      }\n    }\n  }\n\n  // Add `fn` to the list.\n  function use(fn) {\n    if (typeof fn !== 'function') {\n      throw new Error('Expected `fn` to be a function, not ' + fn)\n    }\n\n    fns.push(fn)\n\n    return middleware\n  }\n}\n","'use strict'\n\nvar slice = [].slice\n\nmodule.exports = wrap\n\n// Wrap `fn`.\n// Can be sync or async; return a promise, receive a completion handler, return\n// new values and errors.\nfunction wrap(fn, callback) {\n  var invoked\n\n  return wrapped\n\n  function wrapped() {\n    var params = slice.call(arguments, 0)\n    var callback = fn.length > params.length\n    var result\n\n    if (callback) {\n      params.push(done)\n    }\n\n    try {\n      result = fn.apply(null, params)\n    } catch (error) {\n      // Well, this is quite the pickle.\n      // `fn` received a callback and invoked it (thus continuing the pipeline),\n      // but later also threw an error.\n      // We’re not about to restart the pipeline again, so the only thing left\n      // to do is to throw the thing instead.\n      if (callback && invoked) {\n        throw error\n      }\n\n      return done(error)\n    }\n\n    if (!callback) {\n      if (result && typeof result.then === 'function') {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  // Invoke `next`, only once.\n  function done() {\n    if (!invoked) {\n      invoked = true\n\n      callback.apply(null, arguments)\n    }\n  }\n\n  // Invoke `done` with one value.\n  // Tracks if an error is passed, too.\n  function then(value) {\n    done(null, value)\n  }\n}\n","'use strict'\n\nvar bail = require('bail')\nvar buffer = require('is-buffer')\nvar extend = require('extend')\nvar plain = require('is-plain-obj')\nvar trough = require('trough')\nvar vfile = require('vfile')\n\n// Expose a frozen processor.\nmodule.exports = unified().freeze()\n\nvar slice = [].slice\nvar own = {}.hasOwnProperty\n\n// Process pipeline.\nvar pipeline = trough()\n  .use(pipelineParse)\n  .use(pipelineRun)\n  .use(pipelineStringify)\n\nfunction pipelineParse(p, ctx) {\n  ctx.tree = p.parse(ctx.file)\n}\n\nfunction pipelineRun(p, ctx, next) {\n  p.run(ctx.tree, ctx.file, done)\n\n  function done(error, tree, file) {\n    if (error) {\n      next(error)\n    } else {\n      ctx.tree = tree\n      ctx.file = file\n      next()\n    }\n  }\n}\n\nfunction pipelineStringify(p, ctx) {\n  var result = p.stringify(ctx.tree, ctx.file)\n\n  if (result === undefined || result === null) {\n    // Empty.\n  } else if (typeof result === 'string' || buffer(result)) {\n    if ('value' in ctx.file) {\n      ctx.file.value = result\n    }\n\n    ctx.file.contents = result\n  } else {\n    ctx.file.result = result\n  }\n}\n\n// Function to create the first processor.\nfunction unified() {\n  var attachers = []\n  var transformers = trough()\n  var namespace = {}\n  var freezeIndex = -1\n  var frozen\n\n  // Data management.\n  processor.data = data\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  processor.run = run\n  processor.runSync = runSync\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  function processor() {\n    var destination = unified()\n    var index = -1\n\n    while (++index < attachers.length) {\n      destination.use.apply(null, attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  // Freeze: used to signal a processor that has finished configuration.\n  //\n  // For example, take unified itself: it’s frozen.\n  // Plugins should not be added to it.\n  // Rather, it should be extended, by invoking it, before modifying it.\n  //\n  // In essence, always invoke this when exporting a processor.\n  function freeze() {\n    var values\n    var transformer\n\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      values = attachers[freezeIndex]\n\n      if (values[1] === false) {\n        continue\n      }\n\n      if (values[1] === true) {\n        values[1] = undefined\n      }\n\n      transformer = values[0].apply(processor, values.slice(1))\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Infinity\n\n    return processor\n  }\n\n  // Data management.\n  // Getter / setter for processor-specific informtion.\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  // Plugin management.\n  //\n  // Pass it:\n  // *   an attacher and options,\n  // *   a preset,\n  // *   a list of presets, attachers, and arguments (list of attachers and\n  //     options).\n  function use(value) {\n    var settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin.apply(null, arguments)\n    } else if (typeof value === 'object') {\n      if ('length' in value) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new Error('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = extend(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = extend(settings || {}, result.settings)\n      }\n    }\n\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if ('length' in value) {\n          addPlugin.apply(null, value)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new Error('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    function addList(plugins) {\n      var index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (typeof plugins === 'object' && 'length' in plugins) {\n        while (++index < plugins.length) {\n          add(plugins[index])\n        }\n      } else {\n        throw new Error('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    function addPlugin(plugin, value) {\n      var entry = find(plugin)\n\n      if (entry) {\n        if (plain(entry[1]) && plain(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        attachers.push(slice.call(arguments))\n      }\n    }\n  }\n\n  function find(plugin) {\n    var index = -1\n\n    while (++index < attachers.length) {\n      if (attachers[index][0] === plugin) {\n        return attachers[index]\n      }\n    }\n  }\n\n  // Parse a file (in string or vfile representation) into a unist node using\n  // the `Parser` on the processor.\n  function parse(doc) {\n    var file = vfile(doc)\n    var Parser\n\n    freeze()\n    Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      return new Parser(String(file), file).parse()\n    }\n\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  // Run transforms on a unist node representation of a file (in string or\n  // vfile representation), async.\n  function run(node, file, cb) {\n    assertNode(node)\n    freeze()\n\n    if (!cb && typeof file === 'function') {\n      cb = file\n      file = null\n    }\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      transformers.run(node, vfile(file), done)\n\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          cb(null, tree, file)\n        }\n      }\n    }\n  }\n\n  // Run transforms on a unist node representation of a file (in string or\n  // vfile representation), sync.\n  function runSync(node, file) {\n    var result\n    var complete\n\n    run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    return result\n\n    function done(error, tree) {\n      complete = true\n      result = tree\n      bail(error)\n    }\n  }\n\n  // Stringify a unist node representation of a file (in string or vfile\n  // representation) into a string using the `Compiler` on the processor.\n  function stringify(node, doc) {\n    var file = vfile(doc)\n    var Compiler\n\n    freeze()\n    Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      return new Compiler(node, file).compile()\n    }\n\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  // Parse a file (in string or vfile representation) into a unist node using\n  // the `Parser` on the processor, then run transforms on that node, and\n  // compile the resulting node using the `Compiler` on the processor, and\n  // store that result on the vfile.\n  function process(doc, cb) {\n    freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!cb) {\n      return new Promise(executor)\n    }\n\n    executor(null, cb)\n\n    function executor(resolve, reject) {\n      var file = vfile(doc)\n\n      pipeline.run(processor, {file: file}, done)\n\n      function done(error) {\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          cb(null, file)\n        }\n      }\n    }\n  }\n\n  // Process the given document (in string or vfile representation), sync.\n  function processSync(doc) {\n    var file\n    var complete\n\n    freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n    file = vfile(doc)\n\n    process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n// Check if `value` is a constructor.\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n// Check if `value` is an object with keys.\nfunction keys(value) {\n  var key\n  for (key in value) {\n    return true\n  }\n\n  return false\n}\n\n// Assert a parser is available.\nfunction assertParser(name, Parser) {\n  if (typeof Parser !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n// Assert a compiler is available.\nfunction assertCompiler(name, Compiler) {\n  if (typeof Compiler !== 'function') {\n    throw new Error('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n// Assert the processor is not frozen.\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot invoke `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by invoking it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n// Assert `node` is a unist node.\nfunction assertNode(node) {\n  if (!node || typeof node.type !== 'string') {\n    throw new Error('Expected node, got `' + node + '`')\n  }\n}\n\n// Assert that `complete` is `true`.\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n","'use strict'\n\nvar own = {}.hasOwnProperty\n\nmodule.exports = stringify\n\nfunction stringify(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if (own.call(value, 'position') || own.call(value, 'type')) {\n    return position(value.position)\n  }\n\n  // Position.\n  if (own.call(value, 'start') || own.call(value, 'end')) {\n    return position(value)\n  }\n\n  // Point.\n  if (own.call(value, 'line') || own.call(value, 'column')) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\nfunction point(point) {\n  if (!point || typeof point !== 'object') {\n    point = {}\n  }\n\n  return index(point.line) + ':' + index(point.column)\n}\n\nfunction position(pos) {\n  if (!pos || typeof pos !== 'object') {\n    pos = {}\n  }\n\n  return point(pos.start) + '-' + point(pos.end)\n}\n\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","'use strict'\n\nvar stringify = require('unist-util-stringify-position')\n\nmodule.exports = VMessage\n\n// Inherit from `Error#`.\nfunction VMessagePrototype() {}\nVMessagePrototype.prototype = Error.prototype\nVMessage.prototype = new VMessagePrototype()\n\n// Message properties.\nvar proto = VMessage.prototype\n\nproto.file = ''\nproto.name = ''\nproto.reason = ''\nproto.message = ''\nproto.stack = ''\nproto.fatal = null\nproto.column = null\nproto.line = null\n\n// Construct a new VMessage.\n//\n// Note: We cannot invoke `Error` on the created context, as that adds readonly\n// `line` and `column` attributes on Safari 9, thus throwing and failing the\n// data.\nfunction VMessage(reason, position, origin) {\n  var parts\n  var range\n  var location\n\n  if (typeof position === 'string') {\n    origin = position\n    position = null\n  }\n\n  parts = parseOrigin(origin)\n  range = stringify(position) || '1:1'\n\n  location = {\n    start: {line: null, column: null},\n    end: {line: null, column: null}\n  }\n\n  // Node.\n  if (position && position.position) {\n    position = position.position\n  }\n\n  if (position) {\n    // Position.\n    if (position.start) {\n      location = position\n      position = position.start\n    } else {\n      // Point.\n      location.start = position\n    }\n  }\n\n  if (reason.stack) {\n    this.stack = reason.stack\n    reason = reason.message\n  }\n\n  this.message = reason\n  this.name = range\n  this.reason = reason\n  this.line = position ? position.line : null\n  this.column = position ? position.column : null\n  this.location = location\n  this.source = parts[0]\n  this.ruleId = parts[1]\n}\n\nfunction parseOrigin(origin) {\n  var result = [null, null]\n  var index\n\n  if (typeof origin === 'string') {\n    index = origin.indexOf(':')\n\n    if (index === -1) {\n      result[1] = origin\n    } else {\n      result[0] = origin.slice(0, index)\n      result[1] = origin.slice(index + 1)\n    }\n  }\n\n  return result\n}\n","'use strict'\n\nmodule.exports = require('./lib')\n","'use strict'\n\nvar p = require('./minpath')\nvar proc = require('./minproc')\nvar buffer = require('is-buffer')\n\nmodule.exports = VFile\n\nvar own = {}.hasOwnProperty\n\n// Order of setting (least specific to most), we need this because otherwise\n// `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n// stem can be set.\nvar order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nVFile.prototype.toString = toString\n\n// Access full path (`~/index.min.js`).\nObject.defineProperty(VFile.prototype, 'path', {get: getPath, set: setPath})\n\n// Access parent path (`~`).\nObject.defineProperty(VFile.prototype, 'dirname', {\n  get: getDirname,\n  set: setDirname\n})\n\n// Access basename (`index.min.js`).\nObject.defineProperty(VFile.prototype, 'basename', {\n  get: getBasename,\n  set: setBasename\n})\n\n// Access extname (`.js`).\nObject.defineProperty(VFile.prototype, 'extname', {\n  get: getExtname,\n  set: setExtname\n})\n\n// Access stem (`index.min`).\nObject.defineProperty(VFile.prototype, 'stem', {get: getStem, set: setStem})\n\n// Construct a new file.\nfunction VFile(options) {\n  var prop\n  var index\n\n  if (!options) {\n    options = {}\n  } else if (typeof options === 'string' || buffer(options)) {\n    options = {contents: options}\n  } else if ('message' in options && 'messages' in options) {\n    return options\n  }\n\n  if (!(this instanceof VFile)) {\n    return new VFile(options)\n  }\n\n  this.data = {}\n  this.messages = []\n  this.history = []\n  this.cwd = proc.cwd()\n\n  // Set path related properties in the correct order.\n  index = -1\n\n  while (++index < order.length) {\n    prop = order[index]\n\n    if (own.call(options, prop)) {\n      this[prop] = options[prop]\n    }\n  }\n\n  // Set non-path related properties.\n  for (prop in options) {\n    if (order.indexOf(prop) < 0) {\n      this[prop] = options[prop]\n    }\n  }\n}\n\nfunction getPath() {\n  return this.history[this.history.length - 1]\n}\n\nfunction setPath(path) {\n  assertNonEmpty(path, 'path')\n\n  if (this.path !== path) {\n    this.history.push(path)\n  }\n}\n\nfunction getDirname() {\n  return typeof this.path === 'string' ? p.dirname(this.path) : undefined\n}\n\nfunction setDirname(dirname) {\n  assertPath(this.path, 'dirname')\n  this.path = p.join(dirname || '', this.basename)\n}\n\nfunction getBasename() {\n  return typeof this.path === 'string' ? p.basename(this.path) : undefined\n}\n\nfunction setBasename(basename) {\n  assertNonEmpty(basename, 'basename')\n  assertPart(basename, 'basename')\n  this.path = p.join(this.dirname || '', basename)\n}\n\nfunction getExtname() {\n  return typeof this.path === 'string' ? p.extname(this.path) : undefined\n}\n\nfunction setExtname(extname) {\n  assertPart(extname, 'extname')\n  assertPath(this.path, 'extname')\n\n  if (extname) {\n    if (extname.charCodeAt(0) !== 46 /* `.` */) {\n      throw new Error('`extname` must start with `.`')\n    }\n\n    if (extname.indexOf('.', 1) > -1) {\n      throw new Error('`extname` cannot contain multiple dots')\n    }\n  }\n\n  this.path = p.join(this.dirname, this.stem + (extname || ''))\n}\n\nfunction getStem() {\n  return typeof this.path === 'string'\n    ? p.basename(this.path, this.extname)\n    : undefined\n}\n\nfunction setStem(stem) {\n  assertNonEmpty(stem, 'stem')\n  assertPart(stem, 'stem')\n  this.path = p.join(this.dirname || '', stem + (this.extname || ''))\n}\n\n// Get the value of the file.\nfunction toString(encoding) {\n  return (this.contents || '').toString(encoding)\n}\n\n// Assert that `part` is not a path (i.e., does not contain `p.sep`).\nfunction assertPart(part, name) {\n  if (part && part.indexOf(p.sep) > -1) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + p.sep + '`'\n    )\n  }\n}\n\n// Assert that `part` is not empty.\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n// Assert `path` exists.\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n","'use strict'\n\nvar VMessage = require('vfile-message')\nvar VFile = require('./core.js')\n\nmodule.exports = VFile\n\nVFile.prototype.message = message\nVFile.prototype.info = info\nVFile.prototype.fail = fail\n\n// Create a message with `reason` at `position`.\n// When an error is passed in as `reason`, copies the stack.\nfunction message(reason, position, origin) {\n  var message = new VMessage(reason, position, origin)\n\n  if (this.path) {\n    message.name = this.path + ':' + message.name\n    message.file = this.path\n  }\n\n  message.fatal = false\n\n  this.messages.push(message)\n\n  return message\n}\n\n// Fail: creates a vmessage, associates it with the file, and throws it.\nfunction fail() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = true\n\n  throw message\n}\n\n// Info: creates a vmessage, associates it with the file, and marks the fatality\n// as null.\nfunction info() {\n  var message = this.message.apply(this, arguments)\n\n  message.fatal = null\n\n  return message\n}\n","'use strict'\n\n// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexports.basename = basename\nexports.dirname = dirname\nexports.extname = extname\nexports.join = join\nexports.sep = '/'\n\nfunction basename(path, ext) {\n  var start = 0\n  var end = -1\n  var index\n  var firstNonSlashEnd\n  var seenNonSlash\n  var extIndex\n\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  index = path.length\n\n  if (ext === undefined || !ext.length || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  firstNonSlashEnd = -1\n  extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\nfunction dirname(path) {\n  var end\n  var unmatchedSlash\n  var index\n\n  assertPath(path)\n\n  if (!path.length) {\n    return '.'\n  }\n\n  end = -1\n  index = path.length\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\nfunction extname(path) {\n  var startDot = -1\n  var startPart = 0\n  var end = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  var preDotState = 0\n  var unmatchedSlash\n  var code\n  var index\n\n  assertPath(path)\n\n  index = path.length\n\n  while (index--) {\n    code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\nfunction join() {\n  var index = -1\n  var joined\n\n  while (++index < arguments.length) {\n    assertPath(arguments[index])\n\n    if (arguments[index]) {\n      joined =\n        joined === undefined\n          ? arguments[index]\n          : joined + '/' + arguments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  var absolute\n  var value\n\n  assertPath(path)\n\n  absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  value = normalizeString(path, !absolute)\n\n  if (!value.length && !absolute) {\n    value = '.'\n  }\n\n  if (value.length && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n// Resolve `.` and `..` elements in a path with directory names.\nfunction normalizeString(path, allowAboveRoot) {\n  var result = ''\n  var lastSegmentLength = 0\n  var lastSlash = -1\n  var dots = 0\n  var index = -1\n  var code\n  var lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            /* istanbul ignore else - No clue how to cover it. */\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n","'use strict'\n\n// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexports.cwd = cwd\n\nfunction cwd() {\n  return '/'\n}\n","/*!\n * repeat-string <https://github.com/jonschlinkert/repeat-string>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\n/**\n * Results cache\n */\n\nvar res = '';\nvar cache;\n\n/**\n * Expose `repeat`\n */\n\nmodule.exports = repeat;\n\n/**\n * Repeat the given `string` the specified `number`\n * of times.\n *\n * **Example:**\n *\n * ```js\n * var repeat = require('repeat-string');\n * repeat('A', 5);\n * //=> AAAAA\n * ```\n *\n * @param {String} `string` The string to repeat\n * @param {Number} `number` The number of times to repeat the string\n * @return {String} Repeated string\n * @api public\n */\n\nfunction repeat(str, num) {\n  if (typeof str !== 'string') {\n    throw new TypeError('expected a string');\n  }\n\n  // cover common, quick use cases\n  if (num === 1) return str;\n  if (num === 2) return str + str;\n\n  var max = str.length * num;\n  if (cache !== str || typeof cache === 'undefined') {\n    cache = str;\n    res = '';\n  } else if (res.length >= max) {\n    return res.substr(0, max);\n  }\n\n  while (max > res.length && num > 1) {\n    if (num & 1) {\n      res += str;\n    }\n\n    num >>= 1;\n    str += str;\n  }\n\n  res += str;\n  res = res.substr(0, max);\n  return res;\n}\n","var parse = require('inline-style-parser');\n\n/**\n * Parses inline style to object.\n *\n * @example\n * // returns { 'line-height': '42' }\n * StyleToObject('line-height: 42;');\n *\n * @param  {String}      style      - The inline style.\n * @param  {Function}    [iterator] - The iterator function.\n * @return {null|Object}\n */\nfunction StyleToObject(style, iterator) {\n  var output = null;\n  if (!style || typeof style !== 'string') {\n    return output;\n  }\n\n  var declaration;\n  var declarations = parse(style);\n  var hasIterator = typeof iterator === 'function';\n  var property;\n  var value;\n\n  for (var i = 0, len = declarations.length; i < len; i++) {\n    declaration = declarations[i];\n    property = declaration.property;\n    value = declaration.value;\n\n    if (hasIterator) {\n      iterator(property, value, declaration);\n    } else if (value) {\n      output || (output = {});\n      output[property] = value;\n    }\n  }\n\n  return output;\n}\n\nmodule.exports = StyleToObject;\n","function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nmodule.exports = _arrayLikeToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nmodule.exports = _arrayWithHoles, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}\n\nmodule.exports = _createForOfIteratorHelper, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var superPropBase = require(\"./superPropBase.js\");\n\nfunction _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    module.exports = _get = Reflect.get.bind(), module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  } else {\n    module.exports = _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n\n      return desc.value;\n    }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n  }\n\n  return _get.apply(this, arguments);\n}\n\nmodule.exports = _get, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nmodule.exports = _iterableToArrayLimit, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableRest, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayWithHoles = require(\"./arrayWithHoles.js\");\n\nvar iterableToArrayLimit = require(\"./iterableToArrayLimit.js\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray.js\");\n\nvar nonIterableRest = require(\"./nonIterableRest.js\");\n\nfunction _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}\n\nmodule.exports = _slicedToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var getPrototypeOf = require(\"./getPrototypeOf.js\");\n\nfunction _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n\n  return object;\n}\n\nmodule.exports = _superPropBase, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var arrayLikeToArray = require(\"./arrayLikeToArray.js\");\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}\n\nmodule.exports = _unsupportedIterableToArray, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","/**\n * @typedef {Object} StringifyOptions\n * @property {boolean} [padLeft=true] Whether to pad a space before a token (`boolean`, default: `true`).\n * @property {boolean} [padRight=false] Whether to pad a space after a token (`boolean`, default: `false`).\n */\n\n/**\n * Parse comma separated tokens to an array.\n *\n * @param {string} value\n * @returns {Array.<string>}\n */\nexport function parse(value) {\n  /** @type {Array.<string>} */\n  var tokens = []\n  var input = String(value || '')\n  var index = input.indexOf(',')\n  var start = 0\n  /** @type {boolean} */\n  var end\n  /** @type {string} */\n  var token\n\n  while (!end) {\n    if (index === -1) {\n      index = input.length\n      end = true\n    }\n\n    token = input.slice(start, index).trim()\n\n    if (token || !end) {\n      tokens.push(token)\n    }\n\n    start = index + 1\n    index = input.indexOf(',', start)\n  }\n\n  return tokens\n}\n\n/**\n * Serialize an array of strings to comma separated tokens.\n *\n * @param {Array.<string|number>} values\n * @param {StringifyOptions} [options]\n * @returns {string}\n */\nexport function stringify(values, options) {\n  var settings = options || {}\n\n  // Ensure the last empty entry is seen.\n  if (values[values.length - 1] === '') {\n    values = values.concat('')\n  }\n\n  return values\n    .join(\n      (settings.padRight ? ' ' : '') +\n        ',' +\n        (settings.padLeft === false ? '' : ' ')\n    )\n    .trim()\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('hast').Properties} Properties\n * @typedef {import('hast').Element} Element\n */\n\nvar search = /[#.]/g\n\n/**\n * Create a hast element from a simple CSS selector.\n *\n * @param selector A simple CSS selector.\n *   Can contain a tag-name (`foo`), classes (`.bar`), and an ID (`#baz`).\n *   Multiple classes are allowed.\n *   Uses the last ID if multiple IDs are found.\n * @param [defaultTagName='div'] Tag name to use if `selector` does not specify one.\n */\nexport const parseSelector =\n  /**\n   * @type {(\n   *  <Selector extends string, DefaultTagName extends string = 'div'>(selector?: Selector, defaultTagName?: DefaultTagName) => Element & {tagName: import('./extract.js').ExtractTagName<Selector, DefaultTagName>}\n   * )}\n   */\n  (\n    /**\n     * @param {string} [selector]\n     * @param {string} [defaultTagName='div']\n     * @returns {Element}\n     */\n    function (selector, defaultTagName = 'div') {\n      var value = selector || ''\n      /** @type {Properties} */\n      var props = {}\n      var start = 0\n      /** @type {string} */\n      var subvalue\n      /** @type {string} */\n      var previous\n      /** @type {RegExpMatchArray} */\n      var match\n\n      while (start < value.length) {\n        search.lastIndex = start\n        match = search.exec(value)\n        subvalue = value.slice(start, match ? match.index : value.length)\n\n        if (subvalue) {\n          if (!previous) {\n            defaultTagName = subvalue\n          } else if (previous === '#') {\n            props.id = subvalue\n          } else if (Array.isArray(props.className)) {\n            props.className.push(subvalue)\n          } else {\n            props.className = [subvalue]\n          }\n\n          start += subvalue.length\n        }\n\n        if (match) {\n          previous = match[0]\n          start++\n        }\n      }\n\n      return {\n        type: 'element',\n        tagName: defaultTagName,\n        properties: props,\n        children: []\n      }\n    }\n  )\n","/**\n * @typedef {import('hast').Root} Root\n * @typedef {import('hast').Element} Element\n * @typedef {import('hast').Properties} Properties\n * @typedef {Root['children'][number]} Child\n * @typedef {Child|Root} Node\n * @typedef {import('property-information').Info} Info\n * @typedef {import('property-information').Schema} Schema\n *\n * @typedef {Root|Element} HResult\n * @typedef {string|number} HStyleValue\n * @typedef {Object.<string, HStyleValue>} HStyle\n * @typedef {string|number|boolean|null|undefined} HPrimitiveValue\n * @typedef {Array.<string|number>} HArrayValue\n * @typedef {HPrimitiveValue|HArrayValue} HPropertyValue\n * @typedef {{[property: string]: HPropertyValue|HStyle}} HProperties\n *\n * @typedef {string|number|null|undefined} HPrimitiveChild\n * @typedef {Array.<Node|HPrimitiveChild>} HArrayChild\n * @typedef {Node|HPrimitiveChild|HArrayChild} HChild\n */\n\nimport {find, normalize} from 'property-information'\nimport {parseSelector} from 'hast-util-parse-selector'\nimport {parse as spaces} from 'space-separated-tokens'\nimport {parse as commas} from 'comma-separated-tokens'\n\nconst buttonTypes = new Set(['menu', 'submit', 'reset', 'button'])\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Schema} schema\n * @param {string} defaultTagName\n * @param {Array.<string>} [caseSensitive]\n */\nexport function core(schema, defaultTagName, caseSensitive) {\n  const adjust = caseSensitive && createAdjustMap(caseSensitive)\n\n  const h =\n    /**\n     * @type {{\n     *   (): Root\n     *   (selector: null|undefined, ...children: HChild[]): Root\n     *   (selector: string, properties?: HProperties, ...children: HChild[]): Element\n     *   (selector: string, ...children: HChild[]): Element\n     * }}\n     */\n    (\n      /**\n       * Hyperscript compatible DSL for creating virtual hast trees.\n       *\n       * @param {string|null} [selector]\n       * @param {HProperties|HChild} [properties]\n       * @param {HChild[]} children\n       * @returns {HResult}\n       */\n      function (selector, properties, ...children) {\n        let index = -1\n        /** @type {HResult} */\n        let node\n\n        if (selector === undefined || selector === null) {\n          node = {type: 'root', children: []}\n          // @ts-expect-error Properties are not supported for roots.\n          children.unshift(properties)\n        } else {\n          node = parseSelector(selector, defaultTagName)\n          // Normalize the name.\n          node.tagName = node.tagName.toLowerCase()\n          if (adjust && own.call(adjust, node.tagName)) {\n            node.tagName = adjust[node.tagName]\n          }\n\n          // Handle props.\n          if (isProperties(properties, node.tagName)) {\n            /** @type {string} */\n            let key\n\n            for (key in properties) {\n              if (own.call(properties, key)) {\n                // @ts-expect-error `node.properties` is set.\n                addProperty(schema, node.properties, key, properties[key])\n              }\n            }\n          } else {\n            children.unshift(properties)\n          }\n        }\n\n        // Handle children.\n        while (++index < children.length) {\n          addChild(node.children, children[index])\n        }\n\n        if (node.type === 'element' && node.tagName === 'template') {\n          node.content = {type: 'root', children: node.children}\n          node.children = []\n        }\n\n        return node\n      }\n    )\n\n  return h\n}\n\n/**\n * @param {HProperties|HChild} value\n * @param {string} name\n * @returns {value is HProperties}\n */\nfunction isProperties(value, name) {\n  if (\n    value === null ||\n    value === undefined ||\n    typeof value !== 'object' ||\n    Array.isArray(value)\n  ) {\n    return false\n  }\n\n  if (name === 'input' || !value.type || typeof value.type !== 'string') {\n    return true\n  }\n\n  if ('children' in value && Array.isArray(value.children)) {\n    return false\n  }\n\n  if (name === 'button') {\n    return buttonTypes.has(value.type.toLowerCase())\n  }\n\n  return !('value' in value)\n}\n\n/**\n * @param {Schema} schema\n * @param {Properties} properties\n * @param {string} key\n * @param {HStyle|HPropertyValue} value\n * @returns {void}\n */\nfunction addProperty(schema, properties, key, value) {\n  const info = find(schema, key)\n  let index = -1\n  /** @type {HPropertyValue} */\n  let result\n\n  // Ignore nullish and NaN values.\n  if (value === undefined || value === null) return\n\n  if (typeof value === 'number') {\n    // Ignore NaN.\n    if (Number.isNaN(value)) return\n\n    result = value\n  }\n  // Booleans.\n  else if (typeof value === 'boolean') {\n    result = value\n  }\n  // Handle list values.\n  else if (typeof value === 'string') {\n    if (info.spaceSeparated) {\n      result = spaces(value)\n    } else if (info.commaSeparated) {\n      result = commas(value)\n    } else if (info.commaOrSpaceSeparated) {\n      result = spaces(commas(value).join(' '))\n    } else {\n      result = parsePrimitive(info, info.property, value)\n    }\n  } else if (Array.isArray(value)) {\n    result = value.concat()\n  } else {\n    result = info.property === 'style' ? style(value) : String(value)\n  }\n\n  if (Array.isArray(result)) {\n    /** @type {Array.<string|number>} */\n    const finalResult = []\n\n    while (++index < result.length) {\n      // @ts-expect-error Assume no booleans in array.\n      finalResult[index] = parsePrimitive(info, info.property, result[index])\n    }\n\n    result = finalResult\n  }\n\n  // Class names (which can be added both on the `selector` and here).\n  if (info.property === 'className' && Array.isArray(properties.className)) {\n    // @ts-expect-error Assume no booleans in `className`.\n    result = properties.className.concat(result)\n  }\n\n  properties[info.property] = result\n}\n\n/**\n * @param {Array.<Child>} nodes\n * @param {HChild} value\n * @returns {void}\n */\nfunction addChild(nodes, value) {\n  let index = -1\n\n  if (value === undefined || value === null) {\n    // Empty.\n  } else if (typeof value === 'string' || typeof value === 'number') {\n    nodes.push({type: 'text', value: String(value)})\n  } else if (Array.isArray(value)) {\n    while (++index < value.length) {\n      addChild(nodes, value[index])\n    }\n  } else if (typeof value === 'object' && 'type' in value) {\n    if (value.type === 'root') {\n      addChild(nodes, value.children)\n    } else {\n      nodes.push(value)\n    }\n  } else {\n    throw new Error('Expected node, nodes, or string, got `' + value + '`')\n  }\n}\n\n/**\n * Parse a single primitives.\n *\n * @param {Info} info\n * @param {string} name\n * @param {HPrimitiveValue} value\n * @returns {HPrimitiveValue}\n */\nfunction parsePrimitive(info, name, value) {\n  if (typeof value === 'string') {\n    if (info.number && value && !Number.isNaN(Number(value))) {\n      return Number(value)\n    }\n\n    if (\n      (info.boolean || info.overloadedBoolean) &&\n      (value === '' || normalize(value) === normalize(name))\n    ) {\n      return true\n    }\n  }\n\n  return value\n}\n\n/**\n * @param {HStyle} value\n * @returns {string}\n */\nfunction style(value) {\n  /** @type {Array.<string>} */\n  const result = []\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      result.push([key, value[key]].join(': '))\n    }\n  }\n\n  return result.join('; ')\n}\n\n/**\n * @param {Array.<string>} values\n * @returns {Object.<string, string>}\n */\nfunction createAdjustMap(values) {\n  /** @type {Object.<string, string>} */\n  const result = {}\n  let index = -1\n\n  while (++index < values.length) {\n    result[values[index].toLowerCase()] = values[index]\n  }\n\n  return result\n}\n","/**\n * @typedef {import('./core.js').HChild} Child Acceptable child value\n * @typedef {import('./core.js').HProperties} Properties Acceptable properties value.\n *\n * @typedef {import('./jsx-classic').Element} h.JSX.Element\n * @typedef {import('./jsx-classic').IntrinsicAttributes} h.JSX.IntrinsicAttributes\n * @typedef {import('./jsx-classic').IntrinsicElements} h.JSX.IntrinsicElements\n * @typedef {import('./jsx-classic').ElementChildrenAttribute} h.JSX.ElementChildrenAttribute\n */\n\nimport {html} from 'property-information'\nimport {core} from './core.js'\n\nexport const h = core(html, 'div')\n","/**\n * List of legacy HTML named character references that don’t need a trailing semicolon.\n *\n * @type {Array<string>}\n */\nexport const characterEntitiesLegacy = [\n  'AElig',\n  'AMP',\n  'Aacute',\n  'Acirc',\n  'Agrave',\n  'Aring',\n  'Atilde',\n  'Auml',\n  'COPY',\n  'Ccedil',\n  'ETH',\n  'Eacute',\n  'Ecirc',\n  'Egrave',\n  'Euml',\n  'GT',\n  'Iacute',\n  'Icirc',\n  'Igrave',\n  'Iuml',\n  'LT',\n  'Ntilde',\n  'Oacute',\n  'Ocirc',\n  'Ograve',\n  'Oslash',\n  'Otilde',\n  'Ouml',\n  'QUOT',\n  'REG',\n  'THORN',\n  'Uacute',\n  'Ucirc',\n  'Ugrave',\n  'Uuml',\n  'Yacute',\n  'aacute',\n  'acirc',\n  'acute',\n  'aelig',\n  'agrave',\n  'amp',\n  'aring',\n  'atilde',\n  'auml',\n  'brvbar',\n  'ccedil',\n  'cedil',\n  'cent',\n  'copy',\n  'curren',\n  'deg',\n  'divide',\n  'eacute',\n  'ecirc',\n  'egrave',\n  'eth',\n  'euml',\n  'frac12',\n  'frac14',\n  'frac34',\n  'gt',\n  'iacute',\n  'icirc',\n  'iexcl',\n  'igrave',\n  'iquest',\n  'iuml',\n  'laquo',\n  'lt',\n  'macr',\n  'micro',\n  'middot',\n  'nbsp',\n  'not',\n  'ntilde',\n  'oacute',\n  'ocirc',\n  'ograve',\n  'ordf',\n  'ordm',\n  'oslash',\n  'otilde',\n  'ouml',\n  'para',\n  'plusmn',\n  'pound',\n  'quot',\n  'raquo',\n  'reg',\n  'sect',\n  'shy',\n  'sup1',\n  'sup2',\n  'sup3',\n  'szlig',\n  'thorn',\n  'times',\n  'uacute',\n  'ucirc',\n  'ugrave',\n  'uml',\n  'uuml',\n  'yacute',\n  'yen',\n  'yuml'\n]\n","/**\n * Map of invalid numeric character references to their replacements, according to HTML.\n *\n * @type {Record<number, string>}\n */\nexport const characterReferenceInvalid = {\n  0: '�',\n  128: '€',\n  130: '‚',\n  131: 'ƒ',\n  132: '„',\n  133: '…',\n  134: '†',\n  135: '‡',\n  136: 'ˆ',\n  137: '‰',\n  138: 'Š',\n  139: '‹',\n  140: 'Œ',\n  142: 'Ž',\n  145: '‘',\n  146: '’',\n  147: '“',\n  148: '”',\n  149: '•',\n  150: '–',\n  151: '—',\n  152: '˜',\n  153: '™',\n  154: 'š',\n  155: '›',\n  156: 'œ',\n  158: 'ž',\n  159: 'Ÿ'\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is decimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is a decimal\n */\nexport function isDecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return code >= 48 && code <= 57 /* 0-9 */\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is hexadecimal.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is hexadecimal\n */\nexport function isHexadecimal(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 /* a */ && code <= 102) /* z */ ||\n    (code >= 65 /* A */ && code <= 70) /* Z */ ||\n    (code >= 48 /* A */ && code <= 57) /* Z */\n  )\n}\n","import {isAlphabetical} from 'is-alphabetical'\nimport {isDecimal} from 'is-decimal'\n\n/**\n * Check if the given character code, or the character code at the first\n * character, is alphanumerical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphanumerical.\n */\nexport function isAlphanumerical(character) {\n  return isAlphabetical(character) || isDecimal(character)\n}\n","/**\n * Check if the given character code, or the character code at the first\n * character, is alphabetical.\n *\n * @param {string|number} character\n * @returns {boolean} Whether `character` is alphabetical.\n */\nexport function isAlphabetical(character) {\n  const code =\n    typeof character === 'string' ? character.charCodeAt(0) : character\n\n  return (\n    (code >= 97 && code <= 122) /* a-z */ ||\n    (code >= 65 && code <= 90) /* A-Z */\n  )\n}\n","/**\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\nimport {characterEntitiesLegacy} from 'character-entities-legacy'\nimport {characterReferenceInvalid} from 'character-reference-invalid'\nimport {isDecimal} from 'is-decimal'\nimport {isHexadecimal} from 'is-hexadecimal'\nimport {isAlphanumerical} from 'is-alphanumerical'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\n\nconst fromCharCode = String.fromCharCode\n\n// Warning messages.\nconst messages = [\n  '',\n  /* 1: Non terminated (named) */\n  'Named character references must be terminated by a semicolon',\n  /* 2: Non terminated (numeric) */\n  'Numeric character references must be terminated by a semicolon',\n  /* 3: Empty (named) */\n  'Named character references cannot be empty',\n  /* 4: Empty (numeric) */\n  'Numeric character references cannot be empty',\n  /* 5: Unknown (named) */\n  'Named character references must be known',\n  /* 6: Disallowed (numeric) */\n  'Numeric character references cannot be disallowed',\n  /* 7: Prohibited (numeric) */\n  'Numeric character references cannot be outside the permissible Unicode range'\n]\n\n/**\n * Parse HTML character references.\n *\n * @param {string} value\n * @param {import('../index.js').Options} [options={}]\n */\nexport function parseEntities(value, options = {}) {\n  const additional =\n    typeof options.additional === 'string'\n      ? options.additional.charCodeAt(0)\n      : options.additional\n  /** @type {string[]} */\n  const result = []\n  let index = 0\n  let lines = -1\n  let queue = ''\n  /** @type {Point|undefined} */\n  let point\n  /** @type {number[]|undefined} */\n  let indent\n\n  if (options.position) {\n    if ('start' in options.position || 'indent' in options.position) {\n      indent = options.position.indent\n      point = options.position.start\n    } else {\n      point = options.position\n    }\n  }\n\n  let line = (point ? point.line : 0) || 1\n  let column = (point ? point.column : 0) || 1\n\n  // Cache the current point.\n  let previous = now()\n  /** @type {number|undefined} */\n  let character\n\n  // Ensure the algorithm walks over the first character (inclusive).\n  index--\n\n  while (++index <= value.length) {\n    // If the previous character was a newline.\n    if (character === 10 /* `\\n` */) {\n      column = (indent ? indent[lines] : 0) || 1\n    }\n\n    character = value.charCodeAt(index)\n\n    if (character === 38 /* `&` */) {\n      const following = value.charCodeAt(index + 1)\n\n      // The behavior depends on the identity of the next character.\n      if (\n        following === 9 /* `\\t` */ ||\n        following === 10 /* `\\n` */ ||\n        following === 12 /* `\\f` */ ||\n        following === 32 /* ` ` */ ||\n        following === 38 /* `&` */ ||\n        following === 60 /* `<` */ ||\n        Number.isNaN(following) ||\n        (additional && following === additional)\n      ) {\n        // Not a character reference.\n        // No characters are consumed, and nothing is returned.\n        // This is not an error, either.\n        queue += fromCharCode(character)\n        column++\n        continue\n      }\n\n      const start = index + 1\n      let begin = start\n      let end = start\n      /** @type {string} */\n      let type\n\n      if (following === 35 /* `#` */) {\n        // Numerical reference.\n        end = ++begin\n\n        // The behavior further depends on the next character.\n        const following = value.charCodeAt(end)\n\n        if (following === 88 /* `X` */ || following === 120 /* `x` */) {\n          // ASCII hexadecimal digits.\n          type = 'hexadecimal'\n          end = ++begin\n        } else {\n          // ASCII decimal digits.\n          type = 'decimal'\n        }\n      } else {\n        // Named reference.\n        type = 'named'\n      }\n\n      let characterReferenceCharacters = ''\n      let characterReference = ''\n      let characters = ''\n      // Each type of character reference accepts different characters.\n      // This test is used to detect whether a reference has ended (as the semicolon\n      // is not strictly needed).\n      const test =\n        type === 'named'\n          ? isAlphanumerical\n          : type === 'decimal'\n          ? isDecimal\n          : isHexadecimal\n\n      end--\n\n      while (++end <= value.length) {\n        const following = value.charCodeAt(end)\n\n        if (!test(following)) {\n          break\n        }\n\n        characters += fromCharCode(following)\n\n        // Check if we can match a legacy named reference.\n        // If so, we cache that as the last viable named reference.\n        // This ensures we do not need to walk backwards later.\n        if (type === 'named' && characterEntitiesLegacy.includes(characters)) {\n          characterReferenceCharacters = characters\n          // @ts-expect-error: always able to decode.\n          characterReference = decodeNamedCharacterReference(characters)\n        }\n      }\n\n      let terminated = value.charCodeAt(end) === 59 /* `;` */\n\n      if (terminated) {\n        end++\n\n        const namedReference =\n          type === 'named' ? decodeNamedCharacterReference(characters) : false\n\n        if (namedReference) {\n          characterReferenceCharacters = characters\n          characterReference = namedReference\n        }\n      }\n\n      let diff = 1 + end - start\n      let reference = ''\n\n      if (!terminated && options.nonTerminated === false) {\n        // Empty.\n      } else if (!characters) {\n        // An empty (possible) reference is valid, unless it’s numeric (thus an\n        // ampersand followed by an octothorp).\n        if (type !== 'named') {\n          warning(4 /* Empty (numeric) */, diff)\n        }\n      } else if (type === 'named') {\n        // An ampersand followed by anything unknown, and not terminated, is\n        // invalid.\n        if (terminated && !characterReference) {\n          warning(5 /* Unknown (named) */, 1)\n        } else {\n          // If there’s something after an named reference which is not known,\n          // cap the reference.\n          if (characterReferenceCharacters !== characters) {\n            end = begin + characterReferenceCharacters.length\n            diff = 1 + end - begin\n            terminated = false\n          }\n\n          // If the reference is not terminated, warn.\n          if (!terminated) {\n            const reason = characterReferenceCharacters\n              ? 1 /* Non terminated (named) */\n              : 3 /* Empty (named) */\n\n            if (options.attribute) {\n              const following = value.charCodeAt(end)\n\n              if (following === 61 /* `=` */) {\n                warning(reason, diff)\n                characterReference = ''\n              } else if (isAlphanumerical(following)) {\n                characterReference = ''\n              } else {\n                warning(reason, diff)\n              }\n            } else {\n              warning(reason, diff)\n            }\n          }\n        }\n\n        reference = characterReference\n      } else {\n        if (!terminated) {\n          // All nonterminated numeric references are not rendered, and emit a\n          // warning.\n          warning(2 /* Non terminated (numeric) */, diff)\n        }\n\n        // When terminated and numerical, parse as either hexadecimal or\n        // decimal.\n        let referenceCode = Number.parseInt(\n          characters,\n          type === 'hexadecimal' ? 16 : 10\n        )\n\n        // Emit a warning when the parsed number is prohibited, and replace with\n        // replacement character.\n        if (prohibited(referenceCode)) {\n          warning(7 /* Prohibited (numeric) */, diff)\n          reference = fromCharCode(65533 /* `�` */)\n        } else if (referenceCode in characterReferenceInvalid) {\n          // Emit a warning when the parsed number is disallowed, and replace by\n          // an alternative.\n          warning(6 /* Disallowed (numeric) */, diff)\n          reference = characterReferenceInvalid[referenceCode]\n        } else {\n          // Parse the number.\n          let output = ''\n\n          // Emit a warning when the parsed number should not be used.\n          if (disallowed(referenceCode)) {\n            warning(6 /* Disallowed (numeric) */, diff)\n          }\n\n          // Serialize the number.\n          if (referenceCode > 0xffff) {\n            referenceCode -= 0x10000\n            output += fromCharCode((referenceCode >>> (10 & 0x3ff)) | 0xd800)\n            referenceCode = 0xdc00 | (referenceCode & 0x3ff)\n          }\n\n          reference = output + fromCharCode(referenceCode)\n        }\n      }\n\n      // Found it!\n      // First eat the queued characters as normal text, then eat a reference.\n      if (reference) {\n        flush()\n\n        previous = now()\n        index = end - 1\n        column += end - start + 1\n        result.push(reference)\n        const next = now()\n        next.offset++\n\n        if (options.reference) {\n          options.reference.call(\n            options.referenceContext,\n            reference,\n            {start: previous, end: next},\n            value.slice(start - 1, end)\n          )\n        }\n\n        previous = next\n      } else {\n        // If we could not find a reference, queue the checked characters (as\n        // normal characters), and move the pointer to their end.\n        // This is possible because we can be certain neither newlines nor\n        // ampersands are included.\n        characters = value.slice(start - 1, end)\n        queue += characters\n        column += characters.length\n        index = end - 1\n      }\n    } else {\n      // Handle anything other than an ampersand, including newlines and EOF.\n      if (character === 10 /* `\\n` */) {\n        line++\n        lines++\n        column = 0\n      }\n\n      if (Number.isNaN(character)) {\n        flush()\n      } else {\n        queue += fromCharCode(character)\n        column++\n      }\n    }\n  }\n\n  // Return the reduced nodes.\n  return result.join('')\n\n  // Get current position.\n  function now() {\n    return {\n      line,\n      column,\n      offset: index + ((point ? point.offset : 0) || 0)\n    }\n  }\n\n  /**\n   * Handle the warning.\n   *\n   * @param {1|2|3|4|5|6|7} code\n   * @param {number} offset\n   */\n  function warning(code, offset) {\n    /** @type {ReturnType<now>} */\n    let position\n\n    if (options.warning) {\n      position = now()\n      position.column += offset\n      position.offset += offset\n\n      options.warning.call(\n        options.warningContext,\n        messages[code],\n        position,\n        code\n      )\n    }\n  }\n\n  /**\n   * Flush `queue` (normal text).\n   * Macro invoked before each reference and at the end of `value`.\n   * Does nothing when `queue` is empty.\n   */\n  function flush() {\n    if (queue) {\n      result.push(queue)\n\n      if (options.text) {\n        options.text.call(options.textContext, queue, {\n          start: previous,\n          end: now()\n        })\n      }\n\n      queue = ''\n    }\n  }\n}\n\n/**\n * Check if `character` is outside the permissible unicode range.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction prohibited(code) {\n  return (code >= 0xd800 && code <= 0xdfff) || code > 0x10ffff\n}\n\n/**\n * Check if `character` is disallowed.\n *\n * @param {number} code\n * @returns {boolean}\n */\nfunction disallowed(code) {\n  return (\n    (code >= 0x0001 && code <= 0x0008) ||\n    code === 0x000b ||\n    (code >= 0x000d && code <= 0x001f) ||\n    (code >= 0x007f && code <= 0x009f) ||\n    (code >= 0xfdd0 && code <= 0xfdef) ||\n    (code & 0xffff) === 0xffff ||\n    (code & 0xffff) === 0xfffe\n  )\n}\n","/**\n * @typedef {import('./info.js').Info} Info\n * @typedef {Record<string, Info>} Properties\n * @typedef {Record<string, string>} Normal\n */\n\nexport class Schema {\n  /**\n   * @constructor\n   * @param {Properties} property\n   * @param {Normal} normal\n   * @param {string} [space]\n   */\n  constructor(property, normal, space) {\n    this.property = property\n    this.normal = normal\n    if (space) {\n      this.space = space\n    }\n  }\n}\n\n/** @type {Properties} */\nSchema.prototype.property = {}\n/** @type {Normal} */\nSchema.prototype.normal = {}\n/** @type {string|null} */\nSchema.prototype.space = null\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n */\n\nimport {Schema} from './schema.js'\n\n/**\n * @param {Schema[]} definitions\n * @param {string} [space]\n * @returns {Schema}\n */\nexport function merge(definitions, space) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  let index = -1\n\n  while (++index < definitions.length) {\n    Object.assign(property, definitions[index].property)\n    Object.assign(normal, definitions[index].normal)\n  }\n\n  return new Schema(property, normal, space)\n}\n","/**\n * @typedef {import('./schema.js').Properties} Properties\n * @typedef {import('./schema.js').Normal} Normal\n *\n * @typedef {Record<string, string>} Attributes\n *\n * @typedef {Object} Definition\n * @property {Record<string, number|null>} properties\n * @property {(attributes: Attributes, property: string) => string} transform\n * @property {string} [space]\n * @property {Attributes} [attributes]\n * @property {Array<string>} [mustUseProperty]\n */\n\nimport {normalize} from '../normalize.js'\nimport {Schema} from './schema.js'\nimport {DefinedInfo} from './defined-info.js'\n\nconst own = {}.hasOwnProperty\n\n/**\n * @param {Definition} definition\n * @returns {Schema}\n */\nexport function create(definition) {\n  /** @type {Properties} */\n  const property = {}\n  /** @type {Normal} */\n  const normal = {}\n  /** @type {string} */\n  let prop\n\n  for (prop in definition.properties) {\n    if (own.call(definition.properties, prop)) {\n      const value = definition.properties[prop]\n      const info = new DefinedInfo(\n        prop,\n        definition.transform(definition.attributes || {}, prop),\n        value,\n        definition.space\n      )\n\n      if (\n        definition.mustUseProperty &&\n        definition.mustUseProperty.includes(prop)\n      ) {\n        info.mustUseProperty = true\n      }\n\n      property[prop] = info\n\n      normal[normalize(prop)] = prop\n      normal[normalize(info.attribute)] = prop\n    }\n  }\n\n  return new Schema(property, normal, definition.space)\n}\n","import {create} from './util/create.js'\n\nexport const xlink = create({\n  space: 'xlink',\n  transform(_, prop) {\n    return 'xlink:' + prop.slice(5).toLowerCase()\n  },\n  properties: {\n    xLinkActuate: null,\n    xLinkArcRole: null,\n    xLinkHref: null,\n    xLinkRole: null,\n    xLinkShow: null,\n    xLinkTitle: null,\n    xLinkType: null\n  }\n})\n","import {create} from './util/create.js'\n\nexport const xml = create({\n  space: 'xml',\n  transform(_, prop) {\n    return 'xml:' + prop.slice(3).toLowerCase()\n  },\n  properties: {xmlLang: null, xmlBase: null, xmlSpace: null}\n})\n","/**\n * @param {Record<string, string>} attributes\n * @param {string} attribute\n * @returns {string}\n */\nexport function caseSensitiveTransform(attributes, attribute) {\n  return attribute in attributes ? attributes[attribute] : attribute\n}\n","import {caseSensitiveTransform} from './case-sensitive-transform.js'\n\n/**\n * @param {Record<string, string>} attributes\n * @param {string} property\n * @returns {string}\n */\nexport function caseInsensitiveTransform(attributes, property) {\n  return caseSensitiveTransform(attributes, property.toLowerCase())\n}\n","import {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const xmlns = create({\n  space: 'xmlns',\n  attributes: {xmlnsxlink: 'xmlns:xlink'},\n  transform: caseInsensitiveTransform,\n  properties: {xmlns: null, xmlnsXLink: null}\n})\n","import {booleanish, number, spaceSeparated} from './util/types.js'\nimport {create} from './util/create.js'\n\nexport const aria = create({\n  transform(_, prop) {\n    return prop === 'role' ? prop : 'aria-' + prop.slice(4).toLowerCase()\n  },\n  properties: {\n    ariaActiveDescendant: null,\n    ariaAtomic: booleanish,\n    ariaAutoComplete: null,\n    ariaBusy: booleanish,\n    ariaChecked: booleanish,\n    ariaColCount: number,\n    ariaColIndex: number,\n    ariaColSpan: number,\n    ariaControls: spaceSeparated,\n    ariaCurrent: null,\n    ariaDescribedBy: spaceSeparated,\n    ariaDetails: null,\n    ariaDisabled: booleanish,\n    ariaDropEffect: spaceSeparated,\n    ariaErrorMessage: null,\n    ariaExpanded: booleanish,\n    ariaFlowTo: spaceSeparated,\n    ariaGrabbed: booleanish,\n    ariaHasPopup: null,\n    ariaHidden: booleanish,\n    ariaInvalid: null,\n    ariaKeyShortcuts: null,\n    ariaLabel: null,\n    ariaLabelledBy: spaceSeparated,\n    ariaLevel: number,\n    ariaLive: null,\n    ariaModal: booleanish,\n    ariaMultiLine: booleanish,\n    ariaMultiSelectable: booleanish,\n    ariaOrientation: null,\n    ariaOwns: spaceSeparated,\n    ariaPlaceholder: null,\n    ariaPosInSet: number,\n    ariaPressed: booleanish,\n    ariaReadOnly: booleanish,\n    ariaRelevant: null,\n    ariaRequired: booleanish,\n    ariaRoleDescription: spaceSeparated,\n    ariaRowCount: number,\n    ariaRowIndex: number,\n    ariaRowSpan: number,\n    ariaSelected: booleanish,\n    ariaSetSize: number,\n    ariaSort: null,\n    ariaValueMax: number,\n    ariaValueMin: number,\n    ariaValueNow: number,\n    ariaValueText: null,\n    role: null\n  }\n})\n","import {\n  boolean,\n  overloadedBoolean,\n  booleanish,\n  number,\n  spaceSeparated,\n  commaSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseInsensitiveTransform} from './util/case-insensitive-transform.js'\n\nexport const html = create({\n  space: 'html',\n  attributes: {\n    acceptcharset: 'accept-charset',\n    classname: 'class',\n    htmlfor: 'for',\n    httpequiv: 'http-equiv'\n  },\n  transform: caseInsensitiveTransform,\n  mustUseProperty: ['checked', 'multiple', 'muted', 'selected'],\n  properties: {\n    // Standard Properties.\n    abbr: null,\n    accept: commaSeparated,\n    acceptCharset: spaceSeparated,\n    accessKey: spaceSeparated,\n    action: null,\n    allow: null,\n    allowFullScreen: boolean,\n    allowPaymentRequest: boolean,\n    allowUserMedia: boolean,\n    alt: null,\n    as: null,\n    async: boolean,\n    autoCapitalize: null,\n    autoComplete: spaceSeparated,\n    autoFocus: boolean,\n    autoPlay: boolean,\n    capture: boolean,\n    charSet: null,\n    checked: boolean,\n    cite: null,\n    className: spaceSeparated,\n    cols: number,\n    colSpan: null,\n    content: null,\n    contentEditable: booleanish,\n    controls: boolean,\n    controlsList: spaceSeparated,\n    coords: number | commaSeparated,\n    crossOrigin: null,\n    data: null,\n    dateTime: null,\n    decoding: null,\n    default: boolean,\n    defer: boolean,\n    dir: null,\n    dirName: null,\n    disabled: boolean,\n    download: overloadedBoolean,\n    draggable: booleanish,\n    encType: null,\n    enterKeyHint: null,\n    form: null,\n    formAction: null,\n    formEncType: null,\n    formMethod: null,\n    formNoValidate: boolean,\n    formTarget: null,\n    headers: spaceSeparated,\n    height: number,\n    hidden: boolean,\n    high: number,\n    href: null,\n    hrefLang: null,\n    htmlFor: spaceSeparated,\n    httpEquiv: spaceSeparated,\n    id: null,\n    imageSizes: null,\n    imageSrcSet: null,\n    inputMode: null,\n    integrity: null,\n    is: null,\n    isMap: boolean,\n    itemId: null,\n    itemProp: spaceSeparated,\n    itemRef: spaceSeparated,\n    itemScope: boolean,\n    itemType: spaceSeparated,\n    kind: null,\n    label: null,\n    lang: null,\n    language: null,\n    list: null,\n    loading: null,\n    loop: boolean,\n    low: number,\n    manifest: null,\n    max: null,\n    maxLength: number,\n    media: null,\n    method: null,\n    min: null,\n    minLength: number,\n    multiple: boolean,\n    muted: boolean,\n    name: null,\n    nonce: null,\n    noModule: boolean,\n    noValidate: boolean,\n    onAbort: null,\n    onAfterPrint: null,\n    onAuxClick: null,\n    onBeforePrint: null,\n    onBeforeUnload: null,\n    onBlur: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onContextLost: null,\n    onContextMenu: null,\n    onContextRestored: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFormData: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLanguageChange: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadEnd: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMessageError: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRejectionHandled: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSecurityPolicyViolation: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onSlotChange: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnhandledRejection: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onWheel: null,\n    open: boolean,\n    optimum: number,\n    pattern: null,\n    ping: spaceSeparated,\n    placeholder: null,\n    playsInline: boolean,\n    poster: null,\n    preload: null,\n    readOnly: boolean,\n    referrerPolicy: null,\n    rel: spaceSeparated,\n    required: boolean,\n    reversed: boolean,\n    rows: number,\n    rowSpan: number,\n    sandbox: spaceSeparated,\n    scope: null,\n    scoped: boolean,\n    seamless: boolean,\n    selected: boolean,\n    shape: null,\n    size: number,\n    sizes: null,\n    slot: null,\n    span: number,\n    spellCheck: booleanish,\n    src: null,\n    srcDoc: null,\n    srcLang: null,\n    srcSet: null,\n    start: number,\n    step: null,\n    style: null,\n    tabIndex: number,\n    target: null,\n    title: null,\n    translate: null,\n    type: null,\n    typeMustMatch: boolean,\n    useMap: null,\n    value: booleanish,\n    width: number,\n    wrap: null,\n\n    // Legacy.\n    // See: https://html.spec.whatwg.org/#other-elements,-attributes-and-apis\n    align: null, // Several. Use CSS `text-align` instead,\n    aLink: null, // `<body>`. Use CSS `a:active {color}` instead\n    archive: spaceSeparated, // `<object>`. List of URIs to archives\n    axis: null, // `<td>` and `<th>`. Use `scope` on `<th>`\n    background: null, // `<body>`. Use CSS `background-image` instead\n    bgColor: null, // `<body>` and table elements. Use CSS `background-color` instead\n    border: number, // `<table>`. Use CSS `border-width` instead,\n    borderColor: null, // `<table>`. Use CSS `border-color` instead,\n    bottomMargin: number, // `<body>`\n    cellPadding: null, // `<table>`\n    cellSpacing: null, // `<table>`\n    char: null, // Several table elements. When `align=char`, sets the character to align on\n    charOff: null, // Several table elements. When `char`, offsets the alignment\n    classId: null, // `<object>`\n    clear: null, // `<br>`. Use CSS `clear` instead\n    code: null, // `<object>`\n    codeBase: null, // `<object>`\n    codeType: null, // `<object>`\n    color: null, // `<font>` and `<hr>`. Use CSS instead\n    compact: boolean, // Lists. Use CSS to reduce space between items instead\n    declare: boolean, // `<object>`\n    event: null, // `<script>`\n    face: null, // `<font>`. Use CSS instead\n    frame: null, // `<table>`\n    frameBorder: null, // `<iframe>`. Use CSS `border` instead\n    hSpace: number, // `<img>` and `<object>`\n    leftMargin: number, // `<body>`\n    link: null, // `<body>`. Use CSS `a:link {color: *}` instead\n    longDesc: null, // `<frame>`, `<iframe>`, and `<img>`. Use an `<a>`\n    lowSrc: null, // `<img>`. Use a `<picture>`\n    marginHeight: number, // `<body>`\n    marginWidth: number, // `<body>`\n    noResize: boolean, // `<frame>`\n    noHref: boolean, // `<area>`. Use no href instead of an explicit `nohref`\n    noShade: boolean, // `<hr>`. Use background-color and height instead of borders\n    noWrap: boolean, // `<td>` and `<th>`\n    object: null, // `<applet>`\n    profile: null, // `<head>`\n    prompt: null, // `<isindex>`\n    rev: null, // `<link>`\n    rightMargin: number, // `<body>`\n    rules: null, // `<table>`\n    scheme: null, // `<meta>`\n    scrolling: booleanish, // `<frame>`. Use overflow in the child context\n    standby: null, // `<object>`\n    summary: null, // `<table>`\n    text: null, // `<body>`. Use CSS `color` instead\n    topMargin: number, // `<body>`\n    valueType: null, // `<param>`\n    version: null, // `<html>`. Use a doctype.\n    vAlign: null, // Several. Use CSS `vertical-align` instead\n    vLink: null, // `<body>`. Use CSS `a:visited {color}` instead\n    vSpace: number, // `<img>` and `<object>`\n\n    // Non-standard Properties.\n    allowTransparency: null,\n    autoCorrect: null,\n    autoSave: null,\n    disablePictureInPicture: boolean,\n    disableRemotePlayback: boolean,\n    prefix: null,\n    property: null,\n    results: number,\n    security: null,\n    unselectable: null\n  }\n})\n","import {\n  boolean,\n  number,\n  spaceSeparated,\n  commaSeparated,\n  commaOrSpaceSeparated\n} from './util/types.js'\nimport {create} from './util/create.js'\nimport {caseSensitiveTransform} from './util/case-sensitive-transform.js'\n\nexport const svg = create({\n  space: 'svg',\n  attributes: {\n    accentHeight: 'accent-height',\n    alignmentBaseline: 'alignment-baseline',\n    arabicForm: 'arabic-form',\n    baselineShift: 'baseline-shift',\n    capHeight: 'cap-height',\n    className: 'class',\n    clipPath: 'clip-path',\n    clipRule: 'clip-rule',\n    colorInterpolation: 'color-interpolation',\n    colorInterpolationFilters: 'color-interpolation-filters',\n    colorProfile: 'color-profile',\n    colorRendering: 'color-rendering',\n    crossOrigin: 'crossorigin',\n    dataType: 'datatype',\n    dominantBaseline: 'dominant-baseline',\n    enableBackground: 'enable-background',\n    fillOpacity: 'fill-opacity',\n    fillRule: 'fill-rule',\n    floodColor: 'flood-color',\n    floodOpacity: 'flood-opacity',\n    fontFamily: 'font-family',\n    fontSize: 'font-size',\n    fontSizeAdjust: 'font-size-adjust',\n    fontStretch: 'font-stretch',\n    fontStyle: 'font-style',\n    fontVariant: 'font-variant',\n    fontWeight: 'font-weight',\n    glyphName: 'glyph-name',\n    glyphOrientationHorizontal: 'glyph-orientation-horizontal',\n    glyphOrientationVertical: 'glyph-orientation-vertical',\n    hrefLang: 'hreflang',\n    horizAdvX: 'horiz-adv-x',\n    horizOriginX: 'horiz-origin-x',\n    horizOriginY: 'horiz-origin-y',\n    imageRendering: 'image-rendering',\n    letterSpacing: 'letter-spacing',\n    lightingColor: 'lighting-color',\n    markerEnd: 'marker-end',\n    markerMid: 'marker-mid',\n    markerStart: 'marker-start',\n    navDown: 'nav-down',\n    navDownLeft: 'nav-down-left',\n    navDownRight: 'nav-down-right',\n    navLeft: 'nav-left',\n    navNext: 'nav-next',\n    navPrev: 'nav-prev',\n    navRight: 'nav-right',\n    navUp: 'nav-up',\n    navUpLeft: 'nav-up-left',\n    navUpRight: 'nav-up-right',\n    onAbort: 'onabort',\n    onActivate: 'onactivate',\n    onAfterPrint: 'onafterprint',\n    onBeforePrint: 'onbeforeprint',\n    onBegin: 'onbegin',\n    onCancel: 'oncancel',\n    onCanPlay: 'oncanplay',\n    onCanPlayThrough: 'oncanplaythrough',\n    onChange: 'onchange',\n    onClick: 'onclick',\n    onClose: 'onclose',\n    onCopy: 'oncopy',\n    onCueChange: 'oncuechange',\n    onCut: 'oncut',\n    onDblClick: 'ondblclick',\n    onDrag: 'ondrag',\n    onDragEnd: 'ondragend',\n    onDragEnter: 'ondragenter',\n    onDragExit: 'ondragexit',\n    onDragLeave: 'ondragleave',\n    onDragOver: 'ondragover',\n    onDragStart: 'ondragstart',\n    onDrop: 'ondrop',\n    onDurationChange: 'ondurationchange',\n    onEmptied: 'onemptied',\n    onEnd: 'onend',\n    onEnded: 'onended',\n    onError: 'onerror',\n    onFocus: 'onfocus',\n    onFocusIn: 'onfocusin',\n    onFocusOut: 'onfocusout',\n    onHashChange: 'onhashchange',\n    onInput: 'oninput',\n    onInvalid: 'oninvalid',\n    onKeyDown: 'onkeydown',\n    onKeyPress: 'onkeypress',\n    onKeyUp: 'onkeyup',\n    onLoad: 'onload',\n    onLoadedData: 'onloadeddata',\n    onLoadedMetadata: 'onloadedmetadata',\n    onLoadStart: 'onloadstart',\n    onMessage: 'onmessage',\n    onMouseDown: 'onmousedown',\n    onMouseEnter: 'onmouseenter',\n    onMouseLeave: 'onmouseleave',\n    onMouseMove: 'onmousemove',\n    onMouseOut: 'onmouseout',\n    onMouseOver: 'onmouseover',\n    onMouseUp: 'onmouseup',\n    onMouseWheel: 'onmousewheel',\n    onOffline: 'onoffline',\n    onOnline: 'ononline',\n    onPageHide: 'onpagehide',\n    onPageShow: 'onpageshow',\n    onPaste: 'onpaste',\n    onPause: 'onpause',\n    onPlay: 'onplay',\n    onPlaying: 'onplaying',\n    onPopState: 'onpopstate',\n    onProgress: 'onprogress',\n    onRateChange: 'onratechange',\n    onRepeat: 'onrepeat',\n    onReset: 'onreset',\n    onResize: 'onresize',\n    onScroll: 'onscroll',\n    onSeeked: 'onseeked',\n    onSeeking: 'onseeking',\n    onSelect: 'onselect',\n    onShow: 'onshow',\n    onStalled: 'onstalled',\n    onStorage: 'onstorage',\n    onSubmit: 'onsubmit',\n    onSuspend: 'onsuspend',\n    onTimeUpdate: 'ontimeupdate',\n    onToggle: 'ontoggle',\n    onUnload: 'onunload',\n    onVolumeChange: 'onvolumechange',\n    onWaiting: 'onwaiting',\n    onZoom: 'onzoom',\n    overlinePosition: 'overline-position',\n    overlineThickness: 'overline-thickness',\n    paintOrder: 'paint-order',\n    panose1: 'panose-1',\n    pointerEvents: 'pointer-events',\n    referrerPolicy: 'referrerpolicy',\n    renderingIntent: 'rendering-intent',\n    shapeRendering: 'shape-rendering',\n    stopColor: 'stop-color',\n    stopOpacity: 'stop-opacity',\n    strikethroughPosition: 'strikethrough-position',\n    strikethroughThickness: 'strikethrough-thickness',\n    strokeDashArray: 'stroke-dasharray',\n    strokeDashOffset: 'stroke-dashoffset',\n    strokeLineCap: 'stroke-linecap',\n    strokeLineJoin: 'stroke-linejoin',\n    strokeMiterLimit: 'stroke-miterlimit',\n    strokeOpacity: 'stroke-opacity',\n    strokeWidth: 'stroke-width',\n    tabIndex: 'tabindex',\n    textAnchor: 'text-anchor',\n    textDecoration: 'text-decoration',\n    textRendering: 'text-rendering',\n    typeOf: 'typeof',\n    underlinePosition: 'underline-position',\n    underlineThickness: 'underline-thickness',\n    unicodeBidi: 'unicode-bidi',\n    unicodeRange: 'unicode-range',\n    unitsPerEm: 'units-per-em',\n    vAlphabetic: 'v-alphabetic',\n    vHanging: 'v-hanging',\n    vIdeographic: 'v-ideographic',\n    vMathematical: 'v-mathematical',\n    vectorEffect: 'vector-effect',\n    vertAdvY: 'vert-adv-y',\n    vertOriginX: 'vert-origin-x',\n    vertOriginY: 'vert-origin-y',\n    wordSpacing: 'word-spacing',\n    writingMode: 'writing-mode',\n    xHeight: 'x-height',\n    // These were camelcased in Tiny. Now lowercased in SVG 2\n    playbackOrder: 'playbackorder',\n    timelineBegin: 'timelinebegin'\n  },\n  transform: caseSensitiveTransform,\n  properties: {\n    about: commaOrSpaceSeparated,\n    accentHeight: number,\n    accumulate: null,\n    additive: null,\n    alignmentBaseline: null,\n    alphabetic: number,\n    amplitude: number,\n    arabicForm: null,\n    ascent: number,\n    attributeName: null,\n    attributeType: null,\n    azimuth: number,\n    bandwidth: null,\n    baselineShift: null,\n    baseFrequency: null,\n    baseProfile: null,\n    bbox: null,\n    begin: null,\n    bias: number,\n    by: null,\n    calcMode: null,\n    capHeight: number,\n    className: spaceSeparated,\n    clip: null,\n    clipPath: null,\n    clipPathUnits: null,\n    clipRule: null,\n    color: null,\n    colorInterpolation: null,\n    colorInterpolationFilters: null,\n    colorProfile: null,\n    colorRendering: null,\n    content: null,\n    contentScriptType: null,\n    contentStyleType: null,\n    crossOrigin: null,\n    cursor: null,\n    cx: null,\n    cy: null,\n    d: null,\n    dataType: null,\n    defaultAction: null,\n    descent: number,\n    diffuseConstant: number,\n    direction: null,\n    display: null,\n    dur: null,\n    divisor: number,\n    dominantBaseline: null,\n    download: boolean,\n    dx: null,\n    dy: null,\n    edgeMode: null,\n    editable: null,\n    elevation: number,\n    enableBackground: null,\n    end: null,\n    event: null,\n    exponent: number,\n    externalResourcesRequired: null,\n    fill: null,\n    fillOpacity: number,\n    fillRule: null,\n    filter: null,\n    filterRes: null,\n    filterUnits: null,\n    floodColor: null,\n    floodOpacity: null,\n    focusable: null,\n    focusHighlight: null,\n    fontFamily: null,\n    fontSize: null,\n    fontSizeAdjust: null,\n    fontStretch: null,\n    fontStyle: null,\n    fontVariant: null,\n    fontWeight: null,\n    format: null,\n    fr: null,\n    from: null,\n    fx: null,\n    fy: null,\n    g1: commaSeparated,\n    g2: commaSeparated,\n    glyphName: commaSeparated,\n    glyphOrientationHorizontal: null,\n    glyphOrientationVertical: null,\n    glyphRef: null,\n    gradientTransform: null,\n    gradientUnits: null,\n    handler: null,\n    hanging: number,\n    hatchContentUnits: null,\n    hatchUnits: null,\n    height: null,\n    href: null,\n    hrefLang: null,\n    horizAdvX: number,\n    horizOriginX: number,\n    horizOriginY: number,\n    id: null,\n    ideographic: number,\n    imageRendering: null,\n    initialVisibility: null,\n    in: null,\n    in2: null,\n    intercept: number,\n    k: number,\n    k1: number,\n    k2: number,\n    k3: number,\n    k4: number,\n    kernelMatrix: commaOrSpaceSeparated,\n    kernelUnitLength: null,\n    keyPoints: null, // SEMI_COLON_SEPARATED\n    keySplines: null, // SEMI_COLON_SEPARATED\n    keyTimes: null, // SEMI_COLON_SEPARATED\n    kerning: null,\n    lang: null,\n    lengthAdjust: null,\n    letterSpacing: null,\n    lightingColor: null,\n    limitingConeAngle: number,\n    local: null,\n    markerEnd: null,\n    markerMid: null,\n    markerStart: null,\n    markerHeight: null,\n    markerUnits: null,\n    markerWidth: null,\n    mask: null,\n    maskContentUnits: null,\n    maskUnits: null,\n    mathematical: null,\n    max: null,\n    media: null,\n    mediaCharacterEncoding: null,\n    mediaContentEncodings: null,\n    mediaSize: number,\n    mediaTime: null,\n    method: null,\n    min: null,\n    mode: null,\n    name: null,\n    navDown: null,\n    navDownLeft: null,\n    navDownRight: null,\n    navLeft: null,\n    navNext: null,\n    navPrev: null,\n    navRight: null,\n    navUp: null,\n    navUpLeft: null,\n    navUpRight: null,\n    numOctaves: null,\n    observer: null,\n    offset: null,\n    onAbort: null,\n    onActivate: null,\n    onAfterPrint: null,\n    onBeforePrint: null,\n    onBegin: null,\n    onCancel: null,\n    onCanPlay: null,\n    onCanPlayThrough: null,\n    onChange: null,\n    onClick: null,\n    onClose: null,\n    onCopy: null,\n    onCueChange: null,\n    onCut: null,\n    onDblClick: null,\n    onDrag: null,\n    onDragEnd: null,\n    onDragEnter: null,\n    onDragExit: null,\n    onDragLeave: null,\n    onDragOver: null,\n    onDragStart: null,\n    onDrop: null,\n    onDurationChange: null,\n    onEmptied: null,\n    onEnd: null,\n    onEnded: null,\n    onError: null,\n    onFocus: null,\n    onFocusIn: null,\n    onFocusOut: null,\n    onHashChange: null,\n    onInput: null,\n    onInvalid: null,\n    onKeyDown: null,\n    onKeyPress: null,\n    onKeyUp: null,\n    onLoad: null,\n    onLoadedData: null,\n    onLoadedMetadata: null,\n    onLoadStart: null,\n    onMessage: null,\n    onMouseDown: null,\n    onMouseEnter: null,\n    onMouseLeave: null,\n    onMouseMove: null,\n    onMouseOut: null,\n    onMouseOver: null,\n    onMouseUp: null,\n    onMouseWheel: null,\n    onOffline: null,\n    onOnline: null,\n    onPageHide: null,\n    onPageShow: null,\n    onPaste: null,\n    onPause: null,\n    onPlay: null,\n    onPlaying: null,\n    onPopState: null,\n    onProgress: null,\n    onRateChange: null,\n    onRepeat: null,\n    onReset: null,\n    onResize: null,\n    onScroll: null,\n    onSeeked: null,\n    onSeeking: null,\n    onSelect: null,\n    onShow: null,\n    onStalled: null,\n    onStorage: null,\n    onSubmit: null,\n    onSuspend: null,\n    onTimeUpdate: null,\n    onToggle: null,\n    onUnload: null,\n    onVolumeChange: null,\n    onWaiting: null,\n    onZoom: null,\n    opacity: null,\n    operator: null,\n    order: null,\n    orient: null,\n    orientation: null,\n    origin: null,\n    overflow: null,\n    overlay: null,\n    overlinePosition: number,\n    overlineThickness: number,\n    paintOrder: null,\n    panose1: null,\n    path: null,\n    pathLength: number,\n    patternContentUnits: null,\n    patternTransform: null,\n    patternUnits: null,\n    phase: null,\n    ping: spaceSeparated,\n    pitch: null,\n    playbackOrder: null,\n    pointerEvents: null,\n    points: null,\n    pointsAtX: number,\n    pointsAtY: number,\n    pointsAtZ: number,\n    preserveAlpha: null,\n    preserveAspectRatio: null,\n    primitiveUnits: null,\n    propagate: null,\n    property: commaOrSpaceSeparated,\n    r: null,\n    radius: null,\n    referrerPolicy: null,\n    refX: null,\n    refY: null,\n    rel: commaOrSpaceSeparated,\n    rev: commaOrSpaceSeparated,\n    renderingIntent: null,\n    repeatCount: null,\n    repeatDur: null,\n    requiredExtensions: commaOrSpaceSeparated,\n    requiredFeatures: commaOrSpaceSeparated,\n    requiredFonts: commaOrSpaceSeparated,\n    requiredFormats: commaOrSpaceSeparated,\n    resource: null,\n    restart: null,\n    result: null,\n    rotate: null,\n    rx: null,\n    ry: null,\n    scale: null,\n    seed: null,\n    shapeRendering: null,\n    side: null,\n    slope: null,\n    snapshotTime: null,\n    specularConstant: number,\n    specularExponent: number,\n    spreadMethod: null,\n    spacing: null,\n    startOffset: null,\n    stdDeviation: null,\n    stemh: null,\n    stemv: null,\n    stitchTiles: null,\n    stopColor: null,\n    stopOpacity: null,\n    strikethroughPosition: number,\n    strikethroughThickness: number,\n    string: null,\n    stroke: null,\n    strokeDashArray: commaOrSpaceSeparated,\n    strokeDashOffset: null,\n    strokeLineCap: null,\n    strokeLineJoin: null,\n    strokeMiterLimit: number,\n    strokeOpacity: number,\n    strokeWidth: null,\n    style: null,\n    surfaceScale: number,\n    syncBehavior: null,\n    syncBehaviorDefault: null,\n    syncMaster: null,\n    syncTolerance: null,\n    syncToleranceDefault: null,\n    systemLanguage: commaOrSpaceSeparated,\n    tabIndex: number,\n    tableValues: null,\n    target: null,\n    targetX: number,\n    targetY: number,\n    textAnchor: null,\n    textDecoration: null,\n    textRendering: null,\n    textLength: null,\n    timelineBegin: null,\n    title: null,\n    transformBehavior: null,\n    type: null,\n    typeOf: commaOrSpaceSeparated,\n    to: null,\n    transform: null,\n    u1: null,\n    u2: null,\n    underlinePosition: number,\n    underlineThickness: number,\n    unicode: null,\n    unicodeBidi: null,\n    unicodeRange: null,\n    unitsPerEm: number,\n    values: null,\n    vAlphabetic: number,\n    vMathematical: number,\n    vectorEffect: null,\n    vHanging: number,\n    vIdeographic: number,\n    version: null,\n    vertAdvY: number,\n    vertOriginX: number,\n    vertOriginY: number,\n    viewBox: null,\n    viewTarget: null,\n    visibility: null,\n    width: null,\n    widths: null,\n    wordSpacing: null,\n    writingMode: null,\n    x: null,\n    x1: null,\n    x2: null,\n    xChannelSelector: null,\n    xHeight: number,\n    y: null,\n    y1: null,\n    y2: null,\n    yChannelSelector: null,\n    z: null,\n    zoomAndPan: null\n  }\n})\n","/**\n * @typedef {import('./lib/util/info.js').Info} Info\n * @typedef {import('./lib/util/schema.js').Schema} Schema\n */\n\nimport {merge} from './lib/util/merge.js'\nimport {xlink} from './lib/xlink.js'\nimport {xml} from './lib/xml.js'\nimport {xmlns} from './lib/xmlns.js'\nimport {aria} from './lib/aria.js'\nimport {html as htmlBase} from './lib/html.js'\nimport {svg as svgBase} from './lib/svg.js'\n\nexport {find} from './lib/find.js'\nexport {hastToReact} from './lib/hast-to-react.js'\nexport {normalize} from './lib/normalize.js'\nexport const html = merge([xml, xlink, xmlns, aria, htmlBase], 'html')\nexport const svg = merge([xml, xlink, xmlns, aria, svgBase], 'svg')\n","/**\n * @typedef {import('./util/schema.js').Schema} Schema\n */\n\nimport {normalize} from './normalize.js'\nimport {DefinedInfo} from './util/defined-info.js'\nimport {Info} from './util/info.js'\n\nconst valid = /^data[-\\w.:]+$/i\nconst dash = /-[a-z]/g\nconst cap = /[A-Z]/g\n\n/**\n * @param {Schema} schema\n * @param {string} value\n * @returns {Info}\n */\nexport function find(schema, value) {\n  const normal = normalize(value)\n  let prop = value\n  let Type = Info\n\n  if (normal in schema.normal) {\n    return schema.property[schema.normal[normal]]\n  }\n\n  if (normal.length > 4 && normal.slice(0, 4) === 'data' && valid.test(value)) {\n    // Attribute or property.\n    if (value.charAt(4) === '-') {\n      // Turn it into a property.\n      const rest = value.slice(5).replace(dash, camelcase)\n      prop = 'data' + rest.charAt(0).toUpperCase() + rest.slice(1)\n    } else {\n      // Turn it into an attribute.\n      const rest = value.slice(4)\n\n      if (!dash.test(rest)) {\n        let dashes = rest.replace(cap, kebab)\n\n        if (dashes.charAt(0) !== '-') {\n          dashes = '-' + dashes\n        }\n\n        value = 'data' + dashes\n      }\n    }\n\n    Type = DefinedInfo\n  }\n\n  return new Type(prop, value)\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction kebab($0) {\n  return '-' + $0.toLowerCase()\n}\n\n/**\n * @param {string} $0\n * @returns {string}\n */\nfunction camelcase($0) {\n  return $0.charAt(1).toUpperCase()\n}\n","/**\n * @param {string} value\n * @returns {string}\n */\nexport function normalize(value) {\n  return value.toLowerCase()\n}\n","import {Info} from './info.js'\nimport * as types from './types.js'\n\n/** @type {Array<keyof types>} */\n// @ts-expect-error: hush.\nconst checks = Object.keys(types)\n\nexport class DefinedInfo extends Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   * @param {number|null} [mask]\n   * @param {string} [space]\n   */\n  constructor(property, attribute, mask, space) {\n    let index = -1\n\n    super(property, attribute)\n\n    mark(this, 'space', space)\n\n    if (typeof mask === 'number') {\n      while (++index < checks.length) {\n        const check = checks[index]\n        mark(this, checks[index], (mask & types[check]) === types[check])\n      }\n    }\n  }\n}\n\nDefinedInfo.prototype.defined = true\n\n/**\n * @param {DefinedInfo} values\n * @param {string} key\n * @param {unknown} value\n */\nfunction mark(values, key, value) {\n  if (value) {\n    // @ts-expect-error: assume `value` matches the expected value of `key`.\n    values[key] = value\n  }\n}\n","export class Info {\n  /**\n   * @constructor\n   * @param {string} property\n   * @param {string} attribute\n   */\n  constructor(property, attribute) {\n    /** @type {string} */\n    this.property = property\n    /** @type {string} */\n    this.attribute = attribute\n  }\n}\n\n/** @type {string|null} */\nInfo.prototype.space = null\nInfo.prototype.boolean = false\nInfo.prototype.booleanish = false\nInfo.prototype.overloadedBoolean = false\nInfo.prototype.number = false\nInfo.prototype.commaSeparated = false\nInfo.prototype.spaceSeparated = false\nInfo.prototype.commaOrSpaceSeparated = false\nInfo.prototype.mustUseProperty = false\nInfo.prototype.defined = false\n","let powers = 0\n\nexport const boolean = increment()\nexport const booleanish = increment()\nexport const overloadedBoolean = increment()\nexport const number = increment()\nexport const spaceSeparated = increment()\nexport const commaSeparated = increment()\nexport const commaOrSpaceSeparated = increment()\n\nfunction increment() {\n  return 2 ** ++powers\n}\n","/**\n * Parse space separated tokens to an array of strings.\n *\n * @param {string} value Space separated tokens\n * @returns {Array.<string>} Tokens\n */\nexport function parse(value) {\n  const input = String(value || '').trim()\n  return input ? input.split(/[ \\t\\n\\r\\f]+/g) : []\n}\n\n/**\n * Serialize an array of strings as space separated tokens.\n *\n * @param {Array.<string|number>} values Tokens\n * @returns {string} Space separated tokens\n */\nexport function stringify(values) {\n  return values.join(' ').trim()\n}\n"],"names":["copyTextToClipboard","text","cb","el","document","createElement","value","setAttribute","style","position","left","body","appendChild","selected","getSelection","rangeCount","getRangeAt","select","isCopy","execCommand","err","removeChild","removeAllRanges","addRange","stringifyPosition","point","index","line","column","pos","start","end","VFileMessage","reason","place","origin","parts","undefined","indexOf","slice","name","message","stack","fatal","source","ruleId","actual","expected","file","url","note","Error","prototype","path","basename","ext","TypeError","assertPath","seenNonSlash","length","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","join","joined","segments","normalize","sep","absolute","allowAboveRoot","lastSlashIndex","result","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","JSON","stringify","proc","cwd","isUrl","fileURLOrPath","href","urlToPath","URL","error","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","options","buffer","this","data","messages","history","stored","map","prop","includes","assertNonEmpty","push","assertPart","stem","encoding","toString","part","_toArray","arr","arrayWithHoles","iterableToArray","unsupportedIterableToArray","nonIterableRest","bail","isPlainObject","Object","getPrototypeOf","Symbol","toStringTag","iterator","wrap","middleware","callback","called","parameters","fnExpectsCallback","done","apply","exception","Promise","then","output","unified","base","frozen","transformers","fns","pipeline","run","values","middlewareIndex","pop","next","fn","use","middelware","trough","attachers","namespace","freezeIndex","processor","key","arguments","assertUnfrozen","own","call","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","Array","isArray","addList","addPreset","assign","add","plugin","plugins","entry","isPlainObj","extend","parse","doc","vfile","assertParser","newable","String","node","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","process","isBuffer","processSync","destination","hasOwnProperty","keys","type","asyncName","Boolean","looksLikeAVFile","includeImageAlt","one","alt","all","children","splice","list","remove","items","chunkStart","from","unshift","combineExtensions","extensions","syntaxExtension","extension","hook","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","test","fromCharCode","factorySpace","effects","ok","max","limit","size","enter","prefix","consume","exit","content","tokenize","previous","contentStart","attempt","parser","contentInitial","lineStart","token","contentType","childFlow","childToken","lineStartOffset","self","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","check","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","event","lineIndex","otherIndex","otherEvent","subevents","more","jumps","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","current","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","string","initializeFactory","field","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","bufferIndex","tabs","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","accountForPotentialSkip","fields","constructFactory","construct","info","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","state","view","startIndex","startBufferIndex","endIndex","endBufferIndex","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","store","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","replace","toLowerCase","toUpperCase","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","characterReference","numeric","decodeNamedCharacterReference","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","resolveText","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","config","configure","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","mdastExtensions","tokenStack","listStack","resume","setData","getData","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","d","and","errorHandler","onExitError","lang","depth","parent","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","defaultConstructs","concat","atCarriageReturn","match","endPosition","lastIndex","exec","Math","ceil","preprocess","combined","u","props","convert","castFactory","typeFactory","anyFactory","propsFactory","tests","checks","SKIP","EXIT","visitParents","visitor","reverse","is","step","factory","parents","defineProperty","visit","subresult","grandparents","toResult","pointStart","pointEnd","clean","unknown","h","augment","handlers","passThrough","returnNode","unknownHandler","nodes","characterReferences","sanitizeUri","encode","skip","encodeURIComponent","normalizeUri","colon","questionMark","numberSign","slash","loose","footnoteReference","counter","id","safeId","footnoteOrder","footnoteCounts","reuseCounter","clobberPrefix","dataFootnoteRef","ariaDescribedBy","revert","subtype","suffix","contents","listItemLoose","trimLine","codePointAt","blockquote","break","className","delete","footnote","footnoteById","no","dangerous","imageReference","src","inlineCode","linkReference","listLoose","wrapped","disabled","child","properties","root","table","rows","align","row","out","cellIndex","cell","last","lines","trimLines","toml","ignore","yaml","footnoteDefinition","allowDangerousHtml","footnoteLabel","footnoteBackLabel","cache","definitions","hName","hProperties","hChildren","ctx","toHast","foot","listItems","referenceIndex","backReferences","backReference","dataFootnoteBackref","ariaLabel","tailTail","dataFootnotes","footer","bridge","mutate","rehypeFilter","allowedElements","disallowedElements","allowElement","parent_","unwrapDisallowed","protocols","whitespace","thing","hastToReact","classId","dataType","itemId","strokeDashArray","strokeDashOffset","strokeLineCap","strokeLineJoin","strokeMiterLimit","typeOf","xLinkActuate","xLinkArcRole","xLinkHref","xLinkRole","xLinkShow","xLinkTitle","xLinkType","xmlnsXLink","tableElements","Set","childrenToReact","childIndex","toReact","has","skipHtml","property","parentSchema","schema","space","svg","addProperty","listDepth","component","components","basic","React","ReactIs","linkTarget","target","transformLinkUri","inline","level","charAt","transformImageUri","input","getInputElement","getElementsBeforeCount","textAlign","isHeader","sourcePos","rawSourcePos","sourcePosition","includeElementIndex","siblingCount","count","find","commaSeparated","commas","spaces","v","k","styleReplacer","parseStyle","attribute","deprecated","to","renderers","astPlugins","escapeHtml","allowNode","allowedTypes","disallowedTypes","includeNodeIndex","ReactMarkdown","deprecation","console","warn","remarkParse","remarkPlugins","remarkRehype","remarkRehypeOptions","rehypePlugins","hastNode","defaultProps","uri","trim","first","propTypes","PropTypes","www","w2","w3","dot","domain","hasUnderscoreInLastSegment","hasUnderscoreInLastLastSegment","namedCharacterReference","punctuationContinuation","punctuation","inPath","continuedPunctuation","parenAtPathEnd","pathEnd","trailingPunctuation","wwwAutolink","previousWww","previousUnbalanced","httpAutolink","previousHttp","t1","t2","p","s","slash1","slash2","emailAutolink","hasDot","hasDigitInLastSegment","gfmAtext","previousEmail","atext","dotContinuation","dashOrUnderscoreContinuation","afterDashOrUnderscore","gfmAutolinkLiteral","_gfmAutolinkLiteralWalkedInto","indent","gfmFootnote","tokenizeDefinitionStart","tokenizeDefinitionContinuation","gfmFootnoteDefinitionEnd","tokenizeGfmFootnoteCall","tokenizePotentialGfmFootnoteCall","resolveToPotentialGfmFootnoteCall","gfmFootnotes","replacement","callStart","callData","callEscape","gfmStrikethrough","single","singleTilde","tokenizeStrikethrough","resolveAllStrikethrough","strikethrough","gfmTable","seenDelimiter","hasDash","tableHeaderCount","_align","cellDividerHead","inCellContentHead","cellBreakHead","originalInterrupt","tokenizeRowEnd","atDelimiterRowBreak","atRowEndHead","inWhitespaceHead","inCellContentEscapeHead","rowEndDelimiter","inWhitespaceDelimiter","inFillerDelimiter","afterLeftAlignment","afterRightAlignment","tableClose","nextPrefixedOrBlank","bodyStart","rowStartBody","cellDividerBody","inCellContentBody","cellBreakBody","tableBodyClose","atRowEndBody","inWhitespaceBody","inCellContentEscapeBody","inHead","inDelimiterRow","inRow","cellStart","seenCellInRow","tasklistCheck","spaceThenNonSpace","gfmTaskListItem","gfm","ccount","character","findAndReplace","RegExp","ignored","pairs","toExpression","toFunction","toPairs","pairIndex","grandparent","change","matchObject","global","escape","inConstruct","notInConstruct","gfmAutolinkLiteralFromMarkdown","findUrl","findEmail","literalAutolink","literalAutolinkEmail","enterLiteralAutolinkValue","literalAutolinkHttp","literalAutolinkWww","gfmAutolinkLiteralToMarkdown","unsafe","split","isCorrectDomain","closingParenIndex","openingParens","closingParens","trail","trailExec","splitUrl","email","association","track","options_","lineShift","move","shift","containerFlow","safeOptions","indexStack","tracker","results","handle","bulletLastUsed","repeat","eol","indentLines","patternCompile","pattern","_compiled","patternInScope","listInScope","none","safe","positions","infos","expression","sort","numerical","escapeBackslashes","a","b","whole","gfmFootnoteToMarkdown","peek","subexit","blank","containerPhrasing","gfmStrikethroughFromMarkdown","gfmStrikethroughToMarkdown","handleDelete","serialize","defaultStringLength","toAlignment","gfmTableFromMarkdown","tableData","enterCell","tableHeader","tableRow","gfmTableToMarkdown","padding","tableCellPadding","alignDelimiters","tablePipeAlign","stringLength","around","serializeData","handleTableRowAsData","handleTableAsData","tableCell","handleTableCell","matrix","alignments","cellMatrix","sizeMatrix","longestCellByColumn","mostCellsPerRow","rowIndex","sizes","columnIndex","delimiterStart","delimiterEnd","markdownTable","listItemIndent","checkListItemIndent","bullet","bulletCurrent","checkBullet","incrementListMarker","gfmTaskListItemFromMarkdown","taskListCheckValueChecked","exitCheck","taskListCheckValueUnchecked","firstParaghraph","siblings","sibling","gfmTaskListItemToMarkdown","checkable","checkbox","gfmFromMarkdown","gfmFootnoteDefinition","gfmFootnoteDefinitionLabelString","gfmFootnoteCall","gfmFootnoteCallString","gfmToMarkdown","remarkGfm","hasProperty","headingRank","slugs","Slugger","rehypeSlug","reset","slug","isElement","convertElement","element","tagNameFactory","contentDefaults","rehypeAutolinkHeadings","method","behavior","behaviour","ariaHidden","tabIndex","inject","toChildren","grouping","toNode","core","webNamespaces","mathml","xlink","xml","xmlns","ast","transform","nodeName","namespaceURI","childNodes","sourceCodeLocation","location","endTag","verbose","attrs","opening","closing","createLocation","quirksMode","mode","loc","indices","toPoint","toOffset","isNaN","startLine","startCol","startOffset","endLine","endCol","endOffset","isFile","ns","toH","r","react","_isVue","vue","vd","vdom","hyperscript","attributes","addAttribute","subprop","boolean","mustUseProperty","zwitch","invalid","p5","patch","parentNode","doctype","publicId","systemId","htmlVoidElements","endTagToken","parseOptions","sourceCodeLocationInfo","scriptingEnabled","raw","stitches","preprocessor","posTracker","locationTracker","resetTokenizer","_processToken","createParse5Location","chars","forceQuirks","lastGapPos","lastCharPos","gapStack","skipNextNewLine","lastChunkWritten","endOfChunkHit","isEol","lineStartPos","droppedBufferSize","col","currentAttrLocation","ctLoc","_runParsingLoop","_consume","stitch","fromParse5","documentMode","treeAdapter","createDocument","_bootstrap","__mixins","mock","_pushTmplInsertionMode","_initTokenizerForFragmentParsing","_insertFakeRootElement","_resetInsertionMode","_findFormInFragmentContext","_adoptNodes","currentCharacterToken","tokenQueue","charRefCode","tempBuff","lastStartTagName","consumedAfterSnapshot","active","currentToken","currentAttr","selfClosing","toParse5","rehypeRaw","nextChild","i","nextNode","getCommentObject","param","reduce","forEach","keyName","propertiesHandle","defaultAttrs","rehyp","defaultOptions","opts","firstChild","prevChild","attr","openDelimiter","closeDelimiter","filter","rehypePrismGenerator","refractor","refractorRoot","startLineNum","c","classListItem","getLanguage","highlight","ignoreMissing","addNodePosition","numLines","entries","initialLineNum","shouldHighlightLine","RE","parsedMeta","str","strlineNumbers","lineNumbers","rangeParser","calculateLinesToHighlight","startingLineNumber","groups","calculateStartingLine","codeLineArray","number","createLineNodes","falseShowLineNumbersStr","treeExtract","cascade","preorder","showLineNumbers","some","substring","w","rehypePrismAll","refractorCommon","refractorAll","ltrRange","rtl","ltr","enterState","dirInferred","found","language","currentDirection","direction","editableOrEditingHost","xmlLang","dir","dirProperty","contentEditable","dirBidi","noop","query","nestingOperator","shallow","descendant","indexedSearch","nest","_1","_2","firstElementOnly","elementsBefore","elements","elementsByTypeBefore","types","delayed","elementIndex","typeIndex","elementCount","typeCount","tags","ranges","cast","matches","rightIndex","range","leftIndex","tag","extendedFilter","any","someChildren","_3","empty","enabled","assertDeep","scopeElements","selector","selectors","rule","pseudos","appendScope","not","optional","required","readWrite","scope","pseudo","needsIndex","operator","normalizeValue","classNames","collector","Collector","collectAll","ruleSet","collect","ZERO","NINE","nthCheck","formula","parsed","boolbase","absA","abs","bMod","idx","sign","readSign","readNumber","skipWhitespace","fauxEsmNthCheck","nth","CssSelectorParser","valueType","selectAll","registerAttrEqualityMods","registerSelectorPseudos","registerNestingOperators","getCodeString","rewrite","octiconLink","viewBox","version","width","height","fillRule","reservedMeta","ref","prefixCls","disableCopy","onScroll","onMouseOver","pluginsFilter","rehypeRewrite","warpperElement","other","mdp","useImperativeHandle","cls","rehypePrism","headings","rehypeIgnore","class","onClick","currentTarget","classList","dataset","setTimeout","fill","rehypeAttrs","customProps","_jsx","testMatches","importName","module","exports","trueFunc","falseFunc","parser_context_1","require","render_1","attrEqualityMods","ruleNestingOperators","substitutesEnabled","_i","_a","pseudos_1","unregisterSelectorPseudos","pseudos_2","registerNumericPseudos","pseudos_3","unregisterNumericPseudos","pseudos_4","operators","operators_1","unregisterNestingOperators","operators_2","mods","mods_1","mod","unregisterAttrEqualityMods","mods_2","enableSubstitutes","disableSubstitutes","parseCssSelector","render","renderEntity","utils_1","l","chr","getStr","quote","escapeTable","esc","isHex","getIdent","isIdent","identSpecialChars","parseSelector","parseSingleSelector","res","parseRule","currentRule","op","isIdentStart","attrValue","doubleQuotesEscapeChars","singleQuoteEscapeChars","pseudoName","entity","currentEntity","escapeIdentifier","cn","escapeStr","len","charCode","extraCharCode","strReplacementsRev","n","t","f","hasOwn","toStr","gOPD","getOwnPropertyDescriptor","obj","hasOwnConstructor","hasIsPrototypeOf","constructor","setProperty","enumerable","configurable","newValue","writable","getProperty","copy","copyIsArray","clone","deep","BananaSlug","slugger","maintainCase","originalSlug","occurrences","COMMENT_REGEX","NEWLINE_REGEX","WHITESPACE_REGEX","PROPERTY_REGEX","COLON_REGEX","VALUE_REGEX","SEMICOLON_REGEX","TRIM_REGEX","EMPTY_STRING","lineno","updatePosition","Position","errorsList","msg","filename","silent","re","m","comments","rules","val","ret","decl","decls","declarations","getURLParameters","getMetaId","isMeta","encodeCache","exclude","keepEscaped","nextCode","defaultChars","ch","getEncodeCache","componentChars","parsePart","lhs","rhs","incr","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","propFullName","secret","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","object","symbol","arrayOf","elementType","instanceOf","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","ExpandIcon","CopyIcon","_jsxs","CopySuccessIcon","Copied","useState","copied","setCopied","timer","clearTimeout","forwardRef","showCode","setShowCode","toolbar","bordered","disableCheckered","disablePreview","disableCode","disableToolbar","background","toolbarExtra","backgroundColor","backgroundImage","for","e","g","q","$$typeof","ContextConsumer","ContextProvider","Element","ForwardRef","Fragment","Lazy","Memo","Portal","Profiler","StrictMode","Suspense","SuspenseList","isAsyncMode","isConcurrentMode","isContextConsumer","isContextProvider","isForwardRef","isFragment","isLazy","isMemo","isPortal","isProfiler","isStrictMode","isSuspense","isSuspenseList","isValidElementType","getModuleId","toMarkdown","maximum","checkFence","formatCodeAsIndented","streak","checkQuote","checkEmphasis","phrasing","rank","min","formatHeadingAsSetext","closeAtx","formatLinkAsAutolink","checkStrong","checkRule","ruleSpaces","checkRepeat","defaultUnsafe","defaultJoin","defaultHandlers","tightDefinitions","joinDefinition","decodeIfPossible","fence","repetition","ruleRepetition","fences","setext","resourceLink","characters","char","innerHTML","textContent","Function","safeFromInt","unicodePunctuationRegex","text$1","partialBlankLine","inspectResult","inspectConstruct","subcontinued","inspectStart","inspectContinue","inspectLess","inspectDone","interruptible","inspectFlowEnd","lazyFlowConstruct","inspectLazy","flowEnd","continueFlow","documentAfterPeek","miniflat","initializer","chunkedPush","chunkedSplice","decodeEntity","_interopDefaultLegacy","default","decodeEntity__default","prefixSize","indentedContentConstruct","Infinity","_used","sizeChunks","entered","isInFirstContentOfListItem","_movePreviousLineEndings","params","invoked","plain","VMessagePrototype","VMessage","proto","parseOrigin","get","set","fail","num","substr","hasIterator","arr2","__esModule","o","allowArrayLike","it","F","_e","normalCompletion","didErr","_e2","superPropBase","_get","Reflect","bind","receiver","desc","_s","_arr","_n","_d","iterableToArrayLimit","arrayLikeToArray","minLen","tokens","padRight","padLeft","subvalue","defaultTagName","buttonTypes","caseSensitive","createAdjustMap","isProperties","addChild","spaceSeparated","commaOrSpaceSeparated","parsePrimitive","finalResult","overloadedBoolean","characterEntitiesLegacy","characterReferenceInvalid","isDecimal","isHexadecimal","isAlphanumerical","isAlphabetical","parseEntities","additional","queue","following","begin","characterReferenceCharacters","terminated","namedReference","diff","nonTerminated","warning","referenceCode","prohibited","disallowed","flush","referenceContext","warningContext","textContext","Schema","normal","merge","DefinedInfo","xmlBase","xmlSpace","caseSensitiveTransform","caseInsensitiveTransform","xmlnsxlink","aria","ariaActiveDescendant","ariaAtomic","booleanish","ariaAutoComplete","ariaBusy","ariaChecked","ariaColCount","ariaColIndex","ariaColSpan","ariaControls","ariaCurrent","ariaDetails","ariaDisabled","ariaDropEffect","ariaErrorMessage","ariaExpanded","ariaFlowTo","ariaGrabbed","ariaHasPopup","ariaInvalid","ariaKeyShortcuts","ariaLabelledBy","ariaLevel","ariaLive","ariaModal","ariaMultiLine","ariaMultiSelectable","ariaOrientation","ariaOwns","ariaPlaceholder","ariaPosInSet","ariaPressed","ariaReadOnly","ariaRelevant","ariaRequired","ariaRoleDescription","ariaRowCount","ariaRowIndex","ariaRowSpan","ariaSelected","ariaSetSize","ariaSort","ariaValueMax","ariaValueMin","ariaValueNow","ariaValueText","role","acceptcharset","classname","htmlfor","httpequiv","abbr","accept","acceptCharset","accessKey","action","allow","allowFullScreen","allowPaymentRequest","allowUserMedia","as","async","autoCapitalize","autoComplete","autoFocus","autoPlay","capture","charSet","cite","cols","colSpan","controls","controlsList","coords","crossOrigin","dateTime","decoding","defer","dirName","download","draggable","encType","enterKeyHint","form","formAction","formEncType","formMethod","formNoValidate","formTarget","headers","hidden","high","hrefLang","htmlFor","httpEquiv","imageSizes","imageSrcSet","inputMode","integrity","isMap","itemProp","itemRef","itemScope","itemType","loading","loop","low","manifest","maxLength","minLength","multiple","muted","nonce","noModule","noValidate","onAbort","onAfterPrint","onAuxClick","onBeforePrint","onBeforeUnload","onBlur","onCancel","onCanPlay","onCanPlayThrough","onChange","onClose","onContextLost","onContextMenu","onContextRestored","onCopy","onCueChange","onCut","onDblClick","onDrag","onDragEnd","onDragEnter","onDragExit","onDragLeave","onDragOver","onDragStart","onDrop","onDurationChange","onEmptied","onEnded","onError","onFocus","onFormData","onHashChange","onInput","onInvalid","onKeyDown","onKeyPress","onKeyUp","onLanguageChange","onLoad","onLoadedData","onLoadedMetadata","onLoadEnd","onLoadStart","onMessage","onMessageError","onMouseDown","onMouseEnter","onMouseLeave","onMouseMove","onMouseOut","onMouseUp","onOffline","onOnline","onPageHide","onPageShow","onPaste","onPause","onPlay","onPlaying","onPopState","onProgress","onRateChange","onRejectionHandled","onReset","onResize","onSecurityPolicyViolation","onSeeked","onSeeking","onSelect","onSlotChange","onStalled","onStorage","onSubmit","onSuspend","onTimeUpdate","onToggle","onUnhandledRejection","onUnload","onVolumeChange","onWaiting","onWheel","optimum","ping","placeholder","playsInline","poster","preload","readOnly","referrerPolicy","rel","reversed","rowSpan","sandbox","scoped","seamless","slot","span","spellCheck","srcDoc","srcLang","srcSet","translate","typeMustMatch","useMap","aLink","archive","axis","bgColor","border","borderColor","bottomMargin","cellPadding","cellSpacing","charOff","clear","codeBase","codeType","color","compact","declare","face","frame","frameBorder","hSpace","leftMargin","longDesc","lowSrc","marginHeight","marginWidth","noResize","noHref","noShade","noWrap","profile","prompt","rev","rightMargin","scheme","scrolling","standby","summary","topMargin","vAlign","vLink","vSpace","allowTransparency","autoCorrect","autoSave","disablePictureInPicture","disableRemotePlayback","security","unselectable","accentHeight","alignmentBaseline","arabicForm","baselineShift","capHeight","clipPath","clipRule","colorInterpolation","colorInterpolationFilters","colorProfile","colorRendering","dominantBaseline","enableBackground","fillOpacity","floodColor","floodOpacity","fontFamily","fontSize","fontSizeAdjust","fontStretch","fontStyle","fontVariant","fontWeight","glyphName","glyphOrientationHorizontal","glyphOrientationVertical","horizAdvX","horizOriginX","horizOriginY","imageRendering","letterSpacing","lightingColor","markerEnd","markerMid","markerStart","navDown","navDownLeft","navDownRight","navLeft","navNext","navPrev","navRight","navUp","navUpLeft","navUpRight","onActivate","onBegin","onEnd","onFocusIn","onFocusOut","onMouseWheel","onRepeat","onShow","onZoom","overlinePosition","overlineThickness","paintOrder","panose1","pointerEvents","renderingIntent","shapeRendering","stopColor","stopOpacity","strikethroughPosition","strikethroughThickness","strokeOpacity","strokeWidth","textAnchor","textDecoration","textRendering","underlinePosition","underlineThickness","unicodeBidi","unicodeRange","unitsPerEm","vAlphabetic","vHanging","vIdeographic","vMathematical","vectorEffect","vertAdvY","vertOriginX","vertOriginY","wordSpacing","writingMode","xHeight","playbackOrder","timelineBegin","about","accumulate","additive","alphabetic","amplitude","ascent","attributeName","attributeType","azimuth","bandwidth","baseFrequency","baseProfile","bbox","bias","by","calcMode","clip","clipPathUnits","contentScriptType","contentStyleType","cursor","cx","cy","defaultAction","descent","diffuseConstant","display","dur","divisor","dx","dy","edgeMode","editable","elevation","exponent","externalResourcesRequired","filterRes","filterUnits","focusable","focusHighlight","format","fr","fx","fy","g1","g2","glyphRef","gradientTransform","gradientUnits","hanging","hatchContentUnits","hatchUnits","ideographic","initialVisibility","in","in2","intercept","k1","k2","k3","k4","kernelMatrix","kernelUnitLength","keyPoints","keySplines","keyTimes","kerning","lengthAdjust","limitingConeAngle","local","markerHeight","markerUnits","markerWidth","mask","maskContentUnits","maskUnits","mathematical","mediaCharacterEncoding","mediaContentEncodings","mediaSize","mediaTime","numOctaves","observer","opacity","orient","orientation","overflow","overlay","pathLength","patternContentUnits","patternTransform","patternUnits","phase","pitch","points","pointsAtX","pointsAtY","pointsAtZ","preserveAlpha","preserveAspectRatio","primitiveUnits","propagate","radius","refX","refY","repeatCount","repeatDur","requiredExtensions","requiredFeatures","requiredFonts","requiredFormats","restart","rotate","rx","ry","scale","seed","side","slope","snapshotTime","specularConstant","specularExponent","spreadMethod","spacing","stdDeviation","stemh","stemv","stitchTiles","stroke","surfaceScale","syncBehavior","syncBehaviorDefault","syncMaster","syncTolerance","syncToleranceDefault","systemLanguage","tableValues","targetX","targetY","textLength","transformBehavior","u1","u2","unicode","viewTarget","visibility","widths","x","x1","x2","xChannelSelector","y","y1","y2","yChannelSelector","z","zoomAndPan","htmlBase","svgBase","valid","dash","cap","Type","Info","rest","camelcase","dashes","kebab","mark","powers","increment"],"sourceRoot":""}