{"version":3,"file":"static/js/6220.e8bc58d6.chunk.js","mappings":"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","sources":["../../packages/polyline-editor/README.md"],"sourcesContent":["\nexport default {\n    components: { 22: (function() { \"use strict\";\n\nfunction _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _reactAmap = require(\"@uiw/react-amap\");\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \"object\" && typeof obj !== \"function\") { return { \"default\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\"default\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\nvar Example = function Example() {\n  // 多边形轮廓线的节点坐标数组\n  var path = [[116.403322, 39.920255], [116.410703, 39.897555], [116.402292, 39.892353], [116.389846, 39.891365]];\n  var _useState = (0, _react.useState)(true),\n    _useState2 = _slicedToArray(_useState, 2),\n    show = _useState2[0],\n    setShow = _useState2[1];\n  var _useState3 = (0, _react.useState)(false),\n    _useState4 = _slicedToArray(_useState3, 2),\n    active = _useState4[0],\n    setActive = _useState4[1];\n  var _useState5 = (0, _react.useState)(path),\n    _useState6 = _slicedToArray(_useState5, 2),\n    polylinePath = _useState6[0],\n    setPolylinePath = _useState6[1];\n  return /*#__PURE__*/_react[\"default\"].createElement(_react[\"default\"].Fragment, null, /*#__PURE__*/_react[\"default\"].createElement(\"button\", {\n    onClick: function onClick() {\n      return setShow(!show);\n    }\n  }, show ? '隐藏' : '显示'), /*#__PURE__*/_react[\"default\"].createElement(\"button\", {\n    onClick: function onClick() {\n      return setActive(!active);\n    }\n  }, active ? '结束' : '开始', \"\\u7F16\\u8F91\"), /*#__PURE__*/_react[\"default\"].createElement(\"div\", {\n    style: {\n      width: '100%',\n      height: '500px'\n    }\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactAmap.Map, {\n    zoom: 14,\n    center: [116.400274, 39.905812]\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactAmap.Polyline, {\n    visiable: show,\n    path: polylinePath,\n    strokeColor: \"#FF33FF\",\n    strokeWeight: 6,\n    strokeOpacity: 0.2,\n    fillOpacity: 0.4,\n    fillColor: \"#1791fc\",\n    zIndex: 50\n  }, /*#__PURE__*/_react[\"default\"].createElement(_reactAmap.PolylineEditor, {\n    active: active,\n    onEnd: function onEnd(e) {\n      console.log('onEnd:>>', e.target.getPath());\n      setPolylinePath(e.target.getPath());\n    },\n    onAdjust: function onAdjust() {\n      console.log('onAdjust:>>');\n    },\n    onAdd: function onAdd() {\n      console.log('onAdd:>>');\n    },\n    onAddnode: function onAddnode() {\n      console.log('onAddnode:>>');\n    },\n    onRemovenode: function onRemovenode() {\n      console.log('onRemovenode:>>');\n    }\n  })))));\n};\nvar Mount = function Mount() {\n  return /*#__PURE__*/_react[\"default\"].createElement(_reactAmap.APILoader, {\n    akey: \"a7a90e05a37d3f6bf76d4a9032fc9129\",\n    plugin: \"AMap.PolylineEditor\"\n  }, /*#__PURE__*/_react[\"default\"].createElement(Example, null));\n};\nreturn Mount; })(), },\n    data: {\n  \"22\": {\n    \"name\": 22,\n    \"meta\": {},\n    \"code\": \"\\\"use strict\\\";\\n\\nfunction _typeof(o) { \\\"@babel/helpers - typeof\\\"; return _typeof = \\\"function\\\" == typeof Symbol && \\\"symbol\\\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \\\"function\\\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \\\"symbol\\\" : typeof o; }, _typeof(o); }\\nvar _reactDom = _interopRequireDefault(require(\\\"react-dom\\\"));\\nvar _react = _interopRequireWildcard(require(\\\"react\\\"));\\nvar _reactAmap = require(\\\"@uiw/react-amap\\\");\\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \\\"function\\\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || _typeof(obj) !== \\\"object\\\" && typeof obj !== \\\"function\\\") { return { \\\"default\\\": obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \\\"default\\\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj[\\\"default\\\"] = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \\\"default\\\": obj }; }\\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\\nfunction _nonIterableRest() { throw new TypeError(\\\"Invalid attempt to destructure non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\\\"); }\\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \\\"string\\\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \\\"Object\\\" && o.constructor) n = o.constructor.name; if (n === \\\"Map\\\" || n === \\\"Set\\\") return Array.from(o); if (n === \\\"Arguments\\\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\\nfunction _iterableToArrayLimit(r, l) { var t = null == r ? null : \\\"undefined\\\" != typeof Symbol && r[Symbol.iterator] || r[\\\"@@iterator\\\"]; if (null != t) { var e, n, i, u, a = [], f = !0, o = !1; try { if (i = (t = t.call(r)).next, 0 === l) { if (Object(t) !== t) return; f = !1; } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0); } catch (r) { o = !0, n = r; } finally { try { if (!f && null != t[\\\"return\\\"] && (u = t[\\\"return\\\"](), Object(u) !== u)) return; } finally { if (o) throw n; } } return a; } }\\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\\nvar Example = function Example() {\\n  // 多边形轮廓线的节点坐标数组\\n  var path = [[116.403322, 39.920255], [116.410703, 39.897555], [116.402292, 39.892353], [116.389846, 39.891365]];\\n  var _useState = (0, _react.useState)(true),\\n    _useState2 = _slicedToArray(_useState, 2),\\n    show = _useState2[0],\\n    setShow = _useState2[1];\\n  var _useState3 = (0, _react.useState)(false),\\n    _useState4 = _slicedToArray(_useState3, 2),\\n    active = _useState4[0],\\n    setActive = _useState4[1];\\n  var _useState5 = (0, _react.useState)(path),\\n    _useState6 = _slicedToArray(_useState5, 2),\\n    polylinePath = _useState6[0],\\n    setPolylinePath = _useState6[1];\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_react[\\\"default\\\"].Fragment, null, /*#__PURE__*/_react[\\\"default\\\"].createElement(\\\"button\\\", {\\n    onClick: function onClick() {\\n      return setShow(!show);\\n    }\\n  }, show ? '隐藏' : '显示'), /*#__PURE__*/_react[\\\"default\\\"].createElement(\\\"button\\\", {\\n    onClick: function onClick() {\\n      return setActive(!active);\\n    }\\n  }, active ? '结束' : '开始', \\\"\\\\u7F16\\\\u8F91\\\"), /*#__PURE__*/_react[\\\"default\\\"].createElement(\\\"div\\\", {\\n    style: {\\n      width: '100%',\\n      height: '500px'\\n    }\\n  }, /*#__PURE__*/_react[\\\"default\\\"].createElement(_reactAmap.Map, {\\n    zoom: 14,\\n    center: [116.400274, 39.905812]\\n  }, /*#__PURE__*/_react[\\\"default\\\"].createElement(_reactAmap.Polyline, {\\n    visiable: show,\\n    path: polylinePath,\\n    strokeColor: \\\"#FF33FF\\\",\\n    strokeWeight: 6,\\n    strokeOpacity: 0.2,\\n    fillOpacity: 0.4,\\n    fillColor: \\\"#1791fc\\\",\\n    zIndex: 50\\n  }, /*#__PURE__*/_react[\\\"default\\\"].createElement(_reactAmap.PolylineEditor, {\\n    active: active,\\n    onEnd: function onEnd(e) {\\n      console.log('onEnd:>>', e.target.getPath());\\n      setPolylinePath(e.target.getPath());\\n    },\\n    onAdjust: function onAdjust() {\\n      console.log('onAdjust:>>');\\n    },\\n    onAdd: function onAdd() {\\n      console.log('onAdd:>>');\\n    },\\n    onAddnode: function onAddnode() {\\n      console.log('onAddnode:>>');\\n    },\\n    onRemovenode: function onRemovenode() {\\n      console.log('onRemovenode:>>');\\n    }\\n  })))));\\n};\\nvar Mount = function Mount() {\\n  return /*#__PURE__*/_react[\\\"default\\\"].createElement(_reactAmap.APILoader, {\\n    akey: \\\"a7a90e05a37d3f6bf76d4a9032fc9129\\\",\\n    plugin: \\\"AMap.PolylineEditor\\\"\\n  }, /*#__PURE__*/_react[\\\"default\\\"].createElement(Example, null));\\n};\\nreturn Mount;\",\n    \"language\": \"jsx\",\n    \"value\": \"import ReactDOM from 'react-dom';\\nimport React, { useState, useRef } from 'react';\\nimport { Map, APILoader, Polyline, PolylineEditor } from '@uiw/react-amap';\\n\\nconst Example = () => {\\n  // 多边形轮廓线的节点坐标数组\\n  const path = [\\n    [116.403322, 39.920255],\\n    [116.410703, 39.897555],\\n    [116.402292, 39.892353],\\n    [116.389846, 39.891365],\\n  ];\\n  const [show, setShow] = useState(true);\\n  const [active, setActive] = useState(false);\\n  const [polylinePath,setPolylinePath]=useState(path);\\n  \\n  return (\\n    <>\\n      <button onClick={() => setShow(!show)}>\\n        {show ? '隐藏' : '显示'}\\n      </button>\\n      <button onClick={() => setActive(!active)}>\\n        {active ? '结束' : '开始'}编辑\\n      </button>\\n      <div style={{ width: '100%', height: '500px' }}>\\n        <Map zoom={14} center={[116.400274, 39.905812]}>\\n          <Polyline\\n            visiable={show}\\n            path={polylinePath}\\n            strokeColor=\\\"#FF33FF\\\"\\n            strokeWeight={6}\\n            strokeOpacity={0.2}\\n            fillOpacity={0.4}\\n            fillColor=\\\"#1791fc\\\"\\n            zIndex={50}\\n          >\\n            <PolylineEditor\\n              active={active}\\n              onEnd={(e) => {\\n                console.log('onEnd:>>',e.target.getPath());\\n                setPolylinePath(e.target.getPath())\\n              }}\\n              onAdjust={() => {\\n                console.log('onAdjust:>>')\\n              }}\\n              onAdd={() => {\\n                console.log('onAdd:>>')\\n              }}\\n              onAddnode={() => {\\n                console.log('onAddnode:>>')\\n              }}\\n              onRemovenode={() => {\\n                console.log('onRemovenode:>>')\\n              }}\\n            />\\n          </Polyline>\\n        </Map>\\n      </div>\\n    </>\\n  );\\n}\\n\\nconst Mount = () => (\\n  <APILoader akey=\\\"a7a90e05a37d3f6bf76d4a9032fc9129\\\" plugin=\\\"AMap.PolylineEditor\\\">\\n    <Example />\\n  </APILoader>\\n);\\n\\nexport default Mount;\"\n  }\n},\n    source: \"PolylineEditor 编辑器\\n===\\n\\nPolyline 编辑器，此组件只支持AMap JS API v2.0 及以上版本。想在低版本 AMap （如 V1.4.15及以下）中使用拆线编辑功能可以查看 [PolyEditor 编辑器](/react-amap#/poly-editor)。[AMap API](https://lbs.amap.com/api/jsapi-v2/documentation#polylineeditor)。\\n\\n```jsx\\nimport { PolylineEditor } from '@uiw/react-amap';\\n// 或者单独安装使用\\nimport { PolylineEditor } from '@uiw/react-amap-polyline-editor';\\n```\\n\\n### 基本用法\\n\\n注意，需要加载 `<APILoader plugin=\\\"AMap.PolylineEditor\\\">`，需要加载 `AMap.PolylineEditor`<!--rehype:style=background: #ffe3da;color: #ff5722;--> 插件，如果点击进入当前页面，需要 `刷新`<!--rehype:style=background: #e91e63;color: #fff;--> 页面。\\n\\n```jsx\\n<APILoader plugin=\\\"AMap.PolylineEditor\\\">\\n```\\n<!--rehype:style=background: #fff3b7;-->\\n\\n<!--rehype:-->\\n```jsx mdx:preview\\nimport ReactDOM from 'react-dom';\\nimport React, { useState, useRef } from 'react';\\nimport { Map, APILoader, Polyline, PolylineEditor } from '@uiw/react-amap';\\n\\nconst Example = () => {\\n  // 多边形轮廓线的节点坐标数组\\n  const path = [\\n    [116.403322, 39.920255],\\n    [116.410703, 39.897555],\\n    [116.402292, 39.892353],\\n    [116.389846, 39.891365],\\n  ];\\n  const [show, setShow] = useState(true);\\n  const [active, setActive] = useState(false);\\n  const [polylinePath,setPolylinePath]=useState(path);\\n  \\n  return (\\n    <>\\n      <button onClick={() => setShow(!show)}>\\n        {show ? '隐藏' : '显示'}\\n      </button>\\n      <button onClick={() => setActive(!active)}>\\n        {active ? '结束' : '开始'}编辑\\n      </button>\\n      <div style={{ width: '100%', height: '500px' }}>\\n        <Map zoom={14} center={[116.400274, 39.905812]}>\\n          <Polyline\\n            visiable={show}\\n            path={polylinePath}\\n            strokeColor=\\\"#FF33FF\\\"\\n            strokeWeight={6}\\n            strokeOpacity={0.2}\\n            fillOpacity={0.4}\\n            fillColor=\\\"#1791fc\\\"\\n            zIndex={50}\\n          >\\n            <PolylineEditor\\n              active={active}\\n              onEnd={(e) => {\\n                console.log('onEnd:>>',e.target.getPath());\\n                setPolylinePath(e.target.getPath())\\n              }}\\n              onAdjust={() => {\\n                console.log('onAdjust:>>')\\n              }}\\n              onAdd={() => {\\n                console.log('onAdd:>>')\\n              }}\\n              onAddnode={() => {\\n                console.log('onAddnode:>>')\\n              }}\\n              onRemovenode={() => {\\n                console.log('onRemovenode:>>')\\n              }}\\n            />\\n          </Polyline>\\n        </Map>\\n      </div>\\n    </>\\n  );\\n}\\n\\nconst Mount = () => (\\n  <APILoader akey=\\\"a7a90e05a37d3f6bf76d4a9032fc9129\\\" plugin=\\\"AMap.PolylineEditor\\\">\\n    <Example />\\n  </APILoader>\\n);\\n\\nexport default Mount;\\n```\\n\\n### Props\\n\\n| 参数 | 说明 | 类型 | 默认值 |\\n|--------- |-------- |--------- |-------- |\\n| active | 是否开启编辑功能。 | `boolean` | - |\\n| onAddnode | 增加一个节点时触发此事件 | `(data :{target: Polyline, lnglat: Lnglat, pixel: Pixel}): void;` |\\n| onRemovenode | 移除一个节点时触发此事件 | `(data :{target: Polyline, lnglat: Lnglat, pixel: Pixel}): void;` |\\n| onAdjust | 调整折线上某个点时触发此事件 | `(data :{target: Polyline, lnglat: Lnglat, pixel: Pixel}): void;` |\\n| onAdd | 创建一个覆盖物之后触发该事件，target即为创建对象。当editor编辑对象为空时，调用open接口，再点击一次屏幕就会创建新的覆盖物对象 | `(data :{target: Polyline}): void;` |\\n| onEnd | 调用close之后触发该事件，target即为编辑后的覆盖物对象 | `(data :{target: Polyline}): void;` |\",\n    headings:[],\n    headingsList:[],\n  }"],"names":["components","_typeof","o","Symbol","iterator","constructor","prototype","obj","__esModule","_react","nodeInterop","cache","_getRequireWildcardCache","has","get","newObj","hasPropertyDescriptor","Object","defineProperty","getOwnPropertyDescriptor","key","hasOwnProperty","call","desc","set","_interopRequireWildcard","_reactAmap","WeakMap","cacheBabelInterop","cacheNodeInterop","_slicedToArray","arr","i","Array","isArray","_arrayWithHoles","r","l","t","e","n","u","a","f","next","done","push","value","length","_iterableToArrayLimit","minLen","_arrayLikeToArray","toString","slice","name","from","test","_unsupportedIterableToArray","TypeError","_nonIterableRest","len","arr2","Example","_useState2","useState","show","setShow","_useState4","active","setActive","_useState6","polylinePath","setPolylinePath","createElement","Fragment","onClick","style","width","height","Map","zoom","center","Polyline","visiable","path","strokeColor","strokeWeight","strokeOpacity","fillOpacity","fillColor","zIndex","PolylineEditor","onEnd","console","log","target","getPath","onAdjust","onAdd","onAddnode","onRemovenode","APILoader","akey","plugin","data","source","headings","headingsList"],"sourceRoot":""}